{"Xiaoxin Chen": [0, ["Overshadow: a virtualization-based approach to retrofitting protection in commodity operating systems", ["Xiaoxin Chen", "Tal Garfinkel", "E. Christopher Lewis", "Pratap Subrahmanyam", "Carl A. Waldspurger", "Dan Boneh", "Jeffrey S. Dwoskin", "Dan R. K. Ports"], "https://doi.org/10.1145/1346281.1346284", 12, "asplos", 2008]], "Tal Garfinkel": [0, ["Overshadow: a virtualization-based approach to retrofitting protection in commodity operating systems", ["Xiaoxin Chen", "Tal Garfinkel", "E. Christopher Lewis", "Pratap Subrahmanyam", "Carl A. Waldspurger", "Dan Boneh", "Jeffrey S. Dwoskin", "Dan R. K. Ports"], "https://doi.org/10.1145/1346281.1346284", 12, "asplos", 2008]], "E. Christopher Lewis": [0, ["Overshadow: a virtualization-based approach to retrofitting protection in commodity operating systems", ["Xiaoxin Chen", "Tal Garfinkel", "E. Christopher Lewis", "Pratap Subrahmanyam", "Carl A. Waldspurger", "Dan Boneh", "Jeffrey S. Dwoskin", "Dan R. K. Ports"], "https://doi.org/10.1145/1346281.1346284", 12, "asplos", 2008]], "Pratap Subrahmanyam": [0, ["Overshadow: a virtualization-based approach to retrofitting protection in commodity operating systems", ["Xiaoxin Chen", "Tal Garfinkel", "E. Christopher Lewis", "Pratap Subrahmanyam", "Carl A. Waldspurger", "Dan Boneh", "Jeffrey S. Dwoskin", "Dan R. K. Ports"], "https://doi.org/10.1145/1346281.1346284", 12, "asplos", 2008]], "Carl A. Waldspurger": [0, ["Overshadow: a virtualization-based approach to retrofitting protection in commodity operating systems", ["Xiaoxin Chen", "Tal Garfinkel", "E. Christopher Lewis", "Pratap Subrahmanyam", "Carl A. Waldspurger", "Dan Boneh", "Jeffrey S. Dwoskin", "Dan R. K. Ports"], "https://doi.org/10.1145/1346281.1346284", 12, "asplos", 2008]], "Dan Boneh": [0, ["Overshadow: a virtualization-based approach to retrofitting protection in commodity operating systems", ["Xiaoxin Chen", "Tal Garfinkel", "E. Christopher Lewis", "Pratap Subrahmanyam", "Carl A. Waldspurger", "Dan Boneh", "Jeffrey S. Dwoskin", "Dan R. K. Ports"], "https://doi.org/10.1145/1346281.1346284", 12, "asplos", 2008]], "Jeffrey S. Dwoskin": [0, ["Overshadow: a virtualization-based approach to retrofitting protection in commodity operating systems", ["Xiaoxin Chen", "Tal Garfinkel", "E. Christopher Lewis", "Pratap Subrahmanyam", "Carl A. Waldspurger", "Dan Boneh", "Jeffrey S. Dwoskin", "Dan R. K. Ports"], "https://doi.org/10.1145/1346281.1346284", 12, "asplos", 2008]], "Dan R. K. Ports": [0, ["Overshadow: a virtualization-based approach to retrofitting protection in commodity operating systems", ["Xiaoxin Chen", "Tal Garfinkel", "E. Christopher Lewis", "Pratap Subrahmanyam", "Carl A. Waldspurger", "Dan Boneh", "Jeffrey S. Dwoskin", "Dan R. K. Ports"], "https://doi.org/10.1145/1346281.1346284", 12, "asplos", 2008]], "Jonathan M. McCune": [0, ["How low can you go?: recommendations for hardware-supported minimal TCB code execution", ["Jonathan M. McCune", "Bryan Parno", "Adrian Perrig", "Michael K. Reiter", "Arvind Seshadri"], "https://doi.org/10.1145/1346281.1346285", 12, "asplos", 2008]], "Bryan Parno": [0, ["How low can you go?: recommendations for hardware-supported minimal TCB code execution", ["Jonathan M. McCune", "Bryan Parno", "Adrian Perrig", "Michael K. Reiter", "Arvind Seshadri"], "https://doi.org/10.1145/1346281.1346285", 12, "asplos", 2008]], "Adrian Perrig": [0, ["How low can you go?: recommendations for hardware-supported minimal TCB code execution", ["Jonathan M. McCune", "Bryan Parno", "Adrian Perrig", "Michael K. Reiter", "Arvind Seshadri"], "https://doi.org/10.1145/1346281.1346285", 12, "asplos", 2008]], "Michael K. Reiter": [0, ["How low can you go?: recommendations for hardware-supported minimal TCB code execution", ["Jonathan M. McCune", "Bryan Parno", "Adrian Perrig", "Michael K. Reiter", "Arvind Seshadri"], "https://doi.org/10.1145/1346281.1346285", 12, "asplos", 2008]], "Arvind Seshadri": [0, ["How low can you go?: recommendations for hardware-supported minimal TCB code execution", ["Jonathan M. McCune", "Bryan Parno", "Adrian Perrig", "Michael K. Reiter", "Arvind Seshadri"], "https://doi.org/10.1145/1346281.1346285", 12, "asplos", 2008]], "Ravi Bhargava": [0, ["Accelerating two-dimensional page walks for virtualized systems", ["Ravi Bhargava", "Ben Serebrin", "Francesco Spadini", "Srilatha Manne"], "https://doi.org/10.1145/1346281.1346286", 10, "asplos", 2008]], "Ben Serebrin": [0, ["Accelerating two-dimensional page walks for virtualized systems", ["Ravi Bhargava", "Ben Serebrin", "Francesco Spadini", "Srilatha Manne"], "https://doi.org/10.1145/1346281.1346286", 10, "asplos", 2008]], "Francesco Spadini": [0, ["Accelerating two-dimensional page walks for virtualized systems", ["Ravi Bhargava", "Ben Serebrin", "Francesco Spadini", "Srilatha Manne"], "https://doi.org/10.1145/1346281.1346286", 10, "asplos", 2008]], "Srilatha Manne": [0, ["Accelerating two-dimensional page walks for virtualized systems", ["Ravi Bhargava", "Ben Serebrin", "Francesco Spadini", "Srilatha Manne"], "https://doi.org/10.1145/1346281.1346286", 10, "asplos", 2008]], "Benjamin C. Lee": [4.3665677367243916e-05, ["Efficiency trends and limits from comprehensive microarchitectural adaptivity", ["Benjamin C. Lee", "David M. Brooks"], "https://doi.org/10.1145/1346281.1346288", 12, "asplos", 2008]], "David M. Brooks": [0, ["Efficiency trends and limits from comprehensive microarchitectural adaptivity", ["Benjamin C. Lee", "David M. Brooks"], "https://doi.org/10.1145/1346281.1346288", 12, "asplos", 2008]], "Ramya Raghavendra": [0, ["No \"power\" struggles: coordinated multi-level power management for the data center", ["Ramya Raghavendra", "Parthasarathy Ranganathan", "Vanish Talwar", "Zhikui Wang", "Xiaoyun Zhu"], "https://doi.org/10.1145/1346281.1346289", 12, "asplos", 2008]], "Parthasarathy Ranganathan": [0, ["No \"power\" struggles: coordinated multi-level power management for the data center", ["Ramya Raghavendra", "Parthasarathy Ranganathan", "Vanish Talwar", "Zhikui Wang", "Xiaoyun Zhu"], "https://doi.org/10.1145/1346281.1346289", 12, "asplos", 2008]], "Vanish Talwar": [0, ["No \"power\" struggles: coordinated multi-level power management for the data center", ["Ramya Raghavendra", "Parthasarathy Ranganathan", "Vanish Talwar", "Zhikui Wang", "Xiaoyun Zhu"], "https://doi.org/10.1145/1346281.1346289", 12, "asplos", 2008]], "Zhikui Wang": [1.0475706968549048e-08, ["No \"power\" struggles: coordinated multi-level power management for the data center", ["Ramya Raghavendra", "Parthasarathy Ranganathan", "Vanish Talwar", "Zhikui Wang", "Xiaoyun Zhu"], "https://doi.org/10.1145/1346281.1346289", 12, "asplos", 2008]], "Xiaoyun Zhu": [0, ["No \"power\" struggles: coordinated multi-level power management for the data center", ["Ramya Raghavendra", "Parthasarathy Ranganathan", "Vanish Talwar", "Zhikui Wang", "Xiaoyun Zhu"], "https://doi.org/10.1145/1346281.1346289", 12, "asplos", 2008]], "Chinnakrishnan S. Ballapuram": [0, ["Exploiting access semantics and program behavior to reduce snoop power in chip multiprocessors", ["Chinnakrishnan S. Ballapuram", "Ahmad Sharif", "Hsien-Hsin S. Lee"], "https://doi.org/10.1145/1346281.1346290", 10, "asplos", 2008]], "Ahmad Sharif": [0, ["Exploiting access semantics and program behavior to reduce snoop power in chip multiprocessors", ["Chinnakrishnan S. Ballapuram", "Ahmad Sharif", "Hsien-Hsin S. Lee"], "https://doi.org/10.1145/1346281.1346290", 10, "asplos", 2008]], "Hsien-Hsin S. Lee": [3.710788010202748e-09, ["Exploiting access semantics and program behavior to reduce snoop power in chip multiprocessors", ["Chinnakrishnan S. Ballapuram", "Ahmad Sharif", "Hsien-Hsin S. Lee"], "https://doi.org/10.1145/1346281.1346290", 10, "asplos", 2008]], "Arindam Mallik": [0, ["PICSEL: measuring user-perceived performance to control dynamic frequency scaling", ["Arindam Mallik", "Jack Cosgrove", "Robert P. Dick", "Gokhan Memik", "Peter A. Dinda"], "https://doi.org/10.1145/1346281.1346291", 10, "asplos", 2008]], "Jack Cosgrove": [0, ["PICSEL: measuring user-perceived performance to control dynamic frequency scaling", ["Arindam Mallik", "Jack Cosgrove", "Robert P. Dick", "Gokhan Memik", "Peter A. Dinda"], "https://doi.org/10.1145/1346281.1346291", 10, "asplos", 2008]], "Robert P. Dick": [0, ["PICSEL: measuring user-perceived performance to control dynamic frequency scaling", ["Arindam Mallik", "Jack Cosgrove", "Robert P. Dick", "Gokhan Memik", "Peter A. Dinda"], "https://doi.org/10.1145/1346281.1346291", 10, "asplos", 2008]], "Gokhan Memik": [0, ["PICSEL: measuring user-perceived performance to control dynamic frequency scaling", ["Arindam Mallik", "Jack Cosgrove", "Robert P. Dick", "Gokhan Memik", "Peter A. Dinda"], "https://doi.org/10.1145/1346281.1346291", 10, "asplos", 2008]], "Peter A. Dinda": [0, ["PICSEL: measuring user-perceived performance to control dynamic frequency scaling", ["Arindam Mallik", "Jack Cosgrove", "Robert P. Dick", "Gokhan Memik", "Peter A. Dinda"], "https://doi.org/10.1145/1346281.1346291", 10, "asplos", 2008]], "Jose A. Joao": [0, ["Improving the performance of object-oriented languages with dynamic predication of indirect jumps", ["Jose A. Joao", "Onur Mutlu", "Hyesoon Kim", "Rishi Agarwal", "Yale N. Patt"], "https://doi.org/10.1145/1346281.1346293", 11, "asplos", 2008]], "Onur Mutlu": [0, ["Improving the performance of object-oriented languages with dynamic predication of indirect jumps", ["Jose A. Joao", "Onur Mutlu", "Hyesoon Kim", "Rishi Agarwal", "Yale N. Patt"], "https://doi.org/10.1145/1346281.1346293", 11, "asplos", 2008]], "Hyesoon Kim": [0.997093603014946, ["Improving the performance of object-oriented languages with dynamic predication of indirect jumps", ["Jose A. Joao", "Onur Mutlu", "Hyesoon Kim", "Rishi Agarwal", "Yale N. Patt"], "https://doi.org/10.1145/1346281.1346293", 11, "asplos", 2008]], "Rishi Agarwal": [0, ["Improving the performance of object-oriented languages with dynamic predication of indirect jumps", ["Jose A. Joao", "Onur Mutlu", "Hyesoon Kim", "Rishi Agarwal", "Yale N. Patt"], "https://doi.org/10.1145/1346281.1346293", 11, "asplos", 2008]], "Yale N. Patt": [0, ["Improving the performance of object-oriented languages with dynamic predication of indirect jumps", ["Jose A. Joao", "Onur Mutlu", "Hyesoon Kim", "Rishi Agarwal", "Yale N. Patt"], "https://doi.org/10.1145/1346281.1346293", 11, "asplos", 2008], ["Feedback-driven threading: power-efficient and high-performance execution of multi-threaded workloads on CMPs", ["M. Aater Suleman", "Moinuddin K. Qureshi", "Yale N. Patt"], "https://doi.org/10.1145/1346281.1346317", 10, "asplos", 2008]], "Michal Wegiel": [0, ["The mapping collector: virtual memory support for generational, parallel, and concurrent compaction", ["Michal Wegiel", "Chandra Krintz"], "https://doi.org/10.1145/1346281.1346294", 12, "asplos", 2008]], "Chandra Krintz": [0, ["The mapping collector: virtual memory support for generational, parallel, and concurrent compaction", ["Michal Wegiel", "Chandra Krintz"], "https://doi.org/10.1145/1346281.1346294", 12, "asplos", 2008]], "Joe Devietti": [0, ["Hardbound: architectural support for spatial safety of the C programming language", ["Joe Devietti", "Colin Blundell", "Milo M. K. Martin", "Steve Zdancewic"], "https://doi.org/10.1145/1346281.1346295", 12, "asplos", 2008]], "Colin Blundell": [0, ["Hardbound: architectural support for spatial safety of the C programming language", ["Joe Devietti", "Colin Blundell", "Milo M. K. Martin", "Steve Zdancewic"], "https://doi.org/10.1145/1346281.1346295", 12, "asplos", 2008]], "Milo M. K. Martin": [0, ["Hardbound: architectural support for spatial safety of the C programming language", ["Joe Devietti", "Colin Blundell", "Milo M. K. Martin", "Steve Zdancewic"], "https://doi.org/10.1145/1346281.1346295", 12, "asplos", 2008]], "Steve Zdancewic": [0, ["Hardbound: architectural support for spatial safety of the C programming language", ["Joe Devietti", "Colin Blundell", "Milo M. K. Martin", "Steve Zdancewic"], "https://doi.org/10.1145/1346281.1346295", 12, "asplos", 2008]], "Vitaliy B. Lvin": [0, ["Archipelago: trading address space for reliability and security", ["Vitaliy B. Lvin", "Gene Novark", "Emery D. Berger", "Benjamin G. Zorn"], "https://doi.org/10.1145/1346281.1346296", 10, "asplos", 2008]], "Gene Novark": [0, ["Archipelago: trading address space for reliability and security", ["Vitaliy B. Lvin", "Gene Novark", "Emery D. Berger", "Benjamin G. Zorn"], "https://doi.org/10.1145/1346281.1346296", 10, "asplos", 2008]], "Emery D. Berger": [0, ["Archipelago: trading address space for reliability and security", ["Vitaliy B. Lvin", "Gene Novark", "Emery D. Berger", "Benjamin G. Zorn"], "https://doi.org/10.1145/1346281.1346296", 10, "asplos", 2008]], "Benjamin G. Zorn": [0, ["Archipelago: trading address space for reliability and security", ["Vitaliy B. Lvin", "Gene Novark", "Emery D. Berger", "Benjamin G. Zorn"], "https://doi.org/10.1145/1346281.1346296", 10, "asplos", 2008]], "Bumyong Choi": [0.5, ["Accurate branch prediction for short threads", ["Bumyong Choi", "Leo Porter", "Dean M. Tullsen"], "https://doi.org/10.1145/1346281.1346298", 10, "asplos", 2008]], "Leo Porter": [0, ["Accurate branch prediction for short threads", ["Bumyong Choi", "Leo Porter", "Dean M. Tullsen"], "https://doi.org/10.1145/1346281.1346298", 10, "asplos", 2008]], "Dean M. Tullsen": [0, ["Accurate branch prediction for short threads", ["Bumyong Choi", "Leo Porter", "Dean M. Tullsen"], "https://doi.org/10.1145/1346281.1346298", 10, "asplos", 2008]], "Shekhar Srikantaiah": [0, ["Adaptive set pinning: managing shared caches in chip multiprocessors", ["Shekhar Srikantaiah", "Mahmut T. Kandemir", "Mary Jane Irwin"], "https://doi.org/10.1145/1346281.1346299", 10, "asplos", 2008]], "Mahmut T. Kandemir": [0, ["Adaptive set pinning: managing shared caches in chip multiprocessors", ["Shekhar Srikantaiah", "Mahmut T. Kandemir", "Mary Jane Irwin"], "https://doi.org/10.1145/1346281.1346299", 10, "asplos", 2008]], "Mary Jane Irwin": [0, ["Adaptive set pinning: managing shared caches in chip multiprocessors", ["Shekhar Srikantaiah", "Mahmut T. Kandemir", "Mary Jane Irwin"], "https://doi.org/10.1145/1346281.1346299", 10, "asplos", 2008]], "James Tuck": [0, ["SoftSig: software-exposed hardware signatures for code analysis and optimization", ["James Tuck", "Wonsun Ahn", "Luis Ceze", "Josep Torrellas"], "https://doi.org/10.1145/1346281.1346300", 12, "asplos", 2008]], "Wonsun Ahn": [0.9340992420911789, ["SoftSig: software-exposed hardware signatures for code analysis and optimization", ["James Tuck", "Wonsun Ahn", "Luis Ceze", "Josep Torrellas"], "https://doi.org/10.1145/1346281.1346300", 12, "asplos", 2008]], "Luis Ceze": [0, ["SoftSig: software-exposed hardware signatures for code analysis and optimization", ["James Tuck", "Wonsun Ahn", "Luis Ceze", "Josep Torrellas"], "https://doi.org/10.1145/1346281.1346300", 12, "asplos", 2008]], "Josep Torrellas": [0, ["SoftSig: software-exposed hardware signatures for code analysis and optimization", ["James Tuck", "Wonsun Ahn", "Luis Ceze", "Josep Torrellas"], "https://doi.org/10.1145/1346281.1346300", 12, "asplos", 2008]], "Ioana Burcea": [0, ["Predictor virtualization", ["Ioana Burcea", "Stephen Somogyi", "Andreas Moshovos", "Babak Falsafi"], "https://doi.org/10.1145/1346281.1346301", 11, "asplos", 2008]], "Stephen Somogyi": [0, ["Predictor virtualization", ["Ioana Burcea", "Stephen Somogyi", "Andreas Moshovos", "Babak Falsafi"], "https://doi.org/10.1145/1346281.1346301", 11, "asplos", 2008]], "Andreas Moshovos": [0, ["Predictor virtualization", ["Ioana Burcea", "Stephen Somogyi", "Andreas Moshovos", "Babak Falsafi"], "https://doi.org/10.1145/1346281.1346301", 11, "asplos", 2008]], "Babak Falsafi": [0, ["Predictor virtualization", ["Ioana Burcea", "Stephen Somogyi", "Andreas Moshovos", "Babak Falsafi"], "https://doi.org/10.1145/1346281.1346301", 11, "asplos", 2008]], "Vinod Ganapathy": [0, ["The design and implementation of microdrivers", ["Vinod Ganapathy", "Matthew J. Renzelmann", "Arini Balakrishnan", "Michael M. Swift", "Somesh Jha"], "https://doi.org/10.1145/1346281.1346303", 11, "asplos", 2008]], "Matthew J. Renzelmann": [0, ["The design and implementation of microdrivers", ["Vinod Ganapathy", "Matthew J. Renzelmann", "Arini Balakrishnan", "Michael M. Swift", "Somesh Jha"], "https://doi.org/10.1145/1346281.1346303", 11, "asplos", 2008]], "Arini Balakrishnan": [0, ["The design and implementation of microdrivers", ["Vinod Ganapathy", "Matthew J. Renzelmann", "Arini Balakrishnan", "Michael M. Swift", "Somesh Jha"], "https://doi.org/10.1145/1346281.1346303", 11, "asplos", 2008]], "Michael M. Swift": [0, ["The design and implementation of microdrivers", ["Vinod Ganapathy", "Matthew J. Renzelmann", "Arini Balakrishnan", "Michael M. Swift", "Somesh Jha"], "https://doi.org/10.1145/1346281.1346303", 11, "asplos", 2008]], "Somesh Jha": [0, ["The design and implementation of microdrivers", ["Vinod Ganapathy", "Matthew J. Renzelmann", "Arini Balakrishnan", "Michael M. Swift", "Somesh Jha"], "https://doi.org/10.1145/1346281.1346303", 11, "asplos", 2008]], "Yaron Weinsberg": [0, ["Tapping into the fountain of CPUs: on operating system support for programmable devices", ["Yaron Weinsberg", "Danny Dolev", "Tal Anker", "Muli Ben-Yehuda", "Pete Wyckoff"], "https://doi.org/10.1145/1346281.1346304", 10, "asplos", 2008]], "Danny Dolev": [0, ["Tapping into the fountain of CPUs: on operating system support for programmable devices", ["Yaron Weinsberg", "Danny Dolev", "Tal Anker", "Muli Ben-Yehuda", "Pete Wyckoff"], "https://doi.org/10.1145/1346281.1346304", 10, "asplos", 2008]], "Tal Anker": [0, ["Tapping into the fountain of CPUs: on operating system support for programmable devices", ["Yaron Weinsberg", "Danny Dolev", "Tal Anker", "Muli Ben-Yehuda", "Pete Wyckoff"], "https://doi.org/10.1145/1346281.1346304", 10, "asplos", 2008]], "Muli Ben-Yehuda": [0, ["Tapping into the fountain of CPUs: on operating system support for programmable devices", ["Yaron Weinsberg", "Danny Dolev", "Tal Anker", "Muli Ben-Yehuda", "Pete Wyckoff"], "https://doi.org/10.1145/1346281.1346304", 10, "asplos", 2008]], "Pete Wyckoff": [0, ["Tapping into the fountain of CPUs: on operating system support for programmable devices", ["Yaron Weinsberg", "Danny Dolev", "Tal Anker", "Muli Ben-Yehuda", "Pete Wyckoff"], "https://doi.org/10.1145/1346281.1346304", 10, "asplos", 2008]], "Kai Shen": [0, ["Hardware counter driven on-the-fly request signatures", ["Kai Shen", "Ming Zhong", "Sandhya Dwarkadas", "Chuanpeng Li", "Christopher Stewart", "Xiao Zhang"], "https://doi.org/10.1145/1346281.1346306", 12, "asplos", 2008]], "Ming Zhong": [0, ["Hardware counter driven on-the-fly request signatures", ["Kai Shen", "Ming Zhong", "Sandhya Dwarkadas", "Chuanpeng Li", "Christopher Stewart", "Xiao Zhang"], "https://doi.org/10.1145/1346281.1346306", 12, "asplos", 2008]], "Sandhya Dwarkadas": [0, ["Hardware counter driven on-the-fly request signatures", ["Kai Shen", "Ming Zhong", "Sandhya Dwarkadas", "Chuanpeng Li", "Christopher Stewart", "Xiao Zhang"], "https://doi.org/10.1145/1346281.1346306", 12, "asplos", 2008]], "Chuanpeng Li": [0, ["Hardware counter driven on-the-fly request signatures", ["Kai Shen", "Ming Zhong", "Sandhya Dwarkadas", "Chuanpeng Li", "Christopher Stewart", "Xiao Zhang"], "https://doi.org/10.1145/1346281.1346306", 12, "asplos", 2008]], "Christopher Stewart": [0, ["Hardware counter driven on-the-fly request signatures", ["Kai Shen", "Ming Zhong", "Sandhya Dwarkadas", "Chuanpeng Li", "Christopher Stewart", "Xiao Zhang"], "https://doi.org/10.1145/1346281.1346306", 12, "asplos", 2008]], "Xiao Zhang": [0, ["Hardware counter driven on-the-fly request signatures", ["Kai Shen", "Ming Zhong", "Sandhya Dwarkadas", "Chuanpeng Li", "Christopher Stewart", "Xiao Zhang"], "https://doi.org/10.1145/1346281.1346306", 12, "asplos", 2008]], "Luk Van Ertvelde": [0, ["Dispersing proprietary applications as benchmarks through code mutation", ["Luk Van Ertvelde", "Lieven Eeckhout"], "https://doi.org/10.1145/1346281.1346307", 10, "asplos", 2008]], "Lieven Eeckhout": [0, ["Dispersing proprietary applications as benchmarks through code mutation", ["Luk Van Ertvelde", "Lieven Eeckhout"], "https://doi.org/10.1145/1346281.1346307", 10, "asplos", 2008]], "Shashidhar Mysore": [0, ["Understanding and visualizing full systems with data flow tomography", ["Shashidhar Mysore", "Bita Mazloom", "Banit Agrawal", "Timothy Sherwood"], "https://doi.org/10.1145/1346281.1346308", 11, "asplos", 2008]], "Bita Mazloom": [0, ["Understanding and visualizing full systems with data flow tomography", ["Shashidhar Mysore", "Bita Mazloom", "Banit Agrawal", "Timothy Sherwood"], "https://doi.org/10.1145/1346281.1346308", 11, "asplos", 2008]], "Banit Agrawal": [0, ["Understanding and visualizing full systems with data flow tomography", ["Shashidhar Mysore", "Bita Mazloom", "Banit Agrawal", "Timothy Sherwood"], "https://doi.org/10.1145/1346281.1346308", 11, "asplos", 2008]], "Timothy Sherwood": [0, ["Understanding and visualizing full systems with data flow tomography", ["Shashidhar Mysore", "Bita Mazloom", "Banit Agrawal", "Timothy Sherwood"], "https://doi.org/10.1145/1346281.1346308", 11, "asplos", 2008]], "Guilherme Ottoni": [0, ["Communication optimizations for global multi-threaded instruction scheduling", ["Guilherme Ottoni", "David I. August"], "https://doi.org/10.1145/1346281.1346310", 11, "asplos", 2008]], "David I. August": [0, ["Communication optimizations for global multi-threaded instruction scheduling", ["Guilherme Ottoni", "David I. August"], "https://doi.org/10.1145/1346281.1346310", 11, "asplos", 2008]], "Milind Kulkarni": [0, ["Optimistic parallelism benefits from data partitioning", ["Milind Kulkarni", "Keshav Pingali", "Ganesh Ramanarayanan", "Bruce Walter", "Kavita Bala", "L. Paul Chew"], "https://doi.org/10.1145/1346281.1346311", 11, "asplos", 2008]], "Keshav Pingali": [0, ["Optimistic parallelism benefits from data partitioning", ["Milind Kulkarni", "Keshav Pingali", "Ganesh Ramanarayanan", "Bruce Walter", "Kavita Bala", "L. Paul Chew"], "https://doi.org/10.1145/1346281.1346311", 11, "asplos", 2008]], "Ganesh Ramanarayanan": [0, ["Optimistic parallelism benefits from data partitioning", ["Milind Kulkarni", "Keshav Pingali", "Ganesh Ramanarayanan", "Bruce Walter", "Kavita Bala", "L. Paul Chew"], "https://doi.org/10.1145/1346281.1346311", 11, "asplos", 2008]], "Bruce Walter": [0, ["Optimistic parallelism benefits from data partitioning", ["Milind Kulkarni", "Keshav Pingali", "Ganesh Ramanarayanan", "Bruce Walter", "Kavita Bala", "L. Paul Chew"], "https://doi.org/10.1145/1346281.1346311", 11, "asplos", 2008]], "Kavita Bala": [0, ["Optimistic parallelism benefits from data partitioning", ["Milind Kulkarni", "Keshav Pingali", "Ganesh Ramanarayanan", "Bruce Walter", "Kavita Bala", "L. Paul Chew"], "https://doi.org/10.1145/1346281.1346311", 11, "asplos", 2008]], "L. Paul Chew": [0, ["Optimistic parallelism benefits from data partitioning", ["Milind Kulkarni", "Keshav Pingali", "Ganesh Ramanarayanan", "Bruce Walter", "Kavita Bala", "L. Paul Chew"], "https://doi.org/10.1145/1346281.1346311", 11, "asplos", 2008]], "Russ Cox": [0, ["Xoc, an extension-oriented compiler for systems programming", ["Russ Cox", "Tom Bergan", "Austin T. Clements", "M. Frans Kaashoek", "Eddie Kohler"], "https://doi.org/10.1145/1346281.1346312", 11, "asplos", 2008]], "Tom Bergan": [0, ["Xoc, an extension-oriented compiler for systems programming", ["Russ Cox", "Tom Bergan", "Austin T. Clements", "M. Frans Kaashoek", "Eddie Kohler"], "https://doi.org/10.1145/1346281.1346312", 11, "asplos", 2008]], "Austin T. Clements": [0, ["Xoc, an extension-oriented compiler for systems programming", ["Russ Cox", "Tom Bergan", "Austin T. Clements", "M. Frans Kaashoek", "Eddie Kohler"], "https://doi.org/10.1145/1346281.1346312", 11, "asplos", 2008]], "M. Frans Kaashoek": [0, ["Xoc, an extension-oriented compiler for systems programming", ["Russ Cox", "Tom Bergan", "Austin T. Clements", "M. Frans Kaashoek", "Eddie Kohler"], "https://doi.org/10.1145/1346281.1346312", 11, "asplos", 2008]], "Eddie Kohler": [0, ["Xoc, an extension-oriented compiler for systems programming", ["Russ Cox", "Tom Bergan", "Austin T. Clements", "M. Frans Kaashoek", "Eddie Kohler"], "https://doi.org/10.1145/1346281.1346312", 11, "asplos", 2008]], "Philip M. Wells": [0, ["Adapting to intermittent faults in multicore systems", ["Philip M. Wells", "Koushik Chakraborty", "Gurindar S. Sohi"], "https://doi.org/10.1145/1346281.1346314", 10, "asplos", 2008]], "Koushik Chakraborty": [0, ["Adapting to intermittent faults in multicore systems", ["Philip M. Wells", "Koushik Chakraborty", "Gurindar S. Sohi"], "https://doi.org/10.1145/1346281.1346314", 10, "asplos", 2008]], "Gurindar S. Sohi": [0, ["Adapting to intermittent faults in multicore systems", ["Philip M. Wells", "Koushik Chakraborty", "Gurindar S. Sohi"], "https://doi.org/10.1145/1346281.1346314", 10, "asplos", 2008]], "Man-Lap Li": [0, ["Understanding the propagation of hard errors to software and implications for resilient system design", ["Man-Lap Li", "Pradeep Ramachandran", "Swarup Kumar Sahoo", "Sarita V. Adve", "Vikram S. Adve", "Yuanyuan Zhou"], "https://doi.org/10.1145/1346281.1346315", 12, "asplos", 2008]], "Pradeep Ramachandran": [0, ["Understanding the propagation of hard errors to software and implications for resilient system design", ["Man-Lap Li", "Pradeep Ramachandran", "Swarup Kumar Sahoo", "Sarita V. Adve", "Vikram S. Adve", "Yuanyuan Zhou"], "https://doi.org/10.1145/1346281.1346315", 12, "asplos", 2008]], "Swarup Kumar Sahoo": [0, ["Understanding the propagation of hard errors to software and implications for resilient system design", ["Man-Lap Li", "Pradeep Ramachandran", "Swarup Kumar Sahoo", "Sarita V. Adve", "Vikram S. Adve", "Yuanyuan Zhou"], "https://doi.org/10.1145/1346281.1346315", 12, "asplos", 2008]], "Sarita V. Adve": [0, ["Understanding the propagation of hard errors to software and implications for resilient system design", ["Man-Lap Li", "Pradeep Ramachandran", "Swarup Kumar Sahoo", "Sarita V. Adve", "Vikram S. Adve", "Yuanyuan Zhou"], "https://doi.org/10.1145/1346281.1346315", 12, "asplos", 2008]], "Vikram S. Adve": [0, ["Understanding the propagation of hard errors to software and implications for resilient system design", ["Man-Lap Li", "Pradeep Ramachandran", "Swarup Kumar Sahoo", "Sarita V. Adve", "Vikram S. Adve", "Yuanyuan Zhou"], "https://doi.org/10.1145/1346281.1346315", 12, "asplos", 2008]], "Yuanyuan Zhou": [0, ["Understanding the propagation of hard errors to software and implications for resilient system design", ["Man-Lap Li", "Pradeep Ramachandran", "Swarup Kumar Sahoo", "Sarita V. Adve", "Vikram S. Adve", "Yuanyuan Zhou"], "https://doi.org/10.1145/1346281.1346315", 12, "asplos", 2008], ["Learning from mistakes: a comprehensive study on real world concurrency bug characteristics", ["Shan Lu", "Soyeon Park", "Eunsoo Seo", "Yuanyuan Zhou"], "https://doi.org/10.1145/1346281.1346323", 11, "asplos", 2008]], "M. Aater Suleman": [0, ["Feedback-driven threading: power-efficient and high-performance execution of multi-threaded workloads on CMPs", ["M. Aater Suleman", "Moinuddin K. Qureshi", "Yale N. Patt"], "https://doi.org/10.1145/1346281.1346317", 10, "asplos", 2008]], "Moinuddin K. Qureshi": [0, ["Feedback-driven threading: power-efficient and high-performance execution of multi-threaded workloads on CMPs", ["M. Aater Suleman", "Moinuddin K. Qureshi", "Yale N. Patt"], "https://doi.org/10.1145/1346281.1346317", 10, "asplos", 2008]], "Michael D. Linderman": [0, ["Merge: a programming model for heterogeneous multi-core systems", ["Michael D. Linderman", "Jamison D. Collins", "Hong Wang", "Teresa H. Y. Meng"], "https://doi.org/10.1145/1346281.1346318", 10, "asplos", 2008]], "Jamison D. Collins": [0, ["Merge: a programming model for heterogeneous multi-core systems", ["Michael D. Linderman", "Jamison D. Collins", "Hong Wang", "Teresa H. Y. Meng"], "https://doi.org/10.1145/1346281.1346318", 10, "asplos", 2008]], "Hong Wang": [0.00414914614520967, ["Merge: a programming model for heterogeneous multi-core systems", ["Michael D. Linderman", "Jamison D. Collins", "Hong Wang", "Teresa H. Y. Meng"], "https://doi.org/10.1145/1346281.1346318", 10, "asplos", 2008]], "Teresa H. Y. Meng": [0, ["Merge: a programming model for heterogeneous multi-core systems", ["Michael D. Linderman", "Jamison D. Collins", "Hong Wang", "Teresa H. Y. Meng"], "https://doi.org/10.1145/1346281.1346318", 10, "asplos", 2008]], "Jayanth Gummaraju": [0, ["Streamware: programming general-purpose multicore processors using streams", ["Jayanth Gummaraju", "Joel Coburn", "Yoshio Turner", "Mendel Rosenblum"], "https://doi.org/10.1145/1346281.1346319", 11, "asplos", 2008]], "Joel Coburn": [0, ["Streamware: programming general-purpose multicore processors using streams", ["Jayanth Gummaraju", "Joel Coburn", "Yoshio Turner", "Mendel Rosenblum"], "https://doi.org/10.1145/1346281.1346319", 11, "asplos", 2008]], "Yoshio Turner": [0, ["Streamware: programming general-purpose multicore processors using streams", ["Jayanth Gummaraju", "Joel Coburn", "Yoshio Turner", "Mendel Rosenblum"], "https://doi.org/10.1145/1346281.1346319", 11, "asplos", 2008]], "Mendel Rosenblum": [0, ["Streamware: programming general-purpose multicore processors using streams", ["Jayanth Gummaraju", "Joel Coburn", "Yoshio Turner", "Mendel Rosenblum"], "https://doi.org/10.1145/1346281.1346319", 11, "asplos", 2008]], "Edmund B. Nightingale": [0, ["Parallelizing security checks on commodity hardware", ["Edmund B. Nightingale", "Daniel Peek", "Peter M. Chen", "Jason Flinn"], "https://doi.org/10.1145/1346281.1346321", 11, "asplos", 2008]], "Daniel Peek": [0, ["Parallelizing security checks on commodity hardware", ["Edmund B. Nightingale", "Daniel Peek", "Peter M. Chen", "Jason Flinn"], "https://doi.org/10.1145/1346281.1346321", 11, "asplos", 2008]], "Peter M. Chen": [0, ["Parallelizing security checks on commodity hardware", ["Edmund B. Nightingale", "Daniel Peek", "Peter M. Chen", "Jason Flinn"], "https://doi.org/10.1145/1346281.1346321", 11, "asplos", 2008]], "Jason Flinn": [0, ["Parallelizing security checks on commodity hardware", ["Edmund B. Nightingale", "Daniel Peek", "Peter M. Chen", "Jason Flinn"], "https://doi.org/10.1145/1346281.1346321", 11, "asplos", 2008]], "Miguel Castro": [0, ["Better bug reporting with better privacy", ["Miguel Castro", "Manuel Costa", "Jean-Philippe Martin"], "https://doi.org/10.1145/1346281.1346322", 10, "asplos", 2008]], "Manuel Costa": [0, ["Better bug reporting with better privacy", ["Miguel Castro", "Manuel Costa", "Jean-Philippe Martin"], "https://doi.org/10.1145/1346281.1346322", 10, "asplos", 2008]], "Jean-Philippe Martin": [0, ["Better bug reporting with better privacy", ["Miguel Castro", "Manuel Costa", "Jean-Philippe Martin"], "https://doi.org/10.1145/1346281.1346322", 10, "asplos", 2008]], "Shan Lu": [0, ["Learning from mistakes: a comprehensive study on real world concurrency bug characteristics", ["Shan Lu", "Soyeon Park", "Eunsoo Seo", "Yuanyuan Zhou"], "https://doi.org/10.1145/1346281.1346323", 11, "asplos", 2008]], "Soyeon Park": [0.9867839068174362, ["Learning from mistakes: a comprehensive study on real world concurrency bug characteristics", ["Shan Lu", "Soyeon Park", "Eunsoo Seo", "Yuanyuan Zhou"], "https://doi.org/10.1145/1346281.1346323", 11, "asplos", 2008]], "Eunsoo Seo": [0.9995725899934769, ["Learning from mistakes: a comprehensive study on real world concurrency bug characteristics", ["Shan Lu", "Soyeon Park", "Eunsoo Seo", "Yuanyuan Zhou"], "https://doi.org/10.1145/1346281.1346323", 11, "asplos", 2008]], "Erik Winfree": [0, ["Toward molecular programming with DNA", ["Erik Winfree"], "https://doi.org/10.1145/1346281.1346282", 0, "asplos", 2008]]}
{"Roberto Di Cosmo": [0, ["Software heritage: collecting, preserving, and sharing all our source code (keynote)", ["Roberto Di Cosmo"], "https://doi.org/10.1145/3238147.3241985", 2, "ase", 2018]], "Jane Cleland-Huang": [0, ["Automated requirements engineering challenges with examples from small unmanned aerial systems (keynote)", ["Jane Cleland-Huang"], "https://doi.org/10.1145/3238147.3241986", 0, "ase", 2018]], "Lauren Herckis": [0, ["Implementation science for software engineering: bridging the gap between research and practice (keynote)", ["Lauren Herckis"], "https://doi.org/10.1145/3238147.3264581", 0, "ase", 2018]], "Gail C. Murphy": [0, ["The need for context in software engineering (IEEE CS Harlan Mills award keynote)", ["Gail C. Murphy"], "https://doi.org/10.1145/3238147.3241987", 0, "ase", 2018]], "Sarra Habchi": [0, ["On adopting linters to deal with performance concerns in Android apps", ["Sarra Habchi", "Xavier Blanc", "Romain Rouvoy"], "https://doi.org/10.1145/3238147.3238197", 11, "ase", 2018]], "Xavier Blanc": [0, ["On adopting linters to deal with performance concerns in Android apps", ["Sarra Habchi", "Xavier Blanc", "Romain Rouvoy"], "https://doi.org/10.1145/3238147.3238197", 11, "ase", 2018]], "Romain Rouvoy": [0, ["On adopting linters to deal with performance concerns in Android apps", ["Sarra Habchi", "Xavier Blanc", "Romain Rouvoy"], "https://doi.org/10.1145/3238147.3238197", 11, "ase", 2018]], "Xue Han": [1.5237825209624134e-05, ["PerfLearner: learning from bug reports to understand and generate performance test frames", ["Xue Han", "Tingting Yu", "David Lo"], "https://doi.org/10.1145/3238147.3238204", 12, "ase", 2018]], "Tingting Yu": [2.0288515659161455e-11, ["PerfLearner: learning from bug reports to understand and generate performance test frames", ["Xue Han", "Tingting Yu", "David Lo"], "https://doi.org/10.1145/3238147.3238204", 12, "ase", 2018]], "David Lo": [0, ["PerfLearner: learning from bug reports to understand and generate performance test frames", ["Xue Han", "Tingting Yu", "David Lo"], "https://doi.org/10.1145/3238147.3238204", 12, "ase", 2018], ["API method recommendation without worrying about the task-API knowledge gap", ["Qiao Huang", "Xin Xia", "Zhenchang Xing", "David Lo", "Xinyu Wang"], "https://doi.org/10.1145/3238147.3238191", 12, "ase", 2018], ["Neural-machine-translation-based commit message generation: how far are we?", ["Zhongxin Liu", "Xin Xia", "Ahmed E. Hassan", "David Lo", "Zhenchang Xing", "Xinyu Wang"], "https://doi.org/10.1145/3238147.3238190", 12, "ase", 2018]], "Liang Bao": [0, ["AutoConfig: automatic configuration tuning for distributed message systems", ["Liang Bao", "Xin Liu", "Ziheng Xu", "Baoyin Fang"], "https://doi.org/10.1145/3238147.3238175", 12, "ase", 2018]], "Xin Liu": [0, ["AutoConfig: automatic configuration tuning for distributed message systems", ["Liang Bao", "Xin Liu", "Ziheng Xu", "Baoyin Fang"], "https://doi.org/10.1145/3238147.3238175", 12, "ase", 2018]], "Ziheng Xu": [0, ["AutoConfig: automatic configuration tuning for distributed message systems", ["Liang Bao", "Xin Liu", "Ziheng Xu", "Baoyin Fang"], "https://doi.org/10.1145/3238147.3238175", 12, "ase", 2018]], "Baoyin Fang": [0, ["AutoConfig: automatic configuration tuning for distributed message systems", ["Liang Bao", "Xin Liu", "Ziheng Xu", "Baoyin Fang"], "https://doi.org/10.1145/3238147.3238175", 12, "ase", 2018]], "Andrew Habib": [0, ["Is this class thread-safe? inferring documentation using graph-based learning", ["Andrew Habib", "Michael Pradel"], "https://doi.org/10.1145/3238147.3238212", 12, "ase", 2018], ["How many of all bugs do we find? a study of static bug detectors", ["Andrew Habib", "Michael Pradel"], "https://doi.org/10.1145/3238147.3238213", 12, "ase", 2018]], "Michael Pradel": [0, ["Is this class thread-safe? inferring documentation using graph-based learning", ["Andrew Habib", "Michael Pradel"], "https://doi.org/10.1145/3238147.3238212", 12, "ase", 2018], ["How many of all bugs do we find? a study of static bug detectors", ["Andrew Habib", "Michael Pradel"], "https://doi.org/10.1145/3238147.3238213", 12, "ase", 2018]], "Michael Hilton": [0, ["A large-scale study of test coverage evolution", ["Michael Hilton", "Jonathan Bell", "Darko Marinov"], "https://doi.org/10.1145/3238147.3238183", 11, "ase", 2018]], "Jonathan Bell": [0, ["A large-scale study of test coverage evolution", ["Michael Hilton", "Jonathan Bell", "Darko Marinov"], "https://doi.org/10.1145/3238147.3238183", 11, "ase", 2018], ["Replay without recording of production bugs for service oriented applications", ["Nipun Arora", "Jonathan Bell", "Franjo Ivancic", "Gail E. Kaiser", "Baishakhi Ray"], "https://doi.org/10.1145/3238147.3238186", 12, "ase", 2018]], "Darko Marinov": [0, ["A large-scale study of test coverage evolution", ["Michael Hilton", "Jonathan Bell", "Darko Marinov"], "https://doi.org/10.1145/3238147.3238183", 11, "ase", 2018]], "Valerio Terragni": [0, ["Effectiveness and challenges in generating concurrent tests for thread-safe classes", ["Valerio Terragni", "Mauro Pezze"], "https://doi.org/10.1145/3238147.3238224", 12, "ase", 2018]], "Mauro Pezze": [0, ["Effectiveness and challenges in generating concurrent tests for thread-safe classes", ["Valerio Terragni", "Mauro Pezze"], "https://doi.org/10.1145/3238147.3238224", 12, "ase", 2018]], "Gabriel Konat": [0, ["Scalable incremental building with dynamic task dependencies", ["Gabriel Konat", "Sebastian Erdweg", "Eelco Visser"], "https://doi.org/10.1145/3238147.3238196", 11, "ase", 2018]], "Sebastian Erdweg": [0, ["Scalable incremental building with dynamic task dependencies", ["Gabriel Konat", "Sebastian Erdweg", "Eelco Visser"], "https://doi.org/10.1145/3238147.3238196", 11, "ase", 2018]], "Eelco Visser": [0, ["Scalable incremental building with dynamic task dependencies", ["Gabriel Konat", "Sebastian Erdweg", "Eelco Visser"], "https://doi.org/10.1145/3238147.3238196", 11, "ase", 2018]], "Keheliya Gallaba": [0, ["Noise and heterogeneity in historical build data: an empirical study of Travis CI", ["Keheliya Gallaba", "Christian Macho", "Martin Pinzger", "Shane McIntosh"], "https://doi.org/10.1145/3238147.3238171", 11, "ase", 2018]], "Christian Macho": [0, ["Noise and heterogeneity in historical build data: an empirical study of Travis CI", ["Keheliya Gallaba", "Christian Macho", "Martin Pinzger", "Shane McIntosh"], "https://doi.org/10.1145/3238147.3238171", 11, "ase", 2018]], "Martin Pinzger": [0, ["Noise and heterogeneity in historical build data: an empirical study of Travis CI", ["Keheliya Gallaba", "Christian Macho", "Martin Pinzger", "Shane McIntosh"], "https://doi.org/10.1145/3238147.3238171", 11, "ase", 2018]], "Shane McIntosh": [0, ["Noise and heterogeneity in historical build data: an empirical study of Travis CI", ["Keheliya Gallaba", "Christian Macho", "Martin Pinzger", "Shane McIntosh"], "https://doi.org/10.1145/3238147.3238171", 11, "ase", 2018]], "Sakshi Udeshi": [0, ["Automated directed fairness testing", ["Sakshi Udeshi", "Pryanshu Arora", "Sudipta Chattopadhyay"], "https://doi.org/10.1145/3238147.3238165", 11, "ase", 2018]], "Pryanshu Arora": [0, ["Automated directed fairness testing", ["Sakshi Udeshi", "Pryanshu Arora", "Sudipta Chattopadhyay"], "https://doi.org/10.1145/3238147.3238165", 11, "ase", 2018]], "Sudipta Chattopadhyay": [0, ["Automated directed fairness testing", ["Sakshi Udeshi", "Pryanshu Arora", "Sudipta Chattopadhyay"], "https://doi.org/10.1145/3238147.3238165", 11, "ase", 2018]], "Youcheng Sun": [0.010105828056111932, ["Concolic testing for deep neural networks", ["Youcheng Sun", "Min Wu", "Wenjie Ruan", "Xiaowei Huang", "Marta Kwiatkowska", "Daniel Kroening"], "https://doi.org/10.1145/3238147.3238172", 11, "ase", 2018]], "Min Wu": [0.05315091647207737, ["Concolic testing for deep neural networks", ["Youcheng Sun", "Min Wu", "Wenjie Ruan", "Xiaowei Huang", "Marta Kwiatkowska", "Daniel Kroening"], "https://doi.org/10.1145/3238147.3238172", 11, "ase", 2018]], "Wenjie Ruan": [0, ["Concolic testing for deep neural networks", ["Youcheng Sun", "Min Wu", "Wenjie Ruan", "Xiaowei Huang", "Marta Kwiatkowska", "Daniel Kroening"], "https://doi.org/10.1145/3238147.3238172", 11, "ase", 2018]], "Xiaowei Huang": [0, ["Concolic testing for deep neural networks", ["Youcheng Sun", "Min Wu", "Wenjie Ruan", "Xiaowei Huang", "Marta Kwiatkowska", "Daniel Kroening"], "https://doi.org/10.1145/3238147.3238172", 11, "ase", 2018]], "Marta Kwiatkowska": [0, ["Concolic testing for deep neural networks", ["Youcheng Sun", "Min Wu", "Wenjie Ruan", "Xiaowei Huang", "Marta Kwiatkowska", "Daniel Kroening"], "https://doi.org/10.1145/3238147.3238172", 11, "ase", 2018]], "Daniel Kroening": [0, ["Concolic testing for deep neural networks", ["Youcheng Sun", "Min Wu", "Wenjie Ruan", "Xiaowei Huang", "Marta Kwiatkowska", "Daniel Kroening"], "https://doi.org/10.1145/3238147.3238172", 11, "ase", 2018]], "Lei Ma": [0, ["DeepGauge: multi-granularity testing criteria for deep learning systems", ["Lei Ma", "Felix Juefei-Xu", "Fuyuan Zhang", "Jiyuan Sun", "Minhui Xue", "Bo Li", "Chunyang Chen", "Ting Su", "Li Li", "Yang Liu", "Jianjun Zhao", "Yadong Wang"], "https://doi.org/10.1145/3238147.3238202", 12, "ase", 2018]], "Felix Juefei-Xu": [0, ["DeepGauge: multi-granularity testing criteria for deep learning systems", ["Lei Ma", "Felix Juefei-Xu", "Fuyuan Zhang", "Jiyuan Sun", "Minhui Xue", "Bo Li", "Chunyang Chen", "Ting Su", "Li Li", "Yang Liu", "Jianjun Zhao", "Yadong Wang"], "https://doi.org/10.1145/3238147.3238202", 12, "ase", 2018]], "Fuyuan Zhang": [0, ["DeepGauge: multi-granularity testing criteria for deep learning systems", ["Lei Ma", "Felix Juefei-Xu", "Fuyuan Zhang", "Jiyuan Sun", "Minhui Xue", "Bo Li", "Chunyang Chen", "Ting Su", "Li Li", "Yang Liu", "Jianjun Zhao", "Yadong Wang"], "https://doi.org/10.1145/3238147.3238202", 12, "ase", 2018]], "Jiyuan Sun": [0.0019158144132234156, ["DeepGauge: multi-granularity testing criteria for deep learning systems", ["Lei Ma", "Felix Juefei-Xu", "Fuyuan Zhang", "Jiyuan Sun", "Minhui Xue", "Bo Li", "Chunyang Chen", "Ting Su", "Li Li", "Yang Liu", "Jianjun Zhao", "Yadong Wang"], "https://doi.org/10.1145/3238147.3238202", 12, "ase", 2018]], "Minhui Xue": [0, ["DeepGauge: multi-granularity testing criteria for deep learning systems", ["Lei Ma", "Felix Juefei-Xu", "Fuyuan Zhang", "Jiyuan Sun", "Minhui Xue", "Bo Li", "Chunyang Chen", "Ting Su", "Li Li", "Yang Liu", "Jianjun Zhao", "Yadong Wang"], "https://doi.org/10.1145/3238147.3238202", 12, "ase", 2018]], "Bo Li": [0, ["DeepGauge: multi-granularity testing criteria for deep learning systems", ["Lei Ma", "Felix Juefei-Xu", "Fuyuan Zhang", "Jiyuan Sun", "Minhui Xue", "Bo Li", "Chunyang Chen", "Ting Su", "Li Li", "Yang Liu", "Jianjun Zhao", "Yadong Wang"], "https://doi.org/10.1145/3238147.3238202", 12, "ase", 2018]], "Chunyang Chen": [0, ["DeepGauge: multi-granularity testing criteria for deep learning systems", ["Lei Ma", "Felix Juefei-Xu", "Fuyuan Zhang", "Jiyuan Sun", "Minhui Xue", "Bo Li", "Chunyang Chen", "Ting Su", "Li Li", "Yang Liu", "Jianjun Zhao", "Yadong Wang"], "https://doi.org/10.1145/3238147.3238202", 12, "ase", 2018], ["Tell them apart: distilling technology differences from crowd-scale comparison discussions", ["Yi Huang", "Chunyang Chen", "Zhenchang Xing", "Tian Lin", "Yang Liu"], "https://doi.org/10.1145/3238147.3238208", 11, "ase", 2018]], "Ting Su": [0, ["DeepGauge: multi-granularity testing criteria for deep learning systems", ["Lei Ma", "Felix Juefei-Xu", "Fuyuan Zhang", "Jiyuan Sun", "Minhui Xue", "Bo Li", "Chunyang Chen", "Ting Su", "Li Li", "Yang Liu", "Jianjun Zhao", "Yadong Wang"], "https://doi.org/10.1145/3238147.3238202", 12, "ase", 2018], ["Efficiently manifesting asynchronous programming errors in Android apps", ["Lingling Fan", "Ting Su", "Sen Chen", "Guozhu Meng", "Yang Liu", "Lihua Xu", "Geguang Pu"], "https://doi.org/10.1145/3238147.3238170", 12, "ase", 2018]], "Li Li": [0, ["DeepGauge: multi-granularity testing criteria for deep learning systems", ["Lei Ma", "Felix Juefei-Xu", "Fuyuan Zhang", "Jiyuan Sun", "Minhui Xue", "Bo Li", "Chunyang Chen", "Ting Su", "Li Li", "Yang Liu", "Jianjun Zhao", "Yadong Wang"], "https://doi.org/10.1145/3238147.3238202", 12, "ase", 2018]], "Yang Liu": [0, ["DeepGauge: multi-granularity testing criteria for deep learning systems", ["Lei Ma", "Felix Juefei-Xu", "Fuyuan Zhang", "Jiyuan Sun", "Minhui Xue", "Bo Li", "Chunyang Chen", "Ting Su", "Li Li", "Yang Liu", "Jianjun Zhao", "Yadong Wang"], "https://doi.org/10.1145/3238147.3238202", 12, "ase", 2018], ["Tell them apart: distilling technology differences from crowd-scale comparison discussions", ["Yi Huang", "Chunyang Chen", "Zhenchang Xing", "Tian Lin", "Yang Liu"], "https://doi.org/10.1145/3238147.3238208", 11, "ase", 2018], ["Efficiently manifesting asynchronous programming errors in Android apps", ["Lingling Fan", "Ting Su", "Sen Chen", "Guozhu Meng", "Yang Liu", "Lihua Xu", "Geguang Pu"], "https://doi.org/10.1145/3238147.3238170", 12, "ase", 2018], ["ClDiff: generating concise linked code differences", ["Kaifeng Huang", "Bihuan Chen", "Xin Peng", "Daihong Zhou", "Ying Wang", "Yang Liu", "Wenyun Zhao"], "https://doi.org/10.1145/3238147.3238219", 12, "ase", 2018]], "Jianjun Zhao": [0, ["DeepGauge: multi-granularity testing criteria for deep learning systems", ["Lei Ma", "Felix Juefei-Xu", "Fuyuan Zhang", "Jiyuan Sun", "Minhui Xue", "Bo Li", "Chunyang Chen", "Ting Su", "Li Li", "Yang Liu", "Jianjun Zhao", "Yadong Wang"], "https://doi.org/10.1145/3238147.3238202", 12, "ase", 2018]], "Yadong Wang": [0.042813423089683056, ["DeepGauge: multi-granularity testing criteria for deep learning systems", ["Lei Ma", "Felix Juefei-Xu", "Fuyuan Zhang", "Jiyuan Sun", "Minhui Xue", "Bo Li", "Chunyang Chen", "Ting Su", "Li Li", "Yang Liu", "Jianjun Zhao", "Yadong Wang"], "https://doi.org/10.1145/3238147.3238202", 12, "ase", 2018]], "Mengshi Zhang": [0, ["DeepRoad: GAN-based metamorphic testing and input validation framework for autonomous driving systems", ["Mengshi Zhang", "Yuqun Zhang", "Lingming Zhang", "Cong Liu", "Sarfraz Khurshid"], "https://doi.org/10.1145/3238147.3238187", 11, "ase", 2018]], "Yuqun Zhang": [0, ["DeepRoad: GAN-based metamorphic testing and input validation framework for autonomous driving systems", ["Mengshi Zhang", "Yuqun Zhang", "Lingming Zhang", "Cong Liu", "Sarfraz Khurshid"], "https://doi.org/10.1145/3238147.3238187", 11, "ase", 2018]], "Lingming Zhang": [0, ["DeepRoad: GAN-based metamorphic testing and input validation framework for autonomous driving systems", ["Mengshi Zhang", "Yuqun Zhang", "Lingming Zhang", "Cong Liu", "Sarfraz Khurshid"], "https://doi.org/10.1145/3238147.3238187", 11, "ase", 2018]], "Cong Liu": [0, ["DeepRoad: GAN-based metamorphic testing and input validation framework for autonomous driving systems", ["Mengshi Zhang", "Yuqun Zhang", "Lingming Zhang", "Cong Liu", "Sarfraz Khurshid"], "https://doi.org/10.1145/3238147.3238187", 11, "ase", 2018]], "Sarfraz Khurshid": [0, ["DeepRoad: GAN-based metamorphic testing and input validation framework for autonomous driving systems", ["Mengshi Zhang", "Yuqun Zhang", "Lingming Zhang", "Cong Liu", "Sarfraz Khurshid"], "https://doi.org/10.1145/3238147.3238187", 11, "ase", 2018], ["Automated model repair for Alloy", ["Kaiyuan Wang", "Allison Sullivan", "Sarfraz Khurshid"], "https://doi.org/10.1145/3238147.3238162", 12, "ase", 2018]], "Raja Ben Abdessalem": [0, ["Testing autonomous cars for feature interaction failures using many-objective search", ["Raja Ben Abdessalem", "Annibale Panichella", "Shiva Nejati", "Lionel C. Briand", "Thomas Stifter"], "https://doi.org/10.1145/3238147.3238192", 12, "ase", 2018]], "Annibale Panichella": [0, ["Testing autonomous cars for feature interaction failures using many-objective search", ["Raja Ben Abdessalem", "Annibale Panichella", "Shiva Nejati", "Lionel C. Briand", "Thomas Stifter"], "https://doi.org/10.1145/3238147.3238192", 12, "ase", 2018]], "Shiva Nejati": [0, ["Testing autonomous cars for feature interaction failures using many-objective search", ["Raja Ben Abdessalem", "Annibale Panichella", "Shiva Nejati", "Lionel C. Briand", "Thomas Stifter"], "https://doi.org/10.1145/3238147.3238192", 12, "ase", 2018]], "Lionel C. Briand": [0, ["Testing autonomous cars for feature interaction failures using many-objective search", ["Raja Ben Abdessalem", "Annibale Panichella", "Shiva Nejati", "Lionel C. Briand", "Thomas Stifter"], "https://doi.org/10.1145/3238147.3238192", 12, "ase", 2018], ["Model-driven run-time enforcement of complex role-based access control policies", ["Ameni Ben Fadhel", "Domenico Bianculli", "Lionel C. Briand"], "https://doi.org/10.1145/3238147.3238167", 11, "ase", 2018]], "Thomas Stifter": [0, ["Testing autonomous cars for feature interaction failures using many-objective search", ["Raja Ben Abdessalem", "Annibale Panichella", "Shiva Nejati", "Lionel C. Briand", "Thomas Stifter"], "https://doi.org/10.1145/3238147.3238192", 12, "ase", 2018]], "Mukelabai Mukelabai": [0, ["Tackling combinatorial explosion: a study of industrial needs and practices for analyzing highly configurable systems", ["Mukelabai Mukelabai", "Damir Nesic", "Salome Maro", "Thorsten Berger", "Jan-Philipp Steghofer"], "https://doi.org/10.1145/3238147.3238201", 12, "ase", 2018]], "Damir Nesic": [0, ["Tackling combinatorial explosion: a study of industrial needs and practices for analyzing highly configurable systems", ["Mukelabai Mukelabai", "Damir Nesic", "Salome Maro", "Thorsten Berger", "Jan-Philipp Steghofer"], "https://doi.org/10.1145/3238147.3238201", 12, "ase", 2018]], "Salome Maro": [0, ["Tackling combinatorial explosion: a study of industrial needs and practices for analyzing highly configurable systems", ["Mukelabai Mukelabai", "Damir Nesic", "Salome Maro", "Thorsten Berger", "Jan-Philipp Steghofer"], "https://doi.org/10.1145/3238147.3238201", 12, "ase", 2018]], "Thorsten Berger": [0, ["Tackling combinatorial explosion: a study of industrial needs and practices for analyzing highly configurable systems", ["Mukelabai Mukelabai", "Damir Nesic", "Salome Maro", "Thorsten Berger", "Jan-Philipp Steghofer"], "https://doi.org/10.1145/3238147.3238201", 12, "ase", 2018]], "Jan-Philipp Steghofer": [0, ["Tackling combinatorial explosion: a study of industrial needs and practices for analyzing highly configurable systems", ["Mukelabai Mukelabai", "Damir Nesic", "Salome Maro", "Thorsten Berger", "Jan-Philipp Steghofer"], "https://doi.org/10.1145/3238147.3238201", 12, "ase", 2018]], "Dongjie He": [0, ["Understanding and detecting evolution-induced compatibility issues in Android apps", ["Dongjie He", "Lian Li", "Lei Wang", "Hengjie Zheng", "Guangwei Li", "Jingling Xue"], "https://doi.org/10.1145/3238147.3238185", 11, "ase", 2018]], "Lian Li": [0, ["Understanding and detecting evolution-induced compatibility issues in Android apps", ["Dongjie He", "Lian Li", "Lei Wang", "Hengjie Zheng", "Guangwei Li", "Jingling Xue"], "https://doi.org/10.1145/3238147.3238185", 11, "ase", 2018]], "Lei Wang": [0.001596404006704688, ["Understanding and detecting evolution-induced compatibility issues in Android apps", ["Dongjie He", "Lian Li", "Lei Wang", "Hengjie Zheng", "Guangwei Li", "Jingling Xue"], "https://doi.org/10.1145/3238147.3238185", 11, "ase", 2018]], "Hengjie Zheng": [0, ["Understanding and detecting evolution-induced compatibility issues in Android apps", ["Dongjie He", "Lian Li", "Lei Wang", "Hengjie Zheng", "Guangwei Li", "Jingling Xue"], "https://doi.org/10.1145/3238147.3238185", 11, "ase", 2018]], "Guangwei Li": [0, ["Understanding and detecting evolution-induced compatibility issues in Android apps", ["Dongjie He", "Lian Li", "Lei Wang", "Hengjie Zheng", "Guangwei Li", "Jingling Xue"], "https://doi.org/10.1145/3238147.3238185", 11, "ase", 2018]], "Jingling Xue": [0, ["Understanding and detecting evolution-induced compatibility issues in Android apps", ["Dongjie He", "Lian Li", "Lei Wang", "Hengjie Zheng", "Guangwei Li", "Jingling Xue"], "https://doi.org/10.1145/3238147.3238185", 11, "ase", 2018], ["TDroid: exposing app switching attacks in Android with control flow specialization", ["Jie Liu", "Diyu Wu", "Jingling Xue"], "https://doi.org/10.1145/3238147.3238188", 12, "ase", 2018]], "Pinjia He": [0, ["Characterizing the natural language descriptions in software logging statements", ["Pinjia He", "Zhuangbin Chen", "Shilin He", "Michael R. Lyu"], "https://doi.org/10.1145/3238147.3238193", 12, "ase", 2018]], "Zhuangbin Chen": [0, ["Characterizing the natural language descriptions in software logging statements", ["Pinjia He", "Zhuangbin Chen", "Shilin He", "Michael R. Lyu"], "https://doi.org/10.1145/3238147.3238193", 12, "ase", 2018]], "Shilin He": [0, ["Characterizing the natural language descriptions in software logging statements", ["Pinjia He", "Zhuangbin Chen", "Shilin He", "Michael R. Lyu"], "https://doi.org/10.1145/3238147.3238193", 12, "ase", 2018]], "Michael R. Lyu": [0, ["Characterizing the natural language descriptions in software logging statements", ["Pinjia He", "Zhuangbin Chen", "Shilin He", "Michael R. Lyu"], "https://doi.org/10.1145/3238147.3238193", 12, "ase", 2018]], "John-Paul Ore": [0, ["Assessing the type annotation burden", ["John-Paul Ore", "Sebastian G. Elbaum", "Carrick Detweiler", "Lambros Karkazis"], "https://doi.org/10.1145/3238147.3238173", 12, "ase", 2018]], "Sebastian G. Elbaum": [0, ["Assessing the type annotation burden", ["John-Paul Ore", "Sebastian G. Elbaum", "Carrick Detweiler", "Lambros Karkazis"], "https://doi.org/10.1145/3238147.3238173", 12, "ase", 2018]], "Carrick Detweiler": [0, ["Assessing the type annotation burden", ["John-Paul Ore", "Sebastian G. Elbaum", "Carrick Detweiler", "Lambros Karkazis"], "https://doi.org/10.1145/3238147.3238173", 12, "ase", 2018]], "Lambros Karkazis": [0, ["Assessing the type annotation burden", ["John-Paul Ore", "Sebastian G. Elbaum", "Carrick Detweiler", "Lambros Karkazis"], "https://doi.org/10.1145/3238147.3238173", 12, "ase", 2018]], "Vladimir Kovalenko": [0, ["Mining file histories: should we consider branches?", ["Vladimir Kovalenko", "Fabio Palomba", "Alberto Bacchelli"], "https://doi.org/10.1145/3238147.3238169", 12, "ase", 2018]], "Fabio Palomba": [0, ["Mining file histories: should we consider branches?", ["Vladimir Kovalenko", "Fabio Palomba", "Alberto Bacchelli"], "https://doi.org/10.1145/3238147.3238169", 12, "ase", 2018], ["Continuous code quality: are we (really) doing that?", ["Carmine Vassallo", "Fabio Palomba", "Alberto Bacchelli", "Harald C. Gall"], "https://doi.org/10.1145/3238147.3240729", 6, "ase", 2018]], "Alberto Bacchelli": [0, ["Mining file histories: should we consider branches?", ["Vladimir Kovalenko", "Fabio Palomba", "Alberto Bacchelli"], "https://doi.org/10.1145/3238147.3238169", 12, "ase", 2018], ["Continuous code quality: are we (really) doing that?", ["Carmine Vassallo", "Fabio Palomba", "Alberto Bacchelli", "Harald C. Gall"], "https://doi.org/10.1145/3238147.3240729", 6, "ase", 2018]], "Yi Huang": [0, ["Tell them apart: distilling technology differences from crowd-scale comparison discussions", ["Yi Huang", "Chunyang Chen", "Zhenchang Xing", "Tian Lin", "Yang Liu"], "https://doi.org/10.1145/3238147.3238208", 11, "ase", 2018]], "Zhenchang Xing": [0, ["Tell them apart: distilling technology differences from crowd-scale comparison discussions", ["Yi Huang", "Chunyang Chen", "Zhenchang Xing", "Tian Lin", "Yang Liu"], "https://doi.org/10.1145/3238147.3238208", 11, "ase", 2018], ["API method recommendation without worrying about the task-API knowledge gap", ["Qiao Huang", "Xin Xia", "Zhenchang Xing", "David Lo", "Xinyu Wang"], "https://doi.org/10.1145/3238147.3238191", 12, "ase", 2018], ["Neural-machine-translation-based commit message generation: how far are we?", ["Zhongxin Liu", "Xin Xia", "Ahmed E. Hassan", "David Lo", "Zhenchang Xing", "Xinyu Wang"], "https://doi.org/10.1145/3238147.3238190", 12, "ase", 2018]], "Tian Lin": [0, ["Tell them apart: distilling technology differences from crowd-scale comparison discussions", ["Yi Huang", "Chunyang Chen", "Zhenchang Xing", "Tian Lin", "Yang Liu"], "https://doi.org/10.1145/3238147.3238208", 11, "ase", 2018]], "Yuju Shen": [0, ["ReScue: crafting regular expression DoS attacks", ["Yuju Shen", "Yanyan Jiang", "Chang Xu", "Ping Yu", "Xiaoxing Ma", "Jian Lu"], "https://doi.org/10.1145/3238147.3238159", 11, "ase", 2018]], "Yanyan Jiang": [0, ["ReScue: crafting regular expression DoS attacks", ["Yuju Shen", "Yanyan Jiang", "Chang Xu", "Ping Yu", "Xiaoxing Ma", "Jian Lu"], "https://doi.org/10.1145/3238147.3238159", 11, "ase", 2018]], "Chang Xu": [0, ["ReScue: crafting regular expression DoS attacks", ["Yuju Shen", "Yanyan Jiang", "Chang Xu", "Ping Yu", "Xiaoxing Ma", "Jian Lu"], "https://doi.org/10.1145/3238147.3238159", 11, "ase", 2018]], "Ping Yu": [4.002336663688766e-05, ["ReScue: crafting regular expression DoS attacks", ["Yuju Shen", "Yanyan Jiang", "Chang Xu", "Ping Yu", "Xiaoxing Ma", "Jian Lu"], "https://doi.org/10.1145/3238147.3238159", 11, "ase", 2018]], "Xiaoxing Ma": [0, ["ReScue: crafting regular expression DoS attacks", ["Yuju Shen", "Yanyan Jiang", "Chang Xu", "Ping Yu", "Xiaoxing Ma", "Jian Lu"], "https://doi.org/10.1145/3238147.3238159", 11, "ase", 2018]], "Jian Lu": [0, ["ReScue: crafting regular expression DoS attacks", ["Yuju Shen", "Yanyan Jiang", "Chang Xu", "Ping Yu", "Xiaoxing Ma", "Jian Lu"], "https://doi.org/10.1145/3238147.3238159", 11, "ase", 2018]], "Jie Liu": [0, ["TDroid: exposing app switching attacks in Android with control flow specialization", ["Jie Liu", "Diyu Wu", "Jingling Xue"], "https://doi.org/10.1145/3238147.3238188", 12, "ase", 2018]], "Diyu Wu": [0.02556072548031807, ["TDroid: exposing app switching attacks in Android with control flow specialization", ["Jie Liu", "Diyu Wu", "Jingling Xue"], "https://doi.org/10.1145/3238147.3238188", 12, "ase", 2018]], "Ameni Ben Fadhel": [0, ["Model-driven run-time enforcement of complex role-based access control policies", ["Ameni Ben Fadhel", "Domenico Bianculli", "Lionel C. Briand"], "https://doi.org/10.1145/3238147.3238167", 11, "ase", 2018]], "Domenico Bianculli": [0, ["Model-driven run-time enforcement of complex role-based access control policies", ["Ameni Ben Fadhel", "Domenico Bianculli", "Lionel C. Briand"], "https://doi.org/10.1145/3238147.3238167", 11, "ase", 2018]], "Bo Jiang": [0, ["ContractFuzzer: fuzzing smart contracts for vulnerability detection", ["Bo Jiang", "Ye Liu", "W. K. Chan"], "https://doi.org/10.1145/3238147.3238177", 11, "ase", 2018]], "Ye Liu": [0, ["ContractFuzzer: fuzzing smart contracts for vulnerability detection", ["Bo Jiang", "Ye Liu", "W. K. Chan"], "https://doi.org/10.1145/3238147.3238177", 11, "ase", 2018]], "W. K. Chan": [0, ["ContractFuzzer: fuzzing smart contracts for vulnerability detection", ["Bo Jiang", "Ye Liu", "W. K. Chan"], "https://doi.org/10.1145/3238147.3238177", 11, "ase", 2018]], "Steven P. Reiss": [0, ["SEEDE: simultaneous execution and editing in a development environment", ["Steven P. Reiss", "Qi Xin", "Jeff Huang"], "https://doi.org/10.1145/3238147.3238182", 12, "ase", 2018]], "Qi Xin": [0, ["SEEDE: simultaneous execution and editing in a development environment", ["Steven P. Reiss", "Qi Xin", "Jeff Huang"], "https://doi.org/10.1145/3238147.3238182", 12, "ase", 2018]], "Jeff Huang": [0, ["SEEDE: simultaneous execution and editing in a development environment", ["Steven P. Reiss", "Qi Xin", "Jeff Huang"], "https://doi.org/10.1145/3238147.3238182", 12, "ase", 2018]], "Xiaoyu Liu": [0, ["Effective API recommendation without historical software repositories", ["Xiaoyu Liu", "LiGuo Huang", "Vincent Ng"], "https://doi.org/10.1145/3238147.3238216", 11, "ase", 2018]], "LiGuo Huang": [0, ["Effective API recommendation without historical software repositories", ["Xiaoyu Liu", "LiGuo Huang", "Vincent Ng"], "https://doi.org/10.1145/3238147.3238216", 11, "ase", 2018]], "Vincent Ng": [0, ["Effective API recommendation without historical software repositories", ["Xiaoyu Liu", "LiGuo Huang", "Vincent Ng"], "https://doi.org/10.1145/3238147.3238216", 11, "ase", 2018]], "Qiao Huang": [0, ["API method recommendation without worrying about the task-API knowledge gap", ["Qiao Huang", "Xin Xia", "Zhenchang Xing", "David Lo", "Xinyu Wang"], "https://doi.org/10.1145/3238147.3238191", 12, "ase", 2018]], "Xin Xia": [0, ["API method recommendation without worrying about the task-API knowledge gap", ["Qiao Huang", "Xin Xia", "Zhenchang Xing", "David Lo", "Xinyu Wang"], "https://doi.org/10.1145/3238147.3238191", 12, "ase", 2018], ["Neural-machine-translation-based commit message generation: how far are we?", ["Zhongxin Liu", "Xin Xia", "Ahmed E. Hassan", "David Lo", "Zhenchang Xing", "Xinyu Wang"], "https://doi.org/10.1145/3238147.3238190", 12, "ase", 2018]], "Xinyu Wang": [0.0004145874409005046, ["API method recommendation without worrying about the task-API knowledge gap", ["Qiao Huang", "Xin Xia", "Zhenchang Xing", "David Lo", "Xinyu Wang"], "https://doi.org/10.1145/3238147.3238191", 12, "ase", 2018], ["Neural-machine-translation-based commit message generation: how far are we?", ["Zhongxin Liu", "Xin Xia", "Ahmed E. Hassan", "David Lo", "Zhenchang Xing", "Xinyu Wang"], "https://doi.org/10.1145/3238147.3238190", 12, "ase", 2018]], "Boyuan Chen": [0, ["An automated approach to estimating code coverage measures via execution logs", ["Boyuan Chen", "Jian Song", "Peng Xu", "Xing Hu", "Zhen Ming Jack Jiang"], "https://doi.org/10.1145/3238147.3238214", 12, "ase", 2018]], "Jian Song": [0.4041376858949661, ["An automated approach to estimating code coverage measures via execution logs", ["Boyuan Chen", "Jian Song", "Peng Xu", "Xing Hu", "Zhen Ming Jack Jiang"], "https://doi.org/10.1145/3238147.3238214", 12, "ase", 2018]], "Peng Xu": [0, ["An automated approach to estimating code coverage measures via execution logs", ["Boyuan Chen", "Jian Song", "Peng Xu", "Xing Hu", "Zhen Ming Jack Jiang"], "https://doi.org/10.1145/3238147.3238214", 12, "ase", 2018]], "Xing Hu": [0, ["An automated approach to estimating code coverage measures via execution logs", ["Boyuan Chen", "Jian Song", "Peng Xu", "Xing Hu", "Zhen Ming Jack Jiang"], "https://doi.org/10.1145/3238147.3238214", 12, "ase", 2018]], "Zhen Ming Jack Jiang": [0, ["An automated approach to estimating code coverage measures via execution logs", ["Boyuan Chen", "Jian Song", "Peng Xu", "Xing Hu", "Zhen Ming Jack Jiang"], "https://doi.org/10.1145/3238147.3238214", 12, "ase", 2018]], "Hashim Sharif": [0, ["TRIMMER: application specialization for code debloating", ["Hashim Sharif", "Muhammad Abubakar", "Ashish Gehani", "Fareed Zaffar"], "https://doi.org/10.1145/3238147.3238160", 11, "ase", 2018]], "Muhammad Abubakar": [0, ["TRIMMER: application specialization for code debloating", ["Hashim Sharif", "Muhammad Abubakar", "Ashish Gehani", "Fareed Zaffar"], "https://doi.org/10.1145/3238147.3238160", 11, "ase", 2018]], "Ashish Gehani": [0, ["TRIMMER: application specialization for code debloating", ["Hashim Sharif", "Muhammad Abubakar", "Ashish Gehani", "Fareed Zaffar"], "https://doi.org/10.1145/3238147.3238160", 11, "ase", 2018]], "Fareed Zaffar": [0, ["TRIMMER: application specialization for code debloating", ["Hashim Sharif", "Muhammad Abubakar", "Ashish Gehani", "Fareed Zaffar"], "https://doi.org/10.1145/3238147.3238160", 11, "ase", 2018]], "Dominik Helm": [0, ["A unified lattice model and framework for purity analyses", ["Dominik Helm", "Florian Kubler", "Michael Eichberg", "Michael Reif", "Mira Mezini"], "https://doi.org/10.1145/3238147.3238226", 11, "ase", 2018]], "Florian Kubler": [0, ["A unified lattice model and framework for purity analyses", ["Dominik Helm", "Florian Kubler", "Michael Eichberg", "Michael Reif", "Mira Mezini"], "https://doi.org/10.1145/3238147.3238226", 11, "ase", 2018]], "Michael Eichberg": [0, ["A unified lattice model and framework for purity analyses", ["Dominik Helm", "Florian Kubler", "Michael Eichberg", "Michael Reif", "Mira Mezini"], "https://doi.org/10.1145/3238147.3238226", 11, "ase", 2018]], "Michael Reif": [0, ["A unified lattice model and framework for purity analyses", ["Dominik Helm", "Florian Kubler", "Michael Eichberg", "Michael Reif", "Mira Mezini"], "https://doi.org/10.1145/3238147.3238226", 11, "ase", 2018]], "Mira Mezini": [0, ["A unified lattice model and framework for purity analyses", ["Dominik Helm", "Florian Kubler", "Michael Eichberg", "Michael Reif", "Mira Mezini"], "https://doi.org/10.1145/3238147.3238226", 11, "ase", 2018]], "Jianhui Chen": [0, ["Control flow-guided SMT solving for program verification", ["Jianhui Chen", "Fei He"], "https://doi.org/10.1145/3238147.3238218", 11, "ase", 2018]], "Fei He": [0, ["Control flow-guided SMT solving for program verification", ["Jianhui Chen", "Fei He"], "https://doi.org/10.1145/3238147.3238218", 11, "ase", 2018]], "Yutaka Nagashima": [0, ["PaMpeR: proof method recommendation system for Isabelle/HOL", ["Yutaka Nagashima", "Yilun He"], "https://doi.org/10.1145/3238147.3238210", 11, "ase", 2018]], "Yilun He": [0, ["PaMpeR: proof method recommendation system for Isabelle/HOL", ["Yutaka Nagashima", "Yilun He"], "https://doi.org/10.1145/3238147.3238210", 11, "ase", 2018]], "Zhongxin Liu": [0, ["Neural-machine-translation-based commit message generation: how far are we?", ["Zhongxin Liu", "Xin Xia", "Ahmed E. Hassan", "David Lo", "Zhenchang Xing", "Xinyu Wang"], "https://doi.org/10.1145/3238147.3238190", 12, "ase", 2018]], "Ahmed E. Hassan": [0, ["Neural-machine-translation-based commit message generation: how far are we?", ["Zhongxin Liu", "Xin Xia", "Ahmed E. Hassan", "David Lo", "Zhenchang Xing", "Xinyu Wang"], "https://doi.org/10.1145/3238147.3238190", 12, "ase", 2018]], "Hui Liu": [0, ["Deep learning based feature envy detection", ["Hui Liu", "Zhifeng Xu", "Yanzhen Zou"], "https://doi.org/10.1145/3238147.3238166", 12, "ase", 2018]], "Zhifeng Xu": [0, ["Deep learning based feature envy detection", ["Hui Liu", "Zhifeng Xu", "Yanzhen Zou"], "https://doi.org/10.1145/3238147.3238166", 12, "ase", 2018]], "Yanzhen Zou": [0, ["Deep learning based feature envy detection", ["Hui Liu", "Zhifeng Xu", "Yanzhen Zou"], "https://doi.org/10.1145/3238147.3238166", 12, "ase", 2018]], "Yao Wan": [0, ["Improving automatic source code summarization via deep reinforcement learning", ["Yao Wan", "Zhou Zhao", "Min Yang", "Guandong Xu", "Haochao Ying", "Jian Wu", "Philip S. Yu"], "https://doi.org/10.1145/3238147.3238206", 11, "ase", 2018]], "Zhou Zhao": [0, ["Improving automatic source code summarization via deep reinforcement learning", ["Yao Wan", "Zhou Zhao", "Min Yang", "Guandong Xu", "Haochao Ying", "Jian Wu", "Philip S. Yu"], "https://doi.org/10.1145/3238147.3238206", 11, "ase", 2018]], "Min Yang": [0.05315091647207737, ["Improving automatic source code summarization via deep reinforcement learning", ["Yao Wan", "Zhou Zhao", "Min Yang", "Guandong Xu", "Haochao Ying", "Jian Wu", "Philip S. Yu"], "https://doi.org/10.1145/3238147.3238206", 11, "ase", 2018]], "Guandong Xu": [0, ["Improving automatic source code summarization via deep reinforcement learning", ["Yao Wan", "Zhou Zhao", "Min Yang", "Guandong Xu", "Haochao Ying", "Jian Wu", "Philip S. Yu"], "https://doi.org/10.1145/3238147.3238206", 11, "ase", 2018]], "Haochao Ying": [0, ["Improving automatic source code summarization via deep reinforcement learning", ["Yao Wan", "Zhou Zhao", "Min Yang", "Guandong Xu", "Haochao Ying", "Jian Wu", "Philip S. Yu"], "https://doi.org/10.1145/3238147.3238206", 11, "ase", 2018]], "Jian Wu": [0.4041376858949661, ["Improving automatic source code summarization via deep reinforcement learning", ["Yao Wan", "Zhou Zhao", "Min Yang", "Guandong Xu", "Haochao Ying", "Jian Wu", "Philip S. Yu"], "https://doi.org/10.1145/3238147.3238206", 11, "ase", 2018]], "Philip S. Yu": [0.05248582921922207, ["Improving automatic source code summarization via deep reinforcement learning", ["Yao Wan", "Zhou Zhao", "Min Yang", "Guandong Xu", "Haochao Ying", "Jian Wu", "Philip S. Yu"], "https://doi.org/10.1145/3238147.3238206", 11, "ase", 2018]], "Sooyoung Cha": [0.9948376417160034, ["Template-guided concolic testing via online learning", ["Sooyoung Cha", "Seonho Lee", "Hakjoo Oh"], "https://doi.org/10.1145/3238147.3238227", 11, "ase", 2018]], "Seonho Lee": [0.9996142089366913, ["Template-guided concolic testing via online learning", ["Sooyoung Cha", "Seonho Lee", "Hakjoo Oh"], "https://doi.org/10.1145/3238147.3238227", 11, "ase", 2018]], "Hakjoo Oh": [1, ["Template-guided concolic testing via online learning", ["Sooyoung Cha", "Seonho Lee", "Hakjoo Oh"], "https://doi.org/10.1145/3238147.3238227", 11, "ase", 2018]], "Xiang Gao": [0, ["Android testing via synthetic symbolic execution", ["Xiang Gao", "Shin Hwei Tan", "Zhen Dong", "Abhik Roychoudhury"], "https://doi.org/10.1145/3238147.3238225", 11, "ase", 2018]], "Shin Hwei Tan": [0, ["Android testing via synthetic symbolic execution", ["Xiang Gao", "Shin Hwei Tan", "Zhen Dong", "Abhik Roychoudhury"], "https://doi.org/10.1145/3238147.3238225", 11, "ase", 2018]], "Zhen Dong": [9.011092458877101e-07, ["Android testing via synthetic symbolic execution", ["Xiang Gao", "Shin Hwei Tan", "Zhen Dong", "Abhik Roychoudhury"], "https://doi.org/10.1145/3238147.3238225", 11, "ase", 2018]], "Abhik Roychoudhury": [0, ["Android testing via synthetic symbolic execution", ["Xiang Gao", "Shin Hwei Tan", "Zhen Dong", "Abhik Roychoudhury"], "https://doi.org/10.1145/3238147.3238225", 11, "ase", 2018]], "Oscar Soria Dustmann": [0, ["PARTI: a multi-interval theory solver for symbolic execution", ["Oscar Soria Dustmann", "Klaus Wehrle", "Cristian Cadar"], "https://doi.org/10.1145/3238147.3238179", 11, "ase", 2018]], "Klaus Wehrle": [0, ["PARTI: a multi-interval theory solver for symbolic execution", ["Oscar Soria Dustmann", "Klaus Wehrle", "Cristian Cadar"], "https://doi.org/10.1145/3238147.3238179", 11, "ase", 2018]], "Cristian Cadar": [0, ["PARTI: a multi-interval theory solver for symbolic execution", ["Oscar Soria Dustmann", "Klaus Wehrle", "Cristian Cadar"], "https://doi.org/10.1145/3238147.3238179", 11, "ase", 2018]], "Federico Mora": [0, ["Client-specific equivalence checking", ["Federico Mora", "Yi Li", "Julia Rubin", "Marsha Chechik"], "https://doi.org/10.1145/3238147.3238178", 11, "ase", 2018]], "Yi Li": [0, ["Client-specific equivalence checking", ["Federico Mora", "Yi Li", "Julia Rubin", "Marsha Chechik"], "https://doi.org/10.1145/3238147.3238178", 11, "ase", 2018]], "Julia Rubin": [0, ["Client-specific equivalence checking", ["Federico Mora", "Yi Li", "Julia Rubin", "Marsha Chechik"], "https://doi.org/10.1145/3238147.3238178", 11, "ase", 2018]], "Marsha Chechik": [0, ["Client-specific equivalence checking", ["Federico Mora", "Yi Li", "Julia Rubin", "Marsha Chechik"], "https://doi.org/10.1145/3238147.3238178", 11, "ase", 2018]], "Nipun Arora": [0, ["Replay without recording of production bugs for service oriented applications", ["Nipun Arora", "Jonathan Bell", "Franjo Ivancic", "Gail E. Kaiser", "Baishakhi Ray"], "https://doi.org/10.1145/3238147.3238186", 12, "ase", 2018]], "Franjo Ivancic": [0, ["Replay without recording of production bugs for service oriented applications", ["Nipun Arora", "Jonathan Bell", "Franjo Ivancic", "Gail E. Kaiser", "Baishakhi Ray"], "https://doi.org/10.1145/3238147.3238186", 12, "ase", 2018]], "Gail E. Kaiser": [0, ["Replay without recording of production bugs for service oriented applications", ["Nipun Arora", "Jonathan Bell", "Franjo Ivancic", "Gail E. Kaiser", "Baishakhi Ray"], "https://doi.org/10.1145/3238147.3238186", 12, "ase", 2018]], "Baishakhi Ray": [0, ["Replay without recording of production bugs for service oriented applications", ["Nipun Arora", "Jonathan Bell", "Franjo Ivancic", "Gail E. Kaiser", "Baishakhi Ray"], "https://doi.org/10.1145/3238147.3238186", 12, "ase", 2018]], "Vahid Alizadeh": [0, ["Reducing interactive refactoring effort via clustering-based multi-objective search", ["Vahid Alizadeh", "Marouane Kessentini"], "https://doi.org/10.1145/3238147.3238217", 11, "ase", 2018]], "Marouane Kessentini": [0, ["Reducing interactive refactoring effort via clustering-based multi-objective search", ["Vahid Alizadeh", "Marouane Kessentini"], "https://doi.org/10.1145/3238147.3238217", 11, "ase", 2018]], "Caroline Lemieux": [0, ["FairFuzz: a targeted mutation strategy for increasing greybox fuzz testing coverage", ["Caroline Lemieux", "Koushik Sen"], "https://doi.org/10.1145/3238147.3238176", 11, "ase", 2018]], "Koushik Sen": [0, ["FairFuzz: a targeted mutation strategy for increasing greybox fuzz testing coverage", ["Caroline Lemieux", "Koushik Sen"], "https://doi.org/10.1145/3238147.3238176", 11, "ase", 2018]], "Lingling Fan": [0, ["Efficiently manifesting asynchronous programming errors in Android apps", ["Lingling Fan", "Ting Su", "Sen Chen", "Guozhu Meng", "Yang Liu", "Lihua Xu", "Geguang Pu"], "https://doi.org/10.1145/3238147.3238170", 12, "ase", 2018]], "Sen Chen": [0, ["Efficiently manifesting asynchronous programming errors in Android apps", ["Lingling Fan", "Ting Su", "Sen Chen", "Guozhu Meng", "Yang Liu", "Lihua Xu", "Geguang Pu"], "https://doi.org/10.1145/3238147.3238170", 12, "ase", 2018]], "Guozhu Meng": [0, ["Efficiently manifesting asynchronous programming errors in Android apps", ["Lingling Fan", "Ting Su", "Sen Chen", "Guozhu Meng", "Yang Liu", "Lihua Xu", "Geguang Pu"], "https://doi.org/10.1145/3238147.3238170", 12, "ase", 2018]], "Lihua Xu": [0, ["Efficiently manifesting asynchronous programming errors in Android apps", ["Lingling Fan", "Ting Su", "Sen Chen", "Guozhu Meng", "Yang Liu", "Lihua Xu", "Geguang Pu"], "https://doi.org/10.1145/3238147.3238170", 12, "ase", 2018]], "Geguang Pu": [0, ["Efficiently manifesting asynchronous programming errors in Android apps", ["Lingling Fan", "Ting Su", "Sen Chen", "Guozhu Meng", "Yang Liu", "Lihua Xu", "Geguang Pu"], "https://doi.org/10.1145/3238147.3238170", 12, "ase", 2018]], "Wensheng Dou": [0, ["Expandable group identification in spreadsheets", ["Wensheng Dou", "Shi Han", "Liang Xu", "Dongmei Zhang", "Jun Wei"], "https://doi.org/10.1145/3238147.3238222", 11, "ase", 2018]], "Shi Han": [0.0013529375719372183, ["Expandable group identification in spreadsheets", ["Wensheng Dou", "Shi Han", "Liang Xu", "Dongmei Zhang", "Jun Wei"], "https://doi.org/10.1145/3238147.3238222", 11, "ase", 2018]], "Liang Xu": [0, ["Expandable group identification in spreadsheets", ["Wensheng Dou", "Shi Han", "Liang Xu", "Dongmei Zhang", "Jun Wei"], "https://doi.org/10.1145/3238147.3238222", 11, "ase", 2018]], "Dongmei Zhang": [0, ["Expandable group identification in spreadsheets", ["Wensheng Dou", "Shi Han", "Liang Xu", "Dongmei Zhang", "Jun Wei"], "https://doi.org/10.1145/3238147.3238222", 11, "ase", 2018]], "Jun Wei": [0, ["Expandable group identification in spreadsheets", ["Wensheng Dou", "Shi Han", "Liang Xu", "Dongmei Zhang", "Jun Wei"], "https://doi.org/10.1145/3238147.3238222", 11, "ase", 2018]], "Yun Lin": [0, ["Break the dead end of dynamic slicing: localizing data and control omission bug", ["Yun Lin", "Jun Sun", "Lyly Tran", "Guangdong Bai", "Haijun Wang", "Jin Song Dong"], "https://doi.org/10.1145/3238147.3238163", 11, "ase", 2018]], "Jun Sun": [0.07243934646248817, ["Break the dead end of dynamic slicing: localizing data and control omission bug", ["Yun Lin", "Jun Sun", "Lyly Tran", "Guangdong Bai", "Haijun Wang", "Jin Song Dong"], "https://doi.org/10.1145/3238147.3238163", 11, "ase", 2018], ["PFix: fixing concurrency bugs based on memory access patterns", ["Huarui Lin", "Zan Wang", "Shuang Liu", "Jun Sun", "Dongdi Zhang", "Guangning Wei"], "https://doi.org/10.1145/3238147.3238198", 12, "ase", 2018], ["Delta debugging microservice systems", ["Xiang Zhou", "Xin Peng", "Tao Xie", "Jun Sun", "Wenhai Li", "Chao Ji", "Dan Ding"], "https://doi.org/10.1145/3238147.3240730", 6, "ase", 2018]], "Lyly Tran": [0, ["Break the dead end of dynamic slicing: localizing data and control omission bug", ["Yun Lin", "Jun Sun", "Lyly Tran", "Guangdong Bai", "Haijun Wang", "Jin Song Dong"], "https://doi.org/10.1145/3238147.3238163", 11, "ase", 2018]], "Guangdong Bai": [0.00010528434359002858, ["Break the dead end of dynamic slicing: localizing data and control omission bug", ["Yun Lin", "Jun Sun", "Lyly Tran", "Guangdong Bai", "Haijun Wang", "Jin Song Dong"], "https://doi.org/10.1145/3238147.3238163", 11, "ase", 2018]], "Haijun Wang": [0.0018965410999953747, ["Break the dead end of dynamic slicing: localizing data and control omission bug", ["Yun Lin", "Jun Sun", "Lyly Tran", "Guangdong Bai", "Haijun Wang", "Jin Song Dong"], "https://doi.org/10.1145/3238147.3238163", 11, "ase", 2018]], "Jin Song Dong": [0.020216914359480143, ["Break the dead end of dynamic slicing: localizing data and control omission bug", ["Yun Lin", "Jun Sun", "Lyly Tran", "Guangdong Bai", "Haijun Wang", "Jin Song Dong"], "https://doi.org/10.1145/3238147.3238163", 11, "ase", 2018]], "Renzo Degiovanni": [0, ["A genetic algorithm for goal-conflict identification", ["Renzo Degiovanni", "Facundo Molina", "German Regis", "Nazareno Aguirre"], "https://doi.org/10.1145/3238147.3238220", 12, "ase", 2018]], "Facundo Molina": [0, ["A genetic algorithm for goal-conflict identification", ["Renzo Degiovanni", "Facundo Molina", "German Regis", "Nazareno Aguirre"], "https://doi.org/10.1145/3238147.3238220", 12, "ase", 2018]], "German Regis": [0, ["A genetic algorithm for goal-conflict identification", ["Renzo Degiovanni", "Facundo Molina", "German Regis", "Nazareno Aguirre"], "https://doi.org/10.1145/3238147.3238220", 12, "ase", 2018]], "Nazareno Aguirre": [0, ["A genetic algorithm for goal-conflict identification", ["Renzo Degiovanni", "Facundo Molina", "German Regis", "Nazareno Aguirre"], "https://doi.org/10.1145/3238147.3238220", 12, "ase", 2018]], "Huaxun Huang": [0, ["Understanding and detecting callback compatibility issues for Android applications", ["Huaxun Huang", "Lili Wei", "Yepang Liu", "Shing-Chi Cheung"], "https://doi.org/10.1145/3238147.3238181", 11, "ase", 2018], ["A tale of two cities: how WebView induces bugs to Android applications", ["Jiajun Hu", "Lili Wei", "Yepang Liu", "Shing-Chi Cheung", "Huaxun Huang"], "https://doi.org/10.1145/3238147.3238180", 12, "ase", 2018]], "Lili Wei": [0, ["Understanding and detecting callback compatibility issues for Android applications", ["Huaxun Huang", "Lili Wei", "Yepang Liu", "Shing-Chi Cheung"], "https://doi.org/10.1145/3238147.3238181", 11, "ase", 2018], ["A tale of two cities: how WebView induces bugs to Android applications", ["Jiajun Hu", "Lili Wei", "Yepang Liu", "Shing-Chi Cheung", "Huaxun Huang"], "https://doi.org/10.1145/3238147.3238180", 12, "ase", 2018]], "Yepang Liu": [0, ["Understanding and detecting callback compatibility issues for Android applications", ["Huaxun Huang", "Lili Wei", "Yepang Liu", "Shing-Chi Cheung"], "https://doi.org/10.1145/3238147.3238181", 11, "ase", 2018], ["A tale of two cities: how WebView induces bugs to Android applications", ["Jiajun Hu", "Lili Wei", "Yepang Liu", "Shing-Chi Cheung", "Huaxun Huang"], "https://doi.org/10.1145/3238147.3238180", 12, "ase", 2018]], "Shing-Chi Cheung": [0, ["Understanding and detecting callback compatibility issues for Android applications", ["Huaxun Huang", "Lili Wei", "Yepang Liu", "Shing-Chi Cheung"], "https://doi.org/10.1145/3238147.3238181", 11, "ase", 2018], ["A tale of two cities: how WebView induces bugs to Android applications", ["Jiajun Hu", "Lili Wei", "Yepang Liu", "Shing-Chi Cheung", "Huaxun Huang"], "https://doi.org/10.1145/3238147.3238180", 12, "ase", 2018]], "Kevin Moran": [0, ["Detecting and summarizing GUI changes in evolving mobile apps", ["Kevin Moran", "Cody Watson", "John Hoskins", "George Purnell", "Denys Poshyvanyk"], "https://doi.org/10.1145/3238147.3238203", 11, "ase", 2018]], "Cody Watson": [0, ["Detecting and summarizing GUI changes in evolving mobile apps", ["Kevin Moran", "Cody Watson", "John Hoskins", "George Purnell", "Denys Poshyvanyk"], "https://doi.org/10.1145/3238147.3238203", 11, "ase", 2018], ["An empirical investigation into learning bug-fixing patches in the wild via neural machine translation", ["Michele Tufano", "Cody Watson", "Gabriele Bavota", "Massimiliano Di Penta", "Martin White", "Denys Poshyvanyk"], "https://doi.org/10.1145/3238147.3240732", 6, "ase", 2018]], "John Hoskins": [0, ["Detecting and summarizing GUI changes in evolving mobile apps", ["Kevin Moran", "Cody Watson", "John Hoskins", "George Purnell", "Denys Poshyvanyk"], "https://doi.org/10.1145/3238147.3238203", 11, "ase", 2018]], "George Purnell": [0, ["Detecting and summarizing GUI changes in evolving mobile apps", ["Kevin Moran", "Cody Watson", "John Hoskins", "George Purnell", "Denys Poshyvanyk"], "https://doi.org/10.1145/3238147.3238203", 11, "ase", 2018]], "Denys Poshyvanyk": [0, ["Detecting and summarizing GUI changes in evolving mobile apps", ["Kevin Moran", "Cody Watson", "John Hoskins", "George Purnell", "Denys Poshyvanyk"], "https://doi.org/10.1145/3238147.3238203", 11, "ase", 2018], ["An empirical investigation into learning bug-fixing patches in the wild via neural machine translation", ["Michele Tufano", "Cody Watson", "Gabriele Bavota", "Massimiliano Di Penta", "Martin White", "Denys Poshyvanyk"], "https://doi.org/10.1145/3238147.3240732", 6, "ase", 2018]], "Yixue Zhao": [0, ["Empirically assessing opportunities for prefetching and caching in mobile apps", ["Yixue Zhao", "Paul Wat", "Marcelo Schmitt Laser", "Nenad Medvidovic"], "https://doi.org/10.1145/3238147.3238215", 11, "ase", 2018]], "Paul Wat": [0, ["Empirically assessing opportunities for prefetching and caching in mobile apps", ["Yixue Zhao", "Paul Wat", "Marcelo Schmitt Laser", "Nenad Medvidovic"], "https://doi.org/10.1145/3238147.3238215", 11, "ase", 2018]], "Marcelo Schmitt Laser": [0, ["Empirically assessing opportunities for prefetching and caching in mobile apps", ["Yixue Zhao", "Paul Wat", "Marcelo Schmitt Laser", "Nenad Medvidovic"], "https://doi.org/10.1145/3238147.3238215", 11, "ase", 2018]], "Nenad Medvidovic": [0, ["Empirically assessing opportunities for prefetching and caching in mobile apps", ["Yixue Zhao", "Paul Wat", "Marcelo Schmitt Laser", "Nenad Medvidovic"], "https://doi.org/10.1145/3238147.3238215", 11, "ase", 2018]], "Benno Stein": [0, ["Safe stream-based programming with refinement types", ["Benno Stein", "Lazaro Clapp", "Manu Sridharan", "Bor-Yuh Evan Chang"], "https://doi.org/10.1145/3238147.3238174", 12, "ase", 2018]], "Lazaro Clapp": [0, ["Safe stream-based programming with refinement types", ["Benno Stein", "Lazaro Clapp", "Manu Sridharan", "Bor-Yuh Evan Chang"], "https://doi.org/10.1145/3238147.3238174", 12, "ase", 2018]], "Manu Sridharan": [0, ["Safe stream-based programming with refinement types", ["Benno Stein", "Lazaro Clapp", "Manu Sridharan", "Bor-Yuh Evan Chang"], "https://doi.org/10.1145/3238147.3238174", 12, "ase", 2018]], "Bor-Yuh Evan Chang": [6.413119165964566e-15, ["Safe stream-based programming with refinement types", ["Benno Stein", "Lazaro Clapp", "Manu Sridharan", "Bor-Yuh Evan Chang"], "https://doi.org/10.1145/3238147.3238174", 12, "ase", 2018]], "Kaiyuan Wang": [3.4865499287661805e-07, ["Automated model repair for Alloy", ["Kaiyuan Wang", "Allison Sullivan", "Sarfraz Khurshid"], "https://doi.org/10.1145/3238147.3238162", 12, "ase", 2018]], "Allison Sullivan": [0, ["Automated model repair for Alloy", ["Kaiyuan Wang", "Allison Sullivan", "Sarfraz Khurshid"], "https://doi.org/10.1145/3238147.3238162", 12, "ase", 2018]], "Huarui Lin": [0, ["PFix: fixing concurrency bugs based on memory access patterns", ["Huarui Lin", "Zan Wang", "Shuang Liu", "Jun Sun", "Dongdi Zhang", "Guangning Wei"], "https://doi.org/10.1145/3238147.3238198", 12, "ase", 2018]], "Zan Wang": [0.00010894797742366791, ["PFix: fixing concurrency bugs based on memory access patterns", ["Huarui Lin", "Zan Wang", "Shuang Liu", "Jun Sun", "Dongdi Zhang", "Guangning Wei"], "https://doi.org/10.1145/3238147.3238198", 12, "ase", 2018]], "Shuang Liu": [0, ["PFix: fixing concurrency bugs based on memory access patterns", ["Huarui Lin", "Zan Wang", "Shuang Liu", "Jun Sun", "Dongdi Zhang", "Guangning Wei"], "https://doi.org/10.1145/3238147.3238198", 12, "ase", 2018]], "Dongdi Zhang": [0, ["PFix: fixing concurrency bugs based on memory access patterns", ["Huarui Lin", "Zan Wang", "Shuang Liu", "Jun Sun", "Dongdi Zhang", "Guangning Wei"], "https://doi.org/10.1145/3238147.3238198", 12, "ase", 2018]], "Guangning Wei": [0, ["PFix: fixing concurrency bugs based on memory access patterns", ["Huarui Lin", "Zan Wang", "Shuang Liu", "Jun Sun", "Dongdi Zhang", "Guangning Wei"], "https://doi.org/10.1145/3238147.3238198", 12, "ase", 2018]], "Mohammad Bajammal": [0, ["Generating reusable web components from mockups", ["Mohammad Bajammal", "Davood Mazinanian", "Ali Mesbah"], "https://doi.org/10.1145/3238147.3238194", 11, "ase", 2018]], "Davood Mazinanian": [0, ["Generating reusable web components from mockups", ["Mohammad Bajammal", "Davood Mazinanian", "Ali Mesbah"], "https://doi.org/10.1145/3238147.3238194", 11, "ase", 2018]], "Ali Mesbah": [0, ["Generating reusable web components from mockups", ["Mohammad Bajammal", "Davood Mazinanian", "Ali Mesbah"], "https://doi.org/10.1145/3238147.3238194", 11, "ase", 2018]], "Rijnard van Tonder": [0, ["Semantic crash bucketing", ["Rijnard van Tonder", "John Kotheimer", "Claire Le Goues"], "https://doi.org/10.1145/3238147.3238200", 11, "ase", 2018]], "John Kotheimer": [0, ["Semantic crash bucketing", ["Rijnard van Tonder", "John Kotheimer", "Claire Le Goues"], "https://doi.org/10.1145/3238147.3238200", 11, "ase", 2018]], "Claire Le Goues": [0, ["Semantic crash bucketing", ["Rijnard van Tonder", "John Kotheimer", "Claire Le Goues"], "https://doi.org/10.1145/3238147.3238200", 11, "ase", 2018]], "Hung-En Wang": [0.0008910963661037385, ["A symbolic model checking approach to the analysis of string and length constraints", ["Hung-En Wang", "Shih-Yu Chen", "Fang Yu", "Jie-Hong R. Jiang"], "https://doi.org/10.1145/3238147.3238189", 11, "ase", 2018]], "Shih-Yu Chen": [0, ["A symbolic model checking approach to the analysis of string and length constraints", ["Hung-En Wang", "Shih-Yu Chen", "Fang Yu", "Jie-Hong R. Jiang"], "https://doi.org/10.1145/3238147.3238189", 11, "ase", 2018]], "Fang Yu": [0.0002839096850948408, ["A symbolic model checking approach to the analysis of string and length constraints", ["Hung-En Wang", "Shih-Yu Chen", "Fang Yu", "Jie-Hong R. Jiang"], "https://doi.org/10.1145/3238147.3238189", 11, "ase", 2018]], "Jie-Hong R. Jiang": [0, ["A symbolic model checking approach to the analysis of string and length constraints", ["Hung-En Wang", "Shih-Yu Chen", "Fang Yu", "Jie-Hong R. Jiang"], "https://doi.org/10.1145/3238147.3238189", 11, "ase", 2018]], "Dirk Beyer": [0, ["Domain-independent multi-threaded software model checking", ["Dirk Beyer", "Karlheinz Friedberger"], "https://doi.org/10.1145/3238147.3238195", 11, "ase", 2018], ["CPA-SymExec: efficient symbolic execution in CPAchecker", ["Dirk Beyer", "Thomas Lemberger"], "https://doi.org/10.1145/3238147.3240478", 4, "ase", 2018]], "Karlheinz Friedberger": [0, ["Domain-independent multi-threaded software model checking", ["Dirk Beyer", "Karlheinz Friedberger"], "https://doi.org/10.1145/3238147.3238195", 11, "ase", 2018]], "Liangze Yin": [0, ["Scheduling constraint based abstraction refinement for weak memory models", ["Liangze Yin", "Wei Dong", "Wanwei Liu", "Ji Wang"], "https://doi.org/10.1145/3238147.3238223", 11, "ase", 2018]], "Wei Dong": [0.00018742435349849984, ["Scheduling constraint based abstraction refinement for weak memory models", ["Liangze Yin", "Wei Dong", "Wanwei Liu", "Ji Wang"], "https://doi.org/10.1145/3238147.3238223", 11, "ase", 2018]], "Wanwei Liu": [0, ["Scheduling constraint based abstraction refinement for weak memory models", ["Liangze Yin", "Wei Dong", "Wanwei Liu", "Ji Wang"], "https://doi.org/10.1145/3238147.3238223", 11, "ase", 2018]], "Ji Wang": [0.005666725337505341, ["Scheduling constraint based abstraction refinement for weak memory models", ["Liangze Yin", "Wei Dong", "Wanwei Liu", "Ji Wang"], "https://doi.org/10.1145/3238147.3238223", 11, "ase", 2018]], "Chungha Sung": [0.9356997162103653, ["Datalog-based scalable semantic diffing of concurrent programs", ["Chungha Sung", "Shuvendu K. Lahiri", "Constantin Enea", "Chao Wang"], "https://doi.org/10.1145/3238147.3238211", 11, "ase", 2018], ["CANAL: a cache timing analysis framework via LLVM transformation", ["Chungha Sung", "Brandon Paulsen", "Chao Wang"], "https://doi.org/10.1145/3238147.3240485", 4, "ase", 2018]], "Shuvendu K. Lahiri": [0, ["Datalog-based scalable semantic diffing of concurrent programs", ["Chungha Sung", "Shuvendu K. Lahiri", "Constantin Enea", "Chao Wang"], "https://doi.org/10.1145/3238147.3238211", 11, "ase", 2018]], "Constantin Enea": [0, ["Datalog-based scalable semantic diffing of concurrent programs", ["Chungha Sung", "Shuvendu K. Lahiri", "Constantin Enea", "Chao Wang"], "https://doi.org/10.1145/3238147.3238211", 11, "ase", 2018]], "Chao Wang": [0.37833376228809357, ["Datalog-based scalable semantic diffing of concurrent programs", ["Chungha Sung", "Shuvendu K. Lahiri", "Constantin Enea", "Chao Wang"], "https://doi.org/10.1145/3238147.3238211", 11, "ase", 2018], ["CANAL: a cache timing analysis framework via LLVM transformation", ["Chungha Sung", "Brandon Paulsen", "Chao Wang"], "https://doi.org/10.1145/3238147.3240485", 4, "ase", 2018]], "Bingchang Liu": [0, ["\u03b1Diff: cross-version binary code similarity detection with DNN", ["Bingchang Liu", "Wei Huo", "Chao Zhang", "Wenchao Li", "Feng Li", "Aihua Piao", "Wei Zou"], "https://doi.org/10.1145/3238147.3238199", 12, "ase", 2018]], "Wei Huo": [0, ["\u03b1Diff: cross-version binary code similarity detection with DNN", ["Bingchang Liu", "Wei Huo", "Chao Zhang", "Wenchao Li", "Feng Li", "Aihua Piao", "Wei Zou"], "https://doi.org/10.1145/3238147.3238199", 12, "ase", 2018]], "Chao Zhang": [0, ["\u03b1Diff: cross-version binary code similarity detection with DNN", ["Bingchang Liu", "Wei Huo", "Chao Zhang", "Wenchao Li", "Feng Li", "Aihua Piao", "Wei Zou"], "https://doi.org/10.1145/3238147.3238199", 12, "ase", 2018]], "Wenchao Li": [0, ["\u03b1Diff: cross-version binary code similarity detection with DNN", ["Bingchang Liu", "Wei Huo", "Chao Zhang", "Wenchao Li", "Feng Li", "Aihua Piao", "Wei Zou"], "https://doi.org/10.1145/3238147.3238199", 12, "ase", 2018]], "Feng Li": [0, ["\u03b1Diff: cross-version binary code similarity detection with DNN", ["Bingchang Liu", "Wei Huo", "Chao Zhang", "Wenchao Li", "Feng Li", "Aihua Piao", "Wei Zou"], "https://doi.org/10.1145/3238147.3238199", 12, "ase", 2018]], "Aihua Piao": [0, ["\u03b1Diff: cross-version binary code similarity detection with DNN", ["Bingchang Liu", "Wei Huo", "Chao Zhang", "Wenchao Li", "Feng Li", "Aihua Piao", "Wei Zou"], "https://doi.org/10.1145/3238147.3238199", 12, "ase", 2018]], "Wei Zou": [0, ["\u03b1Diff: cross-version binary code similarity detection with DNN", ["Bingchang Liu", "Wei Huo", "Chao Zhang", "Wenchao Li", "Feng Li", "Aihua Piao", "Wei Zou"], "https://doi.org/10.1145/3238147.3238199", 12, "ase", 2018]], "Kaifeng Huang": [0, ["ClDiff: generating concise linked code differences", ["Kaifeng Huang", "Bihuan Chen", "Xin Peng", "Daihong Zhou", "Ying Wang", "Yang Liu", "Wenyun Zhao"], "https://doi.org/10.1145/3238147.3238219", 12, "ase", 2018]], "Bihuan Chen": [0, ["ClDiff: generating concise linked code differences", ["Kaifeng Huang", "Bihuan Chen", "Xin Peng", "Daihong Zhou", "Ying Wang", "Yang Liu", "Wenyun Zhao"], "https://doi.org/10.1145/3238147.3238219", 12, "ase", 2018]], "Xin Peng": [0, ["ClDiff: generating concise linked code differences", ["Kaifeng Huang", "Bihuan Chen", "Xin Peng", "Daihong Zhou", "Ying Wang", "Yang Liu", "Wenyun Zhao"], "https://doi.org/10.1145/3238147.3238219", 12, "ase", 2018], ["Delta debugging microservice systems", ["Xiang Zhou", "Xin Peng", "Tao Xie", "Jun Sun", "Wenhai Li", "Chao Ji", "Dan Ding"], "https://doi.org/10.1145/3238147.3240730", 6, "ase", 2018]], "Daihong Zhou": [0, ["ClDiff: generating concise linked code differences", ["Kaifeng Huang", "Bihuan Chen", "Xin Peng", "Daihong Zhou", "Ying Wang", "Yang Liu", "Wenyun Zhao"], "https://doi.org/10.1145/3238147.3238219", 12, "ase", 2018]], "Ying Wang": [0.00129570925491862, ["ClDiff: generating concise linked code differences", ["Kaifeng Huang", "Bihuan Chen", "Xin Peng", "Daihong Zhou", "Ying Wang", "Yang Liu", "Wenyun Zhao"], "https://doi.org/10.1145/3238147.3238219", 12, "ase", 2018]], "Wenyun Zhao": [0, ["ClDiff: generating concise linked code differences", ["Kaifeng Huang", "Bihuan Chen", "Xin Peng", "Daihong Zhou", "Ying Wang", "Yang Liu", "Wenyun Zhao"], "https://doi.org/10.1145/3238147.3238219", 12, "ase", 2018]], "Jiwei Yan": [0, ["Characterizing and identifying misexposed activities in Android applications", ["Jiwei Yan", "Xi Deng", "Ping Wang", "Tianyong Wu", "Jun Yan", "Jian Zhang"], "https://doi.org/10.1145/3238147.3238164", 11, "ase", 2018]], "Xi Deng": [0, ["Characterizing and identifying misexposed activities in Android applications", ["Jiwei Yan", "Xi Deng", "Ping Wang", "Tianyong Wu", "Jun Yan", "Jian Zhang"], "https://doi.org/10.1145/3238147.3238164", 11, "ase", 2018]], "Ping Wang": [4.002336663688766e-05, ["Characterizing and identifying misexposed activities in Android applications", ["Jiwei Yan", "Xi Deng", "Ping Wang", "Tianyong Wu", "Jun Yan", "Jian Zhang"], "https://doi.org/10.1145/3238147.3238164", 11, "ase", 2018]], "Tianyong Wu": [1.9465587115519156e-06, ["Characterizing and identifying misexposed activities in Android applications", ["Jiwei Yan", "Xi Deng", "Ping Wang", "Tianyong Wu", "Jun Yan", "Jian Zhang"], "https://doi.org/10.1145/3238147.3238164", 11, "ase", 2018]], "Jun Yan": [0, ["Characterizing and identifying misexposed activities in Android applications", ["Jiwei Yan", "Xi Deng", "Ping Wang", "Tianyong Wu", "Jun Yan", "Jian Zhang"], "https://doi.org/10.1145/3238147.3238164", 11, "ase", 2018]], "Jian Zhang": [0, ["Characterizing and identifying misexposed activities in Android applications", ["Jiwei Yan", "Xi Deng", "Ping Wang", "Tianyong Wu", "Jun Yan", "Jian Zhang"], "https://doi.org/10.1145/3238147.3238164", 11, "ase", 2018]], "Jiajun Hu": [0, ["A tale of two cities: how WebView induces bugs to Android applications", ["Jiajun Hu", "Lili Wei", "Yepang Liu", "Shing-Chi Cheung", "Huaxun Huang"], "https://doi.org/10.1145/3238147.3238180", 12, "ase", 2018]], "Zhenhao Tang": [0, ["Dual-force: understanding WebView malware via cross-language forced execution", ["Zhenhao Tang", "Juan Zhai", "Minxue Pan", "Yousra Aafer", "Shiqing Ma", "Xiangyu Zhang", "Jianhua Zhao"], "https://doi.org/10.1145/3238147.3238221", 12, "ase", 2018]], "Juan Zhai": [0, ["Dual-force: understanding WebView malware via cross-language forced execution", ["Zhenhao Tang", "Juan Zhai", "Minxue Pan", "Yousra Aafer", "Shiqing Ma", "Xiangyu Zhang", "Jianhua Zhao"], "https://doi.org/10.1145/3238147.3238221", 12, "ase", 2018]], "Minxue Pan": [0, ["Dual-force: understanding WebView malware via cross-language forced execution", ["Zhenhao Tang", "Juan Zhai", "Minxue Pan", "Yousra Aafer", "Shiqing Ma", "Xiangyu Zhang", "Jianhua Zhao"], "https://doi.org/10.1145/3238147.3238221", 12, "ase", 2018]], "Yousra Aafer": [0, ["Dual-force: understanding WebView malware via cross-language forced execution", ["Zhenhao Tang", "Juan Zhai", "Minxue Pan", "Yousra Aafer", "Shiqing Ma", "Xiangyu Zhang", "Jianhua Zhao"], "https://doi.org/10.1145/3238147.3238221", 12, "ase", 2018]], "Shiqing Ma": [0, ["Dual-force: understanding WebView malware via cross-language forced execution", ["Zhenhao Tang", "Juan Zhai", "Minxue Pan", "Yousra Aafer", "Shiqing Ma", "Xiangyu Zhang", "Jianhua Zhao"], "https://doi.org/10.1145/3238147.3238221", 12, "ase", 2018]], "Xiangyu Zhang": [0, ["Dual-force: understanding WebView malware via cross-language forced execution", ["Zhenhao Tang", "Juan Zhai", "Minxue Pan", "Yousra Aafer", "Shiqing Ma", "Xiangyu Zhang", "Jianhua Zhao"], "https://doi.org/10.1145/3238147.3238221", 12, "ase", 2018]], "Jianhua Zhao": [0, ["Dual-force: understanding WebView malware via cross-language forced execution", ["Zhenhao Tang", "Juan Zhai", "Minxue Pan", "Yousra Aafer", "Shiqing Ma", "Xiangyu Zhang", "Jianhua Zhao"], "https://doi.org/10.1145/3238147.3238221", 12, "ase", 2018]], "Mahmoud Hammad": [0, ["Self-protection of Android systems from inter-component communication attacks", ["Mahmoud Hammad", "Joshua Garcia", "Sam Malek"], "https://doi.org/10.1145/3238147.3238207", 12, "ase", 2018]], "Joshua Garcia": [0, ["Self-protection of Android systems from inter-component communication attacks", ["Mahmoud Hammad", "Joshua Garcia", "Sam Malek"], "https://doi.org/10.1145/3238147.3238207", 12, "ase", 2018]], "Sam Malek": [0, ["Self-protection of Android systems from inter-component communication attacks", ["Mahmoud Hammad", "Joshua Garcia", "Sam Malek"], "https://doi.org/10.1145/3238147.3238207", 12, "ase", 2018]], "Wenyu Wang": [0.0013258640246931463, ["An empirical study of Android test generation tools in industrial cases", ["Wenyu Wang", "Dengfeng Li", "Wei Yang", "Yurui Cao", "Zhenwen Zhang", "Yuetang Deng", "Tao Xie"], "https://doi.org/10.1145/3238147.3240465", 11, "ase", 2018]], "Dengfeng Li": [0, ["An empirical study of Android test generation tools in industrial cases", ["Wenyu Wang", "Dengfeng Li", "Wei Yang", "Yurui Cao", "Zhenwen Zhang", "Yuetang Deng", "Tao Xie"], "https://doi.org/10.1145/3238147.3240465", 11, "ase", 2018]], "Wei Yang": [0.00018742435349849984, ["An empirical study of Android test generation tools in industrial cases", ["Wenyu Wang", "Dengfeng Li", "Wei Yang", "Yurui Cao", "Zhenwen Zhang", "Yuetang Deng", "Tao Xie"], "https://doi.org/10.1145/3238147.3240465", 11, "ase", 2018]], "Yurui Cao": [0, ["An empirical study of Android test generation tools in industrial cases", ["Wenyu Wang", "Dengfeng Li", "Wei Yang", "Yurui Cao", "Zhenwen Zhang", "Yuetang Deng", "Tao Xie"], "https://doi.org/10.1145/3238147.3240465", 11, "ase", 2018]], "Zhenwen Zhang": [0, ["An empirical study of Android test generation tools in industrial cases", ["Wenyu Wang", "Dengfeng Li", "Wei Yang", "Yurui Cao", "Zhenwen Zhang", "Yuetang Deng", "Tao Xie"], "https://doi.org/10.1145/3238147.3240465", 11, "ase", 2018]], "Yuetang Deng": [0, ["An empirical study of Android test generation tools in industrial cases", ["Wenyu Wang", "Dengfeng Li", "Wei Yang", "Yurui Cao", "Zhenwen Zhang", "Yuetang Deng", "Tao Xie"], "https://doi.org/10.1145/3238147.3240465", 11, "ase", 2018]], "Tao Xie": [0, ["An empirical study of Android test generation tools in industrial cases", ["Wenyu Wang", "Dengfeng Li", "Wei Yang", "Yurui Cao", "Zhenwen Zhang", "Yuetang Deng", "Tao Xie"], "https://doi.org/10.1145/3238147.3240465", 11, "ase", 2018], ["Delta debugging microservice systems", ["Xiang Zhou", "Xin Peng", "Tao Xie", "Jun Sun", "Wenhai Li", "Chao Ji", "Dan Ding"], "https://doi.org/10.1145/3238147.3240730", 6, "ase", 2018]], "Davrondzhon Gafurov": [0, ["Achieving test automation with testers without coding skills: an industrial report", ["Davrondzhon Gafurov", "Arne Erik Hurum", "Martin Markman"], "https://doi.org/10.1145/3238147.3240463", 8, "ase", 2018]], "Arne Erik Hurum": [0, ["Achieving test automation with testers without coding skills: an industrial report", ["Davrondzhon Gafurov", "Arne Erik Hurum", "Martin Markman"], "https://doi.org/10.1145/3238147.3240463", 8, "ase", 2018]], "Martin Markman": [0, ["Achieving test automation with testers without coding skills: an industrial report", ["Davrondzhon Gafurov", "Arne Erik Hurum", "Martin Markman"], "https://doi.org/10.1145/3238147.3240463", 8, "ase", 2018]], "Mikaela Cashman": [0, ["Navigating the maze: the impact of configurability in bioinformatics software", ["Mikaela Cashman", "Myra B. Cohen", "Priya Ranjan", "Robert W. Cottingham"], "https://doi.org/10.1145/3238147.3240466", 11, "ase", 2018]], "Myra B. Cohen": [0, ["Navigating the maze: the impact of configurability in bioinformatics software", ["Mikaela Cashman", "Myra B. Cohen", "Priya Ranjan", "Robert W. Cottingham"], "https://doi.org/10.1145/3238147.3240466", 11, "ase", 2018], ["An evolutionary approach for analyzing Alloy specifications", ["Jianghao Wang", "Hamid Bagheri", "Myra B. Cohen"], "https://doi.org/10.1145/3238147.3240468", 6, "ase", 2018]], "Priya Ranjan": [0, ["Navigating the maze: the impact of configurability in bioinformatics software", ["Mikaela Cashman", "Myra B. Cohen", "Priya Ranjan", "Robert W. Cottingham"], "https://doi.org/10.1145/3238147.3240466", 11, "ase", 2018]], "Robert W. Cottingham": [0, ["Navigating the maze: the impact of configurability in bioinformatics software", ["Mikaela Cashman", "Myra B. Cohen", "Priya Ranjan", "Robert W. Cottingham"], "https://doi.org/10.1145/3238147.3240466", 11, "ase", 2018]], "Alexandra Bugariu": [0, ["Automatically testing implementations of numerical abstract domains", ["Alexandra Bugariu", "Valentin Wustholz", "Maria Christakis", "Peter Muller"], "https://doi.org/10.1145/3238147.3240464", 11, "ase", 2018]], "Valentin Wustholz": [0, ["Automatically testing implementations of numerical abstract domains", ["Alexandra Bugariu", "Valentin Wustholz", "Maria Christakis", "Peter Muller"], "https://doi.org/10.1145/3238147.3240464", 11, "ase", 2018]], "Maria Christakis": [0, ["Automatically testing implementations of numerical abstract domains", ["Alexandra Bugariu", "Valentin Wustholz", "Maria Christakis", "Peter Muller"], "https://doi.org/10.1145/3238147.3240464", 11, "ase", 2018]], "Peter Muller": [0, ["Automatically testing implementations of numerical abstract domains", ["Alexandra Bugariu", "Valentin Wustholz", "Maria Christakis", "Peter Muller"], "https://doi.org/10.1145/3238147.3240464", 11, "ase", 2018]], "Ran Mo": [0, ["Experiences applying automated architecture analysis tool suites", ["Ran Mo", "Will Snipes", "Yuanfang Cai", "Srini Ramaswamy", "Rick Kazman", "Martin Naedele"], "https://doi.org/10.1145/3238147.3240467", 11, "ase", 2018]], "Will Snipes": [0, ["Experiences applying automated architecture analysis tool suites", ["Ran Mo", "Will Snipes", "Yuanfang Cai", "Srini Ramaswamy", "Rick Kazman", "Martin Naedele"], "https://doi.org/10.1145/3238147.3240467", 11, "ase", 2018]], "Yuanfang Cai": [0, ["Experiences applying automated architecture analysis tool suites", ["Ran Mo", "Will Snipes", "Yuanfang Cai", "Srini Ramaswamy", "Rick Kazman", "Martin Naedele"], "https://doi.org/10.1145/3238147.3240467", 11, "ase", 2018]], "Srini Ramaswamy": [0, ["Experiences applying automated architecture analysis tool suites", ["Ran Mo", "Will Snipes", "Yuanfang Cai", "Srini Ramaswamy", "Rick Kazman", "Martin Naedele"], "https://doi.org/10.1145/3238147.3240467", 11, "ase", 2018]], "Rick Kazman": [0, ["Experiences applying automated architecture analysis tool suites", ["Ran Mo", "Will Snipes", "Yuanfang Cai", "Srini Ramaswamy", "Rick Kazman", "Martin Naedele"], "https://doi.org/10.1145/3238147.3240467", 11, "ase", 2018]], "Martin Naedele": [0, ["Experiences applying automated architecture analysis tool suites", ["Ran Mo", "Will Snipes", "Yuanfang Cai", "Srini Ramaswamy", "Rick Kazman", "Martin Naedele"], "https://doi.org/10.1145/3238147.3240467", 11, "ase", 2018]], "Carmine Vassallo": [0, ["Continuous code quality: are we (really) doing that?", ["Carmine Vassallo", "Fabio Palomba", "Alberto Bacchelli", "Harald C. Gall"], "https://doi.org/10.1145/3238147.3240729", 6, "ase", 2018]], "Harald C. Gall": [0, ["Continuous code quality: are we (really) doing that?", ["Carmine Vassallo", "Fabio Palomba", "Alberto Bacchelli", "Harald C. Gall"], "https://doi.org/10.1145/3238147.3240729", 6, "ase", 2018], ["OCELOT: a search-based test-data generation tool for C", ["Simone Scalabrino", "Giovanni Grano", "Dario Di Nucci", "Michele Guerra", "Andrea De Lucia", "Harald C. Gall", "Rocco Oliveto"], "https://doi.org/10.1145/3238147.3240477", 4, "ase", 2018]], "Foyzul Hassan": [0, ["RUDSEA: recommending updates of Dockerfiles via software environment analysis", ["Foyzul Hassan", "Rodney Rodriguez", "Xiaoyin Wang"], "https://doi.org/10.1145/3238147.3240470", 6, "ase", 2018]], "Rodney Rodriguez": [0, ["RUDSEA: recommending updates of Dockerfiles via software environment analysis", ["Foyzul Hassan", "Rodney Rodriguez", "Xiaoyin Wang"], "https://doi.org/10.1145/3238147.3240470", 6, "ase", 2018]], "Xiaoyin Wang": [1.452540277185714e-13, ["RUDSEA: recommending updates of Dockerfiles via software environment analysis", ["Foyzul Hassan", "Rodney Rodriguez", "Xiaoyin Wang"], "https://doi.org/10.1145/3238147.3240470", 6, "ase", 2018]], "Xiang Zhou": [0, ["Delta debugging microservice systems", ["Xiang Zhou", "Xin Peng", "Tao Xie", "Jun Sun", "Wenhai Li", "Chao Ji", "Dan Ding"], "https://doi.org/10.1145/3238147.3240730", 6, "ase", 2018]], "Wenhai Li": [0, ["Delta debugging microservice systems", ["Xiang Zhou", "Xin Peng", "Tao Xie", "Jun Sun", "Wenhai Li", "Chao Ji", "Dan Ding"], "https://doi.org/10.1145/3238147.3240730", 6, "ase", 2018]], "Chao Ji": [0.37833376228809357, ["Delta debugging microservice systems", ["Xiang Zhou", "Xin Peng", "Tao Xie", "Jun Sun", "Wenhai Li", "Chao Ji", "Dan Ding"], "https://doi.org/10.1145/3238147.3240730", 6, "ase", 2018]], "Dan Ding": [0, ["Delta debugging microservice systems", ["Xiang Zhou", "Xin Peng", "Tao Xie", "Jun Sun", "Wenhai Li", "Chao Ji", "Dan Ding"], "https://doi.org/10.1145/3238147.3240730", 6, "ase", 2018]], "Luting Ye": [9.381218468718089e-09, ["Personalized teammate recommendation for crowdsourced software developers", ["Luting Ye", "Hailong Sun", "Xu Wang", "Jiaruijue Wang"], "https://doi.org/10.1145/3238147.3240472", 6, "ase", 2018]], "Hailong Sun": [0.00013326403131941333, ["Personalized teammate recommendation for crowdsourced software developers", ["Luting Ye", "Hailong Sun", "Xu Wang", "Jiaruijue Wang"], "https://doi.org/10.1145/3238147.3240472", 6, "ase", 2018]], "Xu Wang": [5.546348234020115e-06, ["Personalized teammate recommendation for crowdsourced software developers", ["Luting Ye", "Hailong Sun", "Xu Wang", "Jiaruijue Wang"], "https://doi.org/10.1145/3238147.3240472", 6, "ase", 2018]], "Jiaruijue Wang": [2.338984739225225e-08, ["Personalized teammate recommendation for crowdsourced software developers", ["Luting Ye", "Hailong Sun", "Xu Wang", "Jiaruijue Wang"], "https://doi.org/10.1145/3238147.3240472", 6, "ase", 2018]], "Han Liu": [0, ["S-gram: towards semantic-aware security auditing for Ethereum smart contracts", ["Han Liu", "Chao Liu", "Wenqi Zhao", "Yu Jiang", "Jiaguang Sun"], "https://doi.org/10.1145/3238147.3240728", 6, "ase", 2018]], "Chao Liu": [0, ["S-gram: towards semantic-aware security auditing for Ethereum smart contracts", ["Han Liu", "Chao Liu", "Wenqi Zhao", "Yu Jiang", "Jiaguang Sun"], "https://doi.org/10.1145/3238147.3240728", 6, "ase", 2018]], "Wenqi Zhao": [0, ["S-gram: towards semantic-aware security auditing for Ethereum smart contracts", ["Han Liu", "Chao Liu", "Wenqi Zhao", "Yu Jiang", "Jiaguang Sun"], "https://doi.org/10.1145/3238147.3240728", 6, "ase", 2018]], "Yu Jiang": [0, ["S-gram: towards semantic-aware security auditing for Ethereum smart contracts", ["Han Liu", "Chao Liu", "Wenqi Zhao", "Yu Jiang", "Jiaguang Sun"], "https://doi.org/10.1145/3238147.3240728", 6, "ase", 2018], ["VulSeeker: a semantic learning based vulnerability seeker for cross-platform binary", ["Jian Gao", "Xin Yang", "Ying Fu", "Yu Jiang", "Jiaguang Sun"], "https://doi.org/10.1145/3238147.3240480", 4, "ase", 2018]], "Jiaguang Sun": [2.6582410939113288e-08, ["S-gram: towards semantic-aware security auditing for Ethereum smart contracts", ["Han Liu", "Chao Liu", "Wenqi Zhao", "Yu Jiang", "Jiaguang Sun"], "https://doi.org/10.1145/3238147.3240728", 6, "ase", 2018], ["VulSeeker: a semantic learning based vulnerability seeker for cross-platform binary", ["Jian Gao", "Xin Yang", "Ying Fu", "Yu Jiang", "Jiaguang Sun"], "https://doi.org/10.1145/3238147.3240480", 4, "ase", 2018]], "Jianghao Wang": [1.5113506279806899e-10, ["An evolutionary approach for analyzing Alloy specifications", ["Jianghao Wang", "Hamid Bagheri", "Myra B. Cohen"], "https://doi.org/10.1145/3238147.3240468", 6, "ase", 2018]], "Hamid Bagheri": [0, ["An evolutionary approach for analyzing Alloy specifications", ["Jianghao Wang", "Hamid Bagheri", "Myra B. Cohen"], "https://doi.org/10.1145/3238147.3240468", 6, "ase", 2018]], "Qingying Chen": [0, ["A neural framework for retrieval and summarization of source code", ["Qingying Chen", "Minghui Zhou"], "https://doi.org/10.1145/3238147.3240471", 6, "ase", 2018]], "Minghui Zhou": [0, ["A neural framework for retrieval and summarization of source code", ["Qingying Chen", "Minghui Zhou"], "https://doi.org/10.1145/3238147.3240471", 6, "ase", 2018]], "Michele Tufano": [0, ["An empirical investigation into learning bug-fixing patches in the wild via neural machine translation", ["Michele Tufano", "Cody Watson", "Gabriele Bavota", "Massimiliano Di Penta", "Martin White", "Denys Poshyvanyk"], "https://doi.org/10.1145/3238147.3240732", 6, "ase", 2018]], "Gabriele Bavota": [0, ["An empirical investigation into learning bug-fixing patches in the wild via neural machine translation", ["Michele Tufano", "Cody Watson", "Gabriele Bavota", "Massimiliano Di Penta", "Martin White", "Denys Poshyvanyk"], "https://doi.org/10.1145/3238147.3240732", 6, "ase", 2018]], "Massimiliano Di Penta": [0, ["An empirical investigation into learning bug-fixing patches in the wild via neural machine translation", ["Michele Tufano", "Cody Watson", "Gabriele Bavota", "Massimiliano Di Penta", "Martin White", "Denys Poshyvanyk"], "https://doi.org/10.1145/3238147.3240732", 6, "ase", 2018], ["Estimating the number of remaining links in traceability recovery (journal-first abstract)", ["Davide Falessi", "Massimiliano Di Penta", "Gerardo Canfora", "Giovanni Cantone"], "https://doi.org/10.1145/3238147.3241982", 0, "ase", 2018]], "Martin White": [0, ["An empirical investigation into learning bug-fixing patches in the wild via neural machine translation", ["Michele Tufano", "Cody Watson", "Gabriele Bavota", "Massimiliano Di Penta", "Martin White", "Denys Poshyvanyk"], "https://doi.org/10.1145/3238147.3240732", 6, "ase", 2018]], "Jianxiong Gao": [0, ["Loop path reduction by state pruning", ["Jianxiong Gao", "Steven S. Lumetta"], "https://doi.org/10.1145/3238147.3240731", 6, "ase", 2018]], "Steven S. Lumetta": [0, ["Loop path reduction by state pruning", ["Jianxiong Gao", "Steven S. Lumetta"], "https://doi.org/10.1145/3238147.3240731", 6, "ase", 2018]], "Yu Qu": [0, ["node2defect: using network embedding to improve software defect prediction", ["Yu Qu", "Ting Liu", "Jianlei Chi", "Yangxu Jin", "Di Cui", "Ancheng He", "Qinghua Zheng"], "https://doi.org/10.1145/3238147.3240469", 6, "ase", 2018]], "Ting Liu": [0, ["node2defect: using network embedding to improve software defect prediction", ["Yu Qu", "Ting Liu", "Jianlei Chi", "Yangxu Jin", "Di Cui", "Ancheng He", "Qinghua Zheng"], "https://doi.org/10.1145/3238147.3240469", 6, "ase", 2018]], "Jianlei Chi": [0, ["node2defect: using network embedding to improve software defect prediction", ["Yu Qu", "Ting Liu", "Jianlei Chi", "Yangxu Jin", "Di Cui", "Ancheng He", "Qinghua Zheng"], "https://doi.org/10.1145/3238147.3240469", 6, "ase", 2018]], "Yangxu Jin": [3.159350762871327e-05, ["node2defect: using network embedding to improve software defect prediction", ["Yu Qu", "Ting Liu", "Jianlei Chi", "Yangxu Jin", "Di Cui", "Ancheng He", "Qinghua Zheng"], "https://doi.org/10.1145/3238147.3240469", 6, "ase", 2018]], "Di Cui": [0, ["node2defect: using network embedding to improve software defect prediction", ["Yu Qu", "Ting Liu", "Jianlei Chi", "Yangxu Jin", "Di Cui", "Ancheng He", "Qinghua Zheng"], "https://doi.org/10.1145/3238147.3240469", 6, "ase", 2018]], "Ancheng He": [0, ["node2defect: using network embedding to improve software defect prediction", ["Yu Qu", "Ting Liu", "Jianlei Chi", "Yangxu Jin", "Di Cui", "Ancheng He", "Qinghua Zheng"], "https://doi.org/10.1145/3238147.3240469", 6, "ase", 2018]], "Qinghua Zheng": [0, ["node2defect: using network embedding to improve software defect prediction", ["Yu Qu", "Ting Liu", "Jianlei Chi", "Yangxu Jin", "Di Cui", "Ancheng He", "Qinghua Zheng"], "https://doi.org/10.1145/3238147.3240469", 6, "ase", 2018]], "Manasi Patwardhan": [0, ["Towards automating disambiguation of regulations: using the wisdom of crowds", ["Manasi Patwardhan", "Abhishek Sainani", "Richa Sharma", "Shirish Karande", "Smita Ghaisas"], "https://doi.org/10.1145/3238147.3240727", 6, "ase", 2018]], "Abhishek Sainani": [0, ["Towards automating disambiguation of regulations: using the wisdom of crowds", ["Manasi Patwardhan", "Abhishek Sainani", "Richa Sharma", "Shirish Karande", "Smita Ghaisas"], "https://doi.org/10.1145/3238147.3240727", 6, "ase", 2018]], "Richa Sharma": [0, ["Towards automating disambiguation of regulations: using the wisdom of crowds", ["Manasi Patwardhan", "Abhishek Sainani", "Richa Sharma", "Shirish Karande", "Smita Ghaisas"], "https://doi.org/10.1145/3238147.3240727", 6, "ase", 2018]], "Shirish Karande": [0, ["Towards automating disambiguation of regulations: using the wisdom of crowds", ["Manasi Patwardhan", "Abhishek Sainani", "Richa Sharma", "Shirish Karande", "Smita Ghaisas"], "https://doi.org/10.1145/3238147.3240727", 6, "ase", 2018]], "Smita Ghaisas": [0, ["Towards automating disambiguation of regulations: using the wisdom of crowds", ["Manasi Patwardhan", "Abhishek Sainani", "Richa Sharma", "Shirish Karande", "Smita Ghaisas"], "https://doi.org/10.1145/3238147.3240727", 6, "ase", 2018]], "Rui Pereira": [0, ["jStanley: placing a green thumb on Java collections", ["Rui Pereira", "Pedro Simao", "Jacome Cunha", "Joao Saraiva"], "https://doi.org/10.1145/3238147.3240473", 4, "ase", 2018]], "Pedro Simao": [0, ["jStanley: placing a green thumb on Java collections", ["Rui Pereira", "Pedro Simao", "Jacome Cunha", "Joao Saraiva"], "https://doi.org/10.1145/3238147.3240473", 4, "ase", 2018]], "Jacome Cunha": [0, ["jStanley: placing a green thumb on Java collections", ["Rui Pereira", "Pedro Simao", "Jacome Cunha", "Joao Saraiva"], "https://doi.org/10.1145/3238147.3240473", 4, "ase", 2018]], "Joao Saraiva": [0, ["jStanley: placing a green thumb on Java collections", ["Rui Pereira", "Pedro Simao", "Jacome Cunha", "Joao Saraiva"], "https://doi.org/10.1145/3238147.3240473", 4, "ase", 2018]], "Farah Hariri": [0, ["SRCIROR: a toolset for mutation testing of C source code and LLVM intermediate representation", ["Farah Hariri", "August Shi"], "https://doi.org/10.1145/3238147.3240482", 4, "ase", 2018]], "August Shi": [0, ["SRCIROR: a toolset for mutation testing of C source code and LLVM intermediate representation", ["Farah Hariri", "August Shi"], "https://doi.org/10.1145/3238147.3240482", 4, "ase", 2018]], "Alim Ozdemir": [0, ["Lightweight source code monitoring with Triggr", ["Alim Ozdemir", "Ayse Tosun", "Hakan Erdogmus", "Rui Abreu"], "https://doi.org/10.1145/3238147.3240486", 4, "ase", 2018]], "Ayse Tosun": [0, ["Lightweight source code monitoring with Triggr", ["Alim Ozdemir", "Ayse Tosun", "Hakan Erdogmus", "Rui Abreu"], "https://doi.org/10.1145/3238147.3240486", 4, "ase", 2018]], "Hakan Erdogmus": [0, ["Lightweight source code monitoring with Triggr", ["Alim Ozdemir", "Ayse Tosun", "Hakan Erdogmus", "Rui Abreu"], "https://doi.org/10.1145/3238147.3240486", 4, "ase", 2018]], "Rui Abreu": [0, ["Lightweight source code monitoring with Triggr", ["Alim Ozdemir", "Ayse Tosun", "Hakan Erdogmus", "Rui Abreu"], "https://doi.org/10.1145/3238147.3240486", 4, "ase", 2018]], "Simone Scalabrino": [0, ["OCELOT: a search-based test-data generation tool for C", ["Simone Scalabrino", "Giovanni Grano", "Dario Di Nucci", "Michele Guerra", "Andrea De Lucia", "Harald C. Gall", "Rocco Oliveto"], "https://doi.org/10.1145/3238147.3240477", 4, "ase", 2018]], "Giovanni Grano": [0, ["OCELOT: a search-based test-data generation tool for C", ["Simone Scalabrino", "Giovanni Grano", "Dario Di Nucci", "Michele Guerra", "Andrea De Lucia", "Harald C. Gall", "Rocco Oliveto"], "https://doi.org/10.1145/3238147.3240477", 4, "ase", 2018]], "Dario Di Nucci": [0, ["OCELOT: a search-based test-data generation tool for C", ["Simone Scalabrino", "Giovanni Grano", "Dario Di Nucci", "Michele Guerra", "Andrea De Lucia", "Harald C. Gall", "Rocco Oliveto"], "https://doi.org/10.1145/3238147.3240477", 4, "ase", 2018]], "Michele Guerra": [0, ["OCELOT: a search-based test-data generation tool for C", ["Simone Scalabrino", "Giovanni Grano", "Dario Di Nucci", "Michele Guerra", "Andrea De Lucia", "Harald C. Gall", "Rocco Oliveto"], "https://doi.org/10.1145/3238147.3240477", 4, "ase", 2018]], "Andrea De Lucia": [0, ["OCELOT: a search-based test-data generation tool for C", ["Simone Scalabrino", "Giovanni Grano", "Dario Di Nucci", "Michele Guerra", "Andrea De Lucia", "Harald C. Gall", "Rocco Oliveto"], "https://doi.org/10.1145/3238147.3240477", 4, "ase", 2018]], "Rocco Oliveto": [0, ["OCELOT: a search-based test-data generation tool for C", ["Simone Scalabrino", "Giovanni Grano", "Dario Di Nucci", "Michele Guerra", "Andrea De Lucia", "Harald C. Gall", "Rocco Oliveto"], "https://doi.org/10.1145/3238147.3240477", 4, "ase", 2018]], "Julian Grigera": [0, ["Live versioning of web applications through refactoring", ["Julian Grigera", "Juan Cruz Gardey", "Alejandra Garrido", "Gustavo Rossi"], "https://doi.org/10.1145/3238147.3240483", 4, "ase", 2018]], "Juan Cruz Gardey": [0, ["Live versioning of web applications through refactoring", ["Julian Grigera", "Juan Cruz Gardey", "Alejandra Garrido", "Gustavo Rossi"], "https://doi.org/10.1145/3238147.3240483", 4, "ase", 2018]], "Alejandra Garrido": [0, ["Live versioning of web applications through refactoring", ["Julian Grigera", "Juan Cruz Gardey", "Alejandra Garrido", "Gustavo Rossi"], "https://doi.org/10.1145/3238147.3240483", 4, "ase", 2018]], "Gustavo Rossi": [0, ["Live versioning of web applications through refactoring", ["Julian Grigera", "Juan Cruz Gardey", "Alejandra Garrido", "Gustavo Rossi"], "https://doi.org/10.1145/3238147.3240483", 4, "ase", 2018]], "Andrea Janes": [0, ["code_call_lens: raising the developer awareness of critical code", ["Andrea Janes", "Michael Mairegger", "Barbara Russo"], "https://doi.org/10.1145/3238147.3240488", 4, "ase", 2018]], "Michael Mairegger": [0, ["code_call_lens: raising the developer awareness of critical code", ["Andrea Janes", "Michael Mairegger", "Barbara Russo"], "https://doi.org/10.1145/3238147.3240488", 4, "ase", 2018]], "Barbara Russo": [0, ["code_call_lens: raising the developer awareness of critical code", ["Andrea Janes", "Michael Mairegger", "Barbara Russo"], "https://doi.org/10.1145/3238147.3240488", 4, "ase", 2018]], "Gharib Gharibi": [0, ["Code2graph: automatic generation of static call graphs for Python source code", ["Gharib Gharibi", "Rashmi Tripathi", "Yugyung Lee"], "https://doi.org/10.1145/3238147.3240484", 4, "ase", 2018]], "Rashmi Tripathi": [0, ["Code2graph: automatic generation of static call graphs for Python source code", ["Gharib Gharibi", "Rashmi Tripathi", "Yugyung Lee"], "https://doi.org/10.1145/3238147.3240484", 4, "ase", 2018]], "Yugyung Lee": [0.9971555173397064, ["Code2graph: automatic generation of static call graphs for Python source code", ["Gharib Gharibi", "Rashmi Tripathi", "Yugyung Lee"], "https://doi.org/10.1145/3238147.3240484", 4, "ase", 2018]], "Julien Brunel": [0, ["The electrum analyzer: model checking relational first-order temporal specifications", ["Julien Brunel", "David Chemouil", "Alcino Cunha", "Nuno Macedo"], "https://doi.org/10.1145/3238147.3240475", 4, "ase", 2018]], "David Chemouil": [0, ["The electrum analyzer: model checking relational first-order temporal specifications", ["Julien Brunel", "David Chemouil", "Alcino Cunha", "Nuno Macedo"], "https://doi.org/10.1145/3238147.3240475", 4, "ase", 2018]], "Alcino Cunha": [0, ["The electrum analyzer: model checking relational first-order temporal specifications", ["Julien Brunel", "David Chemouil", "Alcino Cunha", "Nuno Macedo"], "https://doi.org/10.1145/3238147.3240475", 4, "ase", 2018]], "Nuno Macedo": [0, ["The electrum analyzer: model checking relational first-order temporal specifications", ["Julien Brunel", "David Chemouil", "Alcino Cunha", "Nuno Macedo"], "https://doi.org/10.1145/3238147.3240475", 4, "ase", 2018]], "Mikhail Y. R. Gadelha": [0, ["ESBMC 5.0: an industrial-strength C model checker", ["Mikhail Y. R. Gadelha", "Felipe R. Monteiro", "Jeremy Morse", "Lucas C. Cordeiro", "Bernd Fischer", "Denis A. Nicole"], "https://doi.org/10.1145/3238147.3240481", 4, "ase", 2018]], "Felipe R. Monteiro": [0, ["ESBMC 5.0: an industrial-strength C model checker", ["Mikhail Y. R. Gadelha", "Felipe R. Monteiro", "Jeremy Morse", "Lucas C. Cordeiro", "Bernd Fischer", "Denis A. Nicole"], "https://doi.org/10.1145/3238147.3240481", 4, "ase", 2018], ["Bounded model checking of C++ programs based on the Qt cross-platform framework (journal-first abstract)", ["Felipe R. Monteiro", "Mario A. P. Garcia", "Lucas C. Cordeiro", "Eddie Batista de Lima Filho"], "https://doi.org/10.1145/3238147.3241981", 0, "ase", 2018]], "Jeremy Morse": [0, ["ESBMC 5.0: an industrial-strength C model checker", ["Mikhail Y. R. Gadelha", "Felipe R. Monteiro", "Jeremy Morse", "Lucas C. Cordeiro", "Bernd Fischer", "Denis A. Nicole"], "https://doi.org/10.1145/3238147.3240481", 4, "ase", 2018]], "Lucas C. Cordeiro": [0, ["ESBMC 5.0: an industrial-strength C model checker", ["Mikhail Y. R. Gadelha", "Felipe R. Monteiro", "Jeremy Morse", "Lucas C. Cordeiro", "Bernd Fischer", "Denis A. Nicole"], "https://doi.org/10.1145/3238147.3240481", 4, "ase", 2018], ["Bounded model checking of C++ programs based on the Qt cross-platform framework (journal-first abstract)", ["Felipe R. Monteiro", "Mario A. P. Garcia", "Lucas C. Cordeiro", "Eddie Batista de Lima Filho"], "https://doi.org/10.1145/3238147.3241981", 0, "ase", 2018]], "Bernd Fischer": [0, ["ESBMC 5.0: an industrial-strength C model checker", ["Mikhail Y. R. Gadelha", "Felipe R. Monteiro", "Jeremy Morse", "Lucas C. Cordeiro", "Bernd Fischer", "Denis A. Nicole"], "https://doi.org/10.1145/3238147.3240481", 4, "ase", 2018]], "Denis A. Nicole": [0, ["ESBMC 5.0: an industrial-strength C model checker", ["Mikhail Y. R. Gadelha", "Felipe R. Monteiro", "Jeremy Morse", "Lucas C. Cordeiro", "Bernd Fischer", "Denis A. Nicole"], "https://doi.org/10.1145/3238147.3240481", 4, "ase", 2018]], "Jialun Cao": [0, ["L-CMP: an automatic learning-based parameterized verification tool", ["Jialun Cao", "Yongjian Li", "Jun Pang"], "https://doi.org/10.1145/3238147.3240487", 4, "ase", 2018]], "Yongjian Li": [0, ["L-CMP: an automatic learning-based parameterized verification tool", ["Jialun Cao", "Yongjian Li", "Jun Pang"], "https://doi.org/10.1145/3238147.3240487", 4, "ase", 2018]], "Jun Pang": [0, ["L-CMP: an automatic learning-based parameterized verification tool", ["Jialun Cao", "Yongjian Li", "Jun Pang"], "https://doi.org/10.1145/3238147.3240487", 4, "ase", 2018]], "Jian Gao": [0, ["VulSeeker: a semantic learning based vulnerability seeker for cross-platform binary", ["Jian Gao", "Xin Yang", "Ying Fu", "Yu Jiang", "Jiaguang Sun"], "https://doi.org/10.1145/3238147.3240480", 4, "ase", 2018]], "Xin Yang": [0.00010220255353488028, ["VulSeeker: a semantic learning based vulnerability seeker for cross-platform binary", ["Jian Gao", "Xin Yang", "Ying Fu", "Yu Jiang", "Jiaguang Sun"], "https://doi.org/10.1145/3238147.3240480", 4, "ase", 2018]], "Ying Fu": [0, ["VulSeeker: a semantic learning based vulnerability seeker for cross-platform binary", ["Jian Gao", "Xin Yang", "Ying Fu", "Yu Jiang", "Jiaguang Sun"], "https://doi.org/10.1145/3238147.3240480", 4, "ase", 2018]], "Thomas Lemberger": [0, ["CPA-SymExec: efficient symbolic execution in CPAchecker", ["Dirk Beyer", "Thomas Lemberger"], "https://doi.org/10.1145/3238147.3240478", 4, "ase", 2018]], "Brandon Paulsen": [0, ["CANAL: a cache timing analysis framework via LLVM transformation", ["Chungha Sung", "Brandon Paulsen", "Chao Wang"], "https://doi.org/10.1145/3238147.3240485", 4, "ase", 2018]], "Oscar Luis Vera-Perez": [0, ["Descartes: a PITest engine to detect pseudo-tested methods: tool demonstration", ["Oscar Luis Vera-Perez", "Martin Monperrus", "Benoit Baudry"], "https://doi.org/10.1145/3238147.3240474", 4, "ase", 2018]], "Martin Monperrus": [0, ["Descartes: a PITest engine to detect pseudo-tested methods: tool demonstration", ["Oscar Luis Vera-Perez", "Martin Monperrus", "Benoit Baudry"], "https://doi.org/10.1145/3238147.3240474", 4, "ase", 2018]], "Benoit Baudry": [0, ["Descartes: a PITest engine to detect pseudo-tested methods: tool demonstration", ["Oscar Luis Vera-Perez", "Martin Monperrus", "Benoit Baudry"], "https://doi.org/10.1145/3238147.3240474", 4, "ase", 2018]], "Mohammad Roohitavaf": [0, ["DKVF: a framework for rapid prototyping and evaluating distributed key-value stores", ["Mohammad Roohitavaf", "Sandeep S. Kulkarni"], "https://doi.org/10.1145/3238147.3240476", 4, "ase", 2018]], "Sandeep S. Kulkarni": [0, ["DKVF: a framework for rapid prototyping and evaluating distributed key-value stores", ["Mohammad Roohitavaf", "Sandeep S. Kulkarni"], "https://doi.org/10.1145/3238147.3240476", 4, "ase", 2018]], "Nataniel P. Borges Jr.": [0, ["DroidMate-2: a platform for Android test generation", ["Nataniel P. Borges Jr.", "Jenny Hotzkow", "Andreas Zeller"], "https://doi.org/10.1145/3238147.3240479", 4, "ase", 2018]], "Jenny Hotzkow": [0, ["DroidMate-2: a platform for Android test generation", ["Nataniel P. Borges Jr.", "Jenny Hotzkow", "Andreas Zeller"], "https://doi.org/10.1145/3238147.3240479", 4, "ase", 2018]], "Andreas Zeller": [0, ["DroidMate-2: a platform for Android test generation", ["Nataniel P. Borges Jr.", "Jenny Hotzkow", "Andreas Zeller"], "https://doi.org/10.1145/3238147.3240479", 4, "ase", 2018]], "Philipp Haindl": [0, ["Assessing and evaluating functional suitability of software", ["Philipp Haindl"], "https://doi.org/10.1145/3238147.3241531", 4, "ase", 2018]], "Thomas Krismayer": [0, ["Automatic mining of constraints for monitoring systems of systems", ["Thomas Krismayer"], "https://doi.org/10.1145/3238147.3241532", 4, "ase", 2018]], "Rokiatou Diarra": [0, ["Towards automatic restrictification of CUDA kernel arguments", ["Rokiatou Diarra"], "https://doi.org/10.1145/3238147.3241533", 4, "ase", 2018]], "Florian Galinier": [0, ["A DSL for requirements in the context of a seamless approach", ["Florian Galinier"], "https://doi.org/10.1145/3238147.3241538", 4, "ase", 2018]], "Luca Traini": [0, ["A multi-objective framework for effective performance fault injection in distributed systems", ["Luca Traini"], "https://doi.org/10.1145/3238147.3241535", 4, "ase", 2018]], "David Sferruzza": [0, ["Top-down model-driven engineering of web services from extended OpenAPI models", ["David Sferruzza"], "https://doi.org/10.1145/3238147.3241536", 4, "ase", 2018]], "Yannic Noller": [0, ["Differential program analysis with fuzzing and symbolic execution", ["Yannic Noller"], "https://doi.org/10.1145/3238147.3241537", 4, "ase", 2018]], "Julien Delplanque": [0, ["Software engineering techniques applied to relational databases", ["Julien Delplanque"], "https://doi.org/10.1145/3238147.3241534", 4, "ase", 2018]], "Nada Almasri": [0, ["Automatically quantifying the impact of a change in systems (journal-first abstract)", ["Nada Almasri", "Luay Tahat", "Bogdan Korel"], "https://doi.org/10.1145/3238147.3241984", 0, "ase", 2018]], "Luay Tahat": [0, ["Automatically quantifying the impact of a change in systems (journal-first abstract)", ["Nada Almasri", "Luay Tahat", "Bogdan Korel"], "https://doi.org/10.1145/3238147.3241984", 0, "ase", 2018]], "Bogdan Korel": [0, ["Automatically quantifying the impact of a change in systems (journal-first abstract)", ["Nada Almasri", "Luay Tahat", "Bogdan Korel"], "https://doi.org/10.1145/3238147.3241984", 0, "ase", 2018]], "Davide Falessi": [0, ["Estimating the number of remaining links in traceability recovery (journal-first abstract)", ["Davide Falessi", "Massimiliano Di Penta", "Gerardo Canfora", "Giovanni Cantone"], "https://doi.org/10.1145/3238147.3241982", 0, "ase", 2018]], "Gerardo Canfora": [0, ["Estimating the number of remaining links in traceability recovery (journal-first abstract)", ["Davide Falessi", "Massimiliano Di Penta", "Gerardo Canfora", "Giovanni Cantone"], "https://doi.org/10.1145/3238147.3241982", 0, "ase", 2018]], "Giovanni Cantone": [0, ["Estimating the number of remaining links in traceability recovery (journal-first abstract)", ["Davide Falessi", "Massimiliano Di Penta", "Gerardo Canfora", "Giovanni Cantone"], "https://doi.org/10.1145/3238147.3241982", 0, "ase", 2018]], "Mario A. P. Garcia": [0, ["Bounded model checking of C++ programs based on the Qt cross-platform framework (journal-first abstract)", ["Felipe R. Monteiro", "Mario A. P. Garcia", "Lucas C. Cordeiro", "Eddie Batista de Lima Filho"], "https://doi.org/10.1145/3238147.3241981", 0, "ase", 2018]], "Eddie Batista de Lima Filho": [0, ["Bounded model checking of C++ programs based on the Qt cross-platform framework (journal-first abstract)", ["Felipe R. Monteiro", "Mario A. P. Garcia", "Lucas C. Cordeiro", "Eddie Batista de Lima Filho"], "https://doi.org/10.1145/3238147.3241981", 0, "ase", 2018]], "Paola R. G. Accioly": [0, ["Understanding Semi-structured merge conflict characteristics in open-source Java projects (journal-first abstract)", ["Paola R. G. Accioly", "Paulo Borba", "Guilherme Cavalcanti"], "https://doi.org/10.1145/3238147.3241983", 0, "ase", 2018]], "Paulo Borba": [0, ["Understanding Semi-structured merge conflict characteristics in open-source Java projects (journal-first abstract)", ["Paola R. G. Accioly", "Paulo Borba", "Guilherme Cavalcanti"], "https://doi.org/10.1145/3238147.3241983", 0, "ase", 2018]], "Guilherme Cavalcanti": [0, ["Understanding Semi-structured merge conflict characteristics in open-source Java projects (journal-first abstract)", ["Paola R. G. Accioly", "Paulo Borba", "Guilherme Cavalcanti"], "https://doi.org/10.1145/3238147.3241983", 0, "ase", 2018]]}
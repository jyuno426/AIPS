{"Markus Puschel": [["Program generation for performance", ["Markus Puschel"], "https://doi.org/10.1145/2970276.2985778", "ase", 2016]], "Wolfram Schulte": [["Changing microsoft's build: revolution or evolution", ["Wolfram Schulte"], "https://doi.org/10.1145/2970276.2985779", "ase", 2016]], "David S. Rosenblum": [["The power of probabilistic thinking", ["David S. Rosenblum"], "https://doi.org/10.1145/2970276.2985780", "ase", 2016]], "Michele Tufano": [["An empirical investigation into the nature of test smells", ["Michele Tufano", "Fabio Palomba", "Gabriele Bavota", "Massimiliano Di Penta", "Rocco Oliveto", "Andrea De Lucia", "Denys Poshyvanyk"], "https://doi.org/10.1145/2970276.2970340", "ase", 2016], ["Deep learning code fragments for code clone detection", ["Martin White", "Michele Tufano", "Christopher Vendome", "Denys Poshyvanyk"], "https://doi.org/10.1145/2970276.2970326", "ase", 2016]], "Fabio Palomba": [["An empirical investigation into the nature of test smells", ["Michele Tufano", "Fabio Palomba", "Gabriele Bavota", "Massimiliano Di Penta", "Rocco Oliveto", "Andrea De Lucia", "Denys Poshyvanyk"], "https://doi.org/10.1145/2970276.2970340", "ase", 2016]], "Gabriele Bavota": [["An empirical investigation into the nature of test smells", ["Michele Tufano", "Fabio Palomba", "Gabriele Bavota", "Massimiliano Di Penta", "Rocco Oliveto", "Andrea De Lucia", "Denys Poshyvanyk"], "https://doi.org/10.1145/2970276.2970340", "ase", 2016]], "Massimiliano Di Penta": [["An empirical investigation into the nature of test smells", ["Michele Tufano", "Fabio Palomba", "Gabriele Bavota", "Massimiliano Di Penta", "Rocco Oliveto", "Andrea De Lucia", "Denys Poshyvanyk"], "https://doi.org/10.1145/2970276.2970340", "ase", 2016]], "Rocco Oliveto": [["An empirical investigation into the nature of test smells", ["Michele Tufano", "Fabio Palomba", "Gabriele Bavota", "Massimiliano Di Penta", "Rocco Oliveto", "Andrea De Lucia", "Denys Poshyvanyk"], "https://doi.org/10.1145/2970276.2970340", "ase", 2016]], "Andrea De Lucia": [["An empirical investigation into the nature of test smells", ["Michele Tufano", "Fabio Palomba", "Gabriele Bavota", "Massimiliano Di Penta", "Rocco Oliveto", "Andrea De Lucia", "Denys Poshyvanyk"], "https://doi.org/10.1145/2970276.2970340", "ase", 2016]], "Denys Poshyvanyk": [["An empirical investigation into the nature of test smells", ["Michele Tufano", "Fabio Palomba", "Gabriele Bavota", "Massimiliano Di Penta", "Rocco Oliveto", "Andrea De Lucia", "Denys Poshyvanyk"], "https://doi.org/10.1145/2970276.2970340", "ase", 2016], ["Deep learning code fragments for code clone detection", ["Martin White", "Michele Tufano", "Christopher Vendome", "Denys Poshyvanyk"], "https://doi.org/10.1145/2970276.2970326", "ase", 2016]], "Mohammad Amin Alipour": [["Evaluating non-adequate test-case reduction", ["Mohammad Amin Alipour", "August Shi", "Rahul Gopinath", "Darko Marinov", "Alex Groce"], "https://doi.org/10.1145/2970276.2970361", "ase", 2016]], "August Shi": [["Evaluating non-adequate test-case reduction", ["Mohammad Amin Alipour", "August Shi", "Rahul Gopinath", "Darko Marinov", "Alex Groce"], "https://doi.org/10.1145/2970276.2970361", "ase", 2016]], "Rahul Gopinath": [["Evaluating non-adequate test-case reduction", ["Mohammad Amin Alipour", "August Shi", "Rahul Gopinath", "Darko Marinov", "Alex Groce"], "https://doi.org/10.1145/2970276.2970361", "ase", 2016]], "Darko Marinov": [["Evaluating non-adequate test-case reduction", ["Mohammad Amin Alipour", "August Shi", "Rahul Gopinath", "Darko Marinov", "Alex Groce"], "https://doi.org/10.1145/2970276.2970361", "ase", 2016], ["Usage, costs, and benefits of continuous integration in open-source projects", ["Michael Hilton", "Timothy Tunnell", "Kai Huang", "Darko Marinov", "Danny Dig"], "https://doi.org/10.1145/2970276.2970358", "ase", 2016], ["How good are the specs? a study of the bug-finding effectiveness of existing Java API specifications", ["Owolabi Legunsen", "Wajih Ul Hassan", "Xinyue Xu", "Grigore Rosu", "Darko Marinov"], "https://doi.org/10.1145/2970276.2970356", "ase", 2016]], "Alex Groce": [["Evaluating non-adequate test-case reduction", ["Mohammad Amin Alipour", "August Shi", "Rahul Gopinath", "Darko Marinov", "Alex Groce"], "https://doi.org/10.1145/2970276.2970361", "ase", 2016]], "Peter Ohmann": [["Optimizing customized program coverage", ["Peter Ohmann", "David Bingham Brown", "Naveen Neelakandan", "Jeff Linderoth", "Ben Liblit"], "https://doi.org/10.1145/2970276.2970351", "ase", 2016]], "David Bingham Brown": [["Optimizing customized program coverage", ["Peter Ohmann", "David Bingham Brown", "Naveen Neelakandan", "Jeff Linderoth", "Ben Liblit"], "https://doi.org/10.1145/2970276.2970351", "ase", 2016]], "Naveen Neelakandan": [["Optimizing customized program coverage", ["Peter Ohmann", "David Bingham Brown", "Naveen Neelakandan", "Jeff Linderoth", "Ben Liblit"], "https://doi.org/10.1145/2970276.2970351", "ase", 2016]], "Jeff Linderoth": [["Optimizing customized program coverage", ["Peter Ohmann", "David Bingham Brown", "Naveen Neelakandan", "Jeff Linderoth", "Ben Liblit"], "https://doi.org/10.1145/2970276.2970351", "ase", 2016]], "Ben Liblit": [["Optimizing customized program coverage", ["Peter Ohmann", "David Bingham Brown", "Naveen Neelakandan", "Jeff Linderoth", "Ben Liblit"], "https://doi.org/10.1145/2970276.2970351", "ase", 2016], ["Array length inference for C library bindings", ["Alisa J. Maas", "Henrique Nazare", "Ben Liblit"], "https://doi.org/10.1145/2970276.2970310", "ase", 2016]], "Willem Visser": [["What makes killing a mutant hard", ["Willem Visser"], "https://doi.org/10.1145/2970276.2970345", "ase", 2016]], "Panagiotis Stratis": [["Test case permutation to improve execution time", ["Panagiotis Stratis", "Ajitha Rajan"], "https://doi.org/10.1145/2970276.2970331", "ase", 2016]], "Ajitha Rajan": [["Test case permutation to improve execution time", ["Panagiotis Stratis", "Ajitha Rajan"], "https://doi.org/10.1145/2970276.2970331", "ase", 2016]], "Bowen Xu": [["Predicting semantically linkable knowledge in developer online forums via convolutional neural network", ["Bowen Xu", "Deheng Ye", "Zhenchang Xing", "Xin Xia", "Guibin Chen", "Shanping Li"], "https://doi.org/10.1145/2970276.2970357", "ase", 2016], ["Learning a dual-language vector space for domain-specific cross-lingual question retrieval", ["Guibin Chen", "Chunyang Chen", "Zhenchang Xing", "Bowen Xu"], "https://doi.org/10.1145/2970276.2970317", "ase", 2016]], "Deheng Ye": [["Predicting semantically linkable knowledge in developer online forums via convolutional neural network", ["Bowen Xu", "Deheng Ye", "Zhenchang Xing", "Xin Xia", "Guibin Chen", "Shanping Li"], "https://doi.org/10.1145/2970276.2970357", "ase", 2016]], "Zhenchang Xing": [["Predicting semantically linkable knowledge in developer online forums via convolutional neural network", ["Bowen Xu", "Deheng Ye", "Zhenchang Xing", "Xin Xia", "Guibin Chen", "Shanping Li"], "https://doi.org/10.1145/2970276.2970357", "ase", 2016], ["Learning a dual-language vector space for domain-specific cross-lingual question retrieval", ["Guibin Chen", "Chunyang Chen", "Zhenchang Xing", "Bowen Xu"], "https://doi.org/10.1145/2970276.2970317", "ase", 2016], ["SimilarTech: automatically recommend analogical libraries across different programming languages", ["Chunyang Chen", "Zhenchang Xing"], "https://doi.org/10.1145/2970276.2970290", "ase", 2016]], "Xin Xia": [["Predicting semantically linkable knowledge in developer online forums via convolutional neural network", ["Bowen Xu", "Deheng Ye", "Zhenchang Xing", "Xin Xia", "Guibin Chen", "Shanping Li"], "https://doi.org/10.1145/2970276.2970357", "ase", 2016]], "Guibin Chen": [["Predicting semantically linkable knowledge in developer online forums via convolutional neural network", ["Bowen Xu", "Deheng Ye", "Zhenchang Xing", "Xin Xia", "Guibin Chen", "Shanping Li"], "https://doi.org/10.1145/2970276.2970357", "ase", 2016], ["Learning a dual-language vector space for domain-specific cross-lingual question retrieval", ["Guibin Chen", "Chunyang Chen", "Zhenchang Xing", "Bowen Xu"], "https://doi.org/10.1145/2970276.2970317", "ase", 2016]], "Shanping Li": [["Predicting semantically linkable knowledge in developer online forums via convolutional neural network", ["Bowen Xu", "Deheng Ye", "Zhenchang Xing", "Xin Xia", "Guibin Chen", "Shanping Li"], "https://doi.org/10.1145/2970276.2970357", "ase", 2016]], "Raja Ben Abdessalem": [["Testing advanced driver assistance systems using multi-objective search and neural networks", ["Raja Ben Abdessalem", "Shiva Nejati", "Lionel C. Briand", "Thomas Stifter"], "https://doi.org/10.1145/2970276.2970311", "ase", 2016]], "Shiva Nejati": [["Testing advanced driver assistance systems using multi-objective search and neural networks", ["Raja Ben Abdessalem", "Shiva Nejati", "Lionel C. Briand", "Thomas Stifter"], "https://doi.org/10.1145/2970276.2970311", "ase", 2016]], "Lionel C. Briand": [["Testing advanced driver assistance systems using multi-objective search and neural networks", ["Raja Ben Abdessalem", "Shiva Nejati", "Lionel C. Briand", "Thomas Stifter"], "https://doi.org/10.1145/2970276.2970311", "ase", 2016], ["SOFIA: an automated security oracle for black-box testing of SQL-injection vulnerabilities", ["Mariano Ceccato", "Cu D. Nguyen", "Dennis Appelt", "Lionel C. Briand"], "https://doi.org/10.1145/2970276.2970343", "ase", 2016]], "Thomas Stifter": [["Testing advanced driver assistance systems using multi-objective search and neural networks", ["Raja Ben Abdessalem", "Shiva Nejati", "Lionel C. Briand", "Thomas Stifter"], "https://doi.org/10.1145/2970276.2970311", "ase", 2016]], "Fumin Qi": [["Privacy preserving via interval covering based subclass division and manifold learning based bi-directional obfuscation for effort estimation", ["Fumin Qi", "Xiao-Yuan Jing", "Xiaoke Zhu", "Fei Wu", "Li Cheng"], "https://doi.org/10.1145/2970276.2970302", "ase", 2016]], "Xiao-Yuan Jing": [["Privacy preserving via interval covering based subclass division and manifold learning based bi-directional obfuscation for effort estimation", ["Fumin Qi", "Xiao-Yuan Jing", "Xiaoke Zhu", "Fei Wu", "Li Cheng"], "https://doi.org/10.1145/2970276.2970302", "ase", 2016]], "Xiaoke Zhu": [["Privacy preserving via interval covering based subclass division and manifold learning based bi-directional obfuscation for effort estimation", ["Fumin Qi", "Xiao-Yuan Jing", "Xiaoke Zhu", "Fei Wu", "Li Cheng"], "https://doi.org/10.1145/2970276.2970302", "ase", 2016]], "Fei Wu": [["Privacy preserving via interval covering based subclass division and manifold learning based bi-directional obfuscation for effort estimation", ["Fumin Qi", "Xiao-Yuan Jing", "Xiaoke Zhu", "Fei Wu", "Li Cheng"], "https://doi.org/10.1145/2970276.2970302", "ase", 2016]], "Li Cheng": [["Privacy preserving via interval covering based subclass division and manifold learning based bi-directional obfuscation for effort estimation", ["Fumin Qi", "Xiao-Yuan Jing", "Xiaoke Zhu", "Fei Wu", "Li Cheng"], "https://doi.org/10.1145/2970276.2970302", "ase", 2016]], "Martin White": [["Deep learning code fragments for code clone detection", ["Martin White", "Michele Tufano", "Christopher Vendome", "Denys Poshyvanyk"], "https://doi.org/10.1145/2970276.2970326", "ase", 2016]], "Christopher Vendome": [["Deep learning code fragments for code clone detection", ["Martin White", "Michele Tufano", "Christopher Vendome", "Denys Poshyvanyk"], "https://doi.org/10.1145/2970276.2970326", "ase", 2016]], "Christoph Hannebauer": [["Automatically recommending code reviewers based on their expertise: an empirical comparison", ["Christoph Hannebauer", "Michael Patalas", "Sebastian Stunkel", "Volker Gruhn"], "https://doi.org/10.1145/2970276.2970306", "ase", 2016]], "Michael Patalas": [["Automatically recommending code reviewers based on their expertise: an empirical comparison", ["Christoph Hannebauer", "Michael Patalas", "Sebastian Stunkel", "Volker Gruhn"], "https://doi.org/10.1145/2970276.2970306", "ase", 2016]], "Sebastian Stunkel": [["Automatically recommending code reviewers based on their expertise: an empirical comparison", ["Christoph Hannebauer", "Michael Patalas", "Sebastian Stunkel", "Volker Gruhn"], "https://doi.org/10.1145/2970276.2970306", "ase", 2016]], "Volker Gruhn": [["Automatically recommending code reviewers based on their expertise: an empirical comparison", ["Christoph Hannebauer", "Michael Patalas", "Sebastian Stunkel", "Volker Gruhn"], "https://doi.org/10.1145/2970276.2970306", "ase", 2016]], "Sebastian Proksch": [["Evaluating the evaluations of code recommender systems: a reality check", ["Sebastian Proksch", "Sven Amann", "Sarah Nadi", "Mira Mezini"], "https://doi.org/10.1145/2970276.2970330", "ase", 2016]], "Sven Amann": [["Evaluating the evaluations of code recommender systems: a reality check", ["Sebastian Proksch", "Sven Amann", "Sarah Nadi", "Mira Mezini"], "https://doi.org/10.1145/2970276.2970330", "ase", 2016]], "Sarah Nadi": [["Evaluating the evaluations of code recommender systems: a reality check", ["Sebastian Proksch", "Sven Amann", "Sarah Nadi", "Mira Mezini"], "https://doi.org/10.1145/2970276.2970330", "ase", 2016]], "Mira Mezini": [["Evaluating the evaluations of code recommender systems: a reality check", ["Sebastian Proksch", "Sven Amann", "Sarah Nadi", "Mira Mezini"], "https://doi.org/10.1145/2970276.2970330", "ase", 2016]], "Rahul Krishna": [["Too much automation? the bellwether effect and its implications for transfer learning", ["Rahul Krishna", "Tim Menzies", "Wei Fu"], "https://doi.org/10.1145/2970276.2970339", "ase", 2016]], "Tim Menzies": [["Too much automation? the bellwether effect and its implications for transfer learning", ["Rahul Krishna", "Tim Menzies", "Wei Fu"], "https://doi.org/10.1145/2970276.2970339", "ase", 2016]], "Wei Fu": [["Too much automation? the bellwether effect and its implications for transfer learning", ["Rahul Krishna", "Tim Menzies", "Wei Fu"], "https://doi.org/10.1145/2970276.2970339", "ase", 2016]], "Marcelino Rodriguez-Cancio": [["Automatic microbenchmark generation to prevent dead code elimination and constant folding", ["Marcelino Rodriguez-Cancio", "Benoit Combemale", "Benoit Baudry"], "https://doi.org/10.1145/2970276.2970346", "ase", 2016]], "Benoit Combemale": [["Automatic microbenchmark generation to prevent dead code elimination and constant folding", ["Marcelino Rodriguez-Cancio", "Benoit Combemale", "Benoit Baudry"], "https://doi.org/10.1145/2970276.2970346", "ase", 2016]], "Benoit Baudry": [["Automatic microbenchmark generation to prevent dead code elimination and constant folding", ["Marcelino Rodriguez-Cancio", "Benoit Combemale", "Benoit Baudry"], "https://doi.org/10.1145/2970276.2970346", "ase", 2016]], "Rachel Tzoref-Brill": [["Visualization of combinatorial models and test plans", ["Rachel Tzoref-Brill", "Paul Wojciak", "Shahar Maoz"], "https://doi.org/10.1145/2970276.2970301", "ase", 2016]], "Paul Wojciak": [["Visualization of combinatorial models and test plans", ["Rachel Tzoref-Brill", "Paul Wojciak", "Shahar Maoz"], "https://doi.org/10.1145/2970276.2970301", "ase", 2016]], "Shahar Maoz": [["Visualization of combinatorial models and test plans", ["Rachel Tzoref-Brill", "Paul Wojciak", "Shahar Maoz"], "https://doi.org/10.1145/2970276.2970301", "ase", 2016]], "Ivan Bocic": [["Finding access control bugs in web applications with CanCheck", ["Ivan Bocic", "Tevfik Bultan"], "https://doi.org/10.1145/2970276.2970350", "ase", 2016]], "Tevfik Bultan": [["Finding access control bugs in web applications with CanCheck", ["Ivan Bocic", "Tevfik Bultan"], "https://doi.org/10.1145/2970276.2970350", "ase", 2016]], "Mariano Ceccato": [["SOFIA: an automated security oracle for black-box testing of SQL-injection vulnerabilities", ["Mariano Ceccato", "Cu D. Nguyen", "Dennis Appelt", "Lionel C. Briand"], "https://doi.org/10.1145/2970276.2970343", "ase", 2016]], "Cu D. Nguyen": [["SOFIA: an automated security oracle for black-box testing of SQL-injection vulnerabilities", ["Mariano Ceccato", "Cu D. Nguyen", "Dennis Appelt", "Lionel C. Briand"], "https://doi.org/10.1145/2970276.2970343", "ase", 2016]], "Dennis Appelt": [["SOFIA: an automated security oracle for black-box testing of SQL-injection vulnerabilities", ["Mariano Ceccato", "Cu D. Nguyen", "Dennis Appelt", "Lionel C. Briand"], "https://doi.org/10.1145/2970276.2970343", "ase", 2016]], "Junjie Chen": [["Supporting oracle construction via static analysis", ["Junjie Chen", "Yanwei Bai", "Dan Hao", "Lingming Zhang", "Lu Zhang", "Bing Xie", "Hong Mei"], "https://doi.org/10.1145/2970276.2970366", "ase", 2016]], "Yanwei Bai": [["Supporting oracle construction via static analysis", ["Junjie Chen", "Yanwei Bai", "Dan Hao", "Lingming Zhang", "Lu Zhang", "Bing Xie", "Hong Mei"], "https://doi.org/10.1145/2970276.2970366", "ase", 2016]], "Dan Hao": [["Supporting oracle construction via static analysis", ["Junjie Chen", "Yanwei Bai", "Dan Hao", "Lingming Zhang", "Lu Zhang", "Bing Xie", "Hong Mei"], "https://doi.org/10.1145/2970276.2970366", "ase", 2016]], "Lingming Zhang": [["Supporting oracle construction via static analysis", ["Junjie Chen", "Yanwei Bai", "Dan Hao", "Lingming Zhang", "Lu Zhang", "Bing Xie", "Hong Mei"], "https://doi.org/10.1145/2970276.2970366", "ase", 2016]], "Lu Zhang": [["Supporting oracle construction via static analysis", ["Junjie Chen", "Yanwei Bai", "Dan Hao", "Lingming Zhang", "Lu Zhang", "Bing Xie", "Hong Mei"], "https://doi.org/10.1145/2970276.2970366", "ase", 2016]], "Bing Xie": [["Supporting oracle construction via static analysis", ["Junjie Chen", "Yanwei Bai", "Dan Hao", "Lingming Zhang", "Lu Zhang", "Bing Xie", "Hong Mei"], "https://doi.org/10.1145/2970276.2970366", "ase", 2016]], "Hong Mei": [["Supporting oracle construction via static analysis", ["Junjie Chen", "Yanwei Bai", "Dan Hao", "Lingming Zhang", "Lu Zhang", "Bing Xie", "Hong Mei"], "https://doi.org/10.1145/2970276.2970366", "ase", 2016]], "Junjie Wang": [["Local-based active classification of test report to assist crowdsourced testing", ["Junjie Wang", "Song Wang", "Qiang Cui", "Qing Wang"], "https://doi.org/10.1145/2970276.2970300", "ase", 2016]], "Song Wang": [["Local-based active classification of test report to assist crowdsourced testing", ["Junjie Wang", "Song Wang", "Qiang Cui", "Qing Wang"], "https://doi.org/10.1145/2970276.2970300", "ase", 2016], ["Bugram: bug detection with n-gram language models", ["Song Wang", "Devin Chollak", "Dana Movshovitz-Attias", "Lin Tan"], "https://doi.org/10.1145/2970276.2970341", "ase", 2016]], "Qiang Cui": [["Local-based active classification of test report to assist crowdsourced testing", ["Junjie Wang", "Song Wang", "Qiang Cui", "Qing Wang"], "https://doi.org/10.1145/2970276.2970300", "ase", 2016]], "Qing Wang": [["Local-based active classification of test report to assist crowdsourced testing", ["Junjie Wang", "Song Wang", "Qiang Cui", "Qing Wang"], "https://doi.org/10.1145/2970276.2970300", "ase", 2016]], "Yang Feng": [["Multi-objective test report prioritization using image understanding", ["Yang Feng", "James A. Jones", "Zhenyu Chen", "Chunrong Fang"], "https://doi.org/10.1145/2970276.2970367", "ase", 2016]], "James A. Jones": [["Multi-objective test report prioritization using image understanding", ["Yang Feng", "James A. Jones", "Zhenyu Chen", "Chunrong Fang"], "https://doi.org/10.1145/2970276.2970367", "ase", 2016]], "Zhenyu Chen": [["Multi-objective test report prioritization using image understanding", ["Yang Feng", "James A. Jones", "Zhenyu Chen", "Chunrong Fang"], "https://doi.org/10.1145/2970276.2970367", "ase", 2016]], "Chunrong Fang": [["Multi-objective test report prioritization using image understanding", ["Yang Feng", "James A. Jones", "Zhenyu Chen", "Chunrong Fang"], "https://doi.org/10.1145/2970276.2970367", "ase", 2016]], "Xin Peng": [["CrowdService: serving the individuals through mobile crowdsourcing and service composition", ["Xin Peng", "Jingxiao Gu", "Tian Huat Tan", "Jun Sun", "Yijun Yu", "Bashar Nuseibeh", "Wenyun Zhao"], "https://doi.org/10.1145/2970276.2970334", "ase", 2016]], "Jingxiao Gu": [["CrowdService: serving the individuals through mobile crowdsourcing and service composition", ["Xin Peng", "Jingxiao Gu", "Tian Huat Tan", "Jun Sun", "Yijun Yu", "Bashar Nuseibeh", "Wenyun Zhao"], "https://doi.org/10.1145/2970276.2970334", "ase", 2016]], "Tian Huat Tan": [["CrowdService: serving the individuals through mobile crowdsourcing and service composition", ["Xin Peng", "Jingxiao Gu", "Tian Huat Tan", "Jun Sun", "Yijun Yu", "Bashar Nuseibeh", "Wenyun Zhao"], "https://doi.org/10.1145/2970276.2970334", "ase", 2016]], "Jun Sun": [["CrowdService: serving the individuals through mobile crowdsourcing and service composition", ["Xin Peng", "Jingxiao Gu", "Tian Huat Tan", "Jun Sun", "Yijun Yu", "Bashar Nuseibeh", "Wenyun Zhao"], "https://doi.org/10.1145/2970276.2970334", "ase", 2016]], "Yijun Yu": [["CrowdService: serving the individuals through mobile crowdsourcing and service composition", ["Xin Peng", "Jingxiao Gu", "Tian Huat Tan", "Jun Sun", "Yijun Yu", "Bashar Nuseibeh", "Wenyun Zhao"], "https://doi.org/10.1145/2970276.2970334", "ase", 2016]], "Bashar Nuseibeh": [["CrowdService: serving the individuals through mobile crowdsourcing and service composition", ["Xin Peng", "Jingxiao Gu", "Tian Huat Tan", "Jun Sun", "Yijun Yu", "Bashar Nuseibeh", "Wenyun Zhao"], "https://doi.org/10.1145/2970276.2970334", "ase", 2016]], "Wenyun Zhao": [["CrowdService: serving the individuals through mobile crowdsourcing and service composition", ["Xin Peng", "Jingxiao Gu", "Tian Huat Tan", "Jun Sun", "Yijun Yu", "Bashar Nuseibeh", "Wenyun Zhao"], "https://doi.org/10.1145/2970276.2970334", "ase", 2016]], "Mohammad Masudur Rahman": [["QUICKAR: automatic query reformulation for concept location using crowdsourced knowledge", ["Mohammad Masudur Rahman", "Chanchal K. Roy"], "https://doi.org/10.1145/2970276.2970362", "ase", 2016], ["CORRECT: code reviewer recommendation at GitHub for Vendasta technologies", ["Mohammad Masudur Rahman", "Chanchal Kumar Roy", "Jesse Redl", "Jason A. Collins"], "https://doi.org/10.1145/2970276.2970283", "ase", 2016]], "Chanchal K. Roy": [["QUICKAR: automatic query reformulation for concept location using crowdsourced knowledge", ["Mohammad Masudur Rahman", "Chanchal K. Roy"], "https://doi.org/10.1145/2970276.2970362", "ase", 2016]], "Lili Wei": [["Taming Android fragmentation: characterizing and detecting compatibility issues for Android apps", ["Lili Wei", "Yepang Liu", "Shing-Chi Cheung"], "https://doi.org/10.1145/2970276.2970312", "ase", 2016]], "Yepang Liu": [["Taming Android fragmentation: characterizing and detecting compatibility issues for Android apps", ["Lili Wei", "Yepang Liu", "Shing-Chi Cheung"], "https://doi.org/10.1145/2970276.2970312", "ase", 2016]], "Shing-Chi Cheung": [["Taming Android fragmentation: characterizing and detecting compatibility issues for Android apps", ["Lili Wei", "Yepang Liu", "Shing-Chi Cheung"], "https://doi.org/10.1145/2970276.2970312", "ase", 2016], ["Locus: locating bugs from software changes", ["Ming Wen", "Rongxin Wu", "Shing-Chi Cheung"], "https://doi.org/10.1145/2970276.2970359", "ase", 2016]], "Young Min Baek": [["Automated model-based Android GUI testing using multi-level GUI comparison criteria", ["Young Min Baek", "Doo-Hwan Bae"], "https://doi.org/10.1145/2970276.2970313", "ase", 2016]], "Doo-Hwan Bae": [["Automated model-based Android GUI testing using multi-level GUI comparison criteria", ["Young Min Baek", "Doo-Hwan Bae"], "https://doi.org/10.1145/2970276.2970313", "ase", 2016]], "Sungho Lee": [["HybriDroid: static analysis framework for Android hybrid applications", ["Sungho Lee", "Julian Dolby", "Sukyoung Ryu"], "https://doi.org/10.1145/2970276.2970368", "ase", 2016]], "Julian Dolby": [["HybriDroid: static analysis framework for Android hybrid applications", ["Sungho Lee", "Julian Dolby", "Sukyoung Ryu"], "https://doi.org/10.1145/2970276.2970368", "ase", 2016]], "Sukyoung Ryu": [["HybriDroid: static analysis framework for Android hybrid applications", ["Sungho Lee", "Julian Dolby", "Sukyoung Ryu"], "https://doi.org/10.1145/2970276.2970368", "ase", 2016]], "Ming Wen": [["Locus: locating bugs from software changes", ["Ming Wen", "Rongxin Wu", "Shing-Chi Cheung"], "https://doi.org/10.1145/2970276.2970359", "ase", 2016]], "Rongxin Wu": [["Locus: locating bugs from software changes", ["Ming Wen", "Rongxin Wu", "Shing-Chi Cheung"], "https://doi.org/10.1145/2970276.2970359", "ase", 2016]], "Gulsher Laghari": [["Fine-tuning spectrum based fault localisation with frequent method item sets", ["Gulsher Laghari", "Alessandro Murgia", "Serge Demeyer"], "https://doi.org/10.1145/2970276.2970308", "ase", 2016]], "Alessandro Murgia": [["Fine-tuning spectrum based fault localisation with frequent method item sets", ["Gulsher Laghari", "Alessandro Murgia", "Serge Demeyer"], "https://doi.org/10.1145/2970276.2970308", "ase", 2016]], "Serge Demeyer": [["Fine-tuning spectrum based fault localisation with frequent method item sets", ["Gulsher Laghari", "Alessandro Murgia", "Serge Demeyer"], "https://doi.org/10.1145/2970276.2970308", "ase", 2016]], "Rafi Almhana": [["Recommending relevant classes for bug reports using multi-objective search", ["Rafi Almhana", "Wiem Mkaouer", "Marouane Kessentini", "Ali Ouni"], "https://doi.org/10.1145/2970276.2970344", "ase", 2016]], "Wiem Mkaouer": [["Recommending relevant classes for bug reports using multi-objective search", ["Rafi Almhana", "Wiem Mkaouer", "Marouane Kessentini", "Ali Ouni"], "https://doi.org/10.1145/2970276.2970344", "ase", 2016]], "Marouane Kessentini": [["Recommending relevant classes for bug reports using multi-objective search", ["Rafi Almhana", "Wiem Mkaouer", "Marouane Kessentini", "Ali Ouni"], "https://doi.org/10.1145/2970276.2970344", "ase", 2016]], "Ali Ouni": [["Recommending relevant classes for bug reports using multi-objective search", ["Rafi Almhana", "Wiem Mkaouer", "Marouane Kessentini", "Ali Ouni"], "https://doi.org/10.1145/2970276.2970344", "ase", 2016]], "Yibiao Yang": [["An empirical study on dependence clusters for effort-aware fault-proneness prediction", ["Yibiao Yang", "Mark Harman", "Jens Krinke", "Syed S. Islam", "David W. Binkley", "Yuming Zhou", "Baowen Xu"], "https://doi.org/10.1145/2970276.2970353", "ase", 2016]], "Mark Harman": [["An empirical study on dependence clusters for effort-aware fault-proneness prediction", ["Yibiao Yang", "Mark Harman", "Jens Krinke", "Syed S. Islam", "David W. Binkley", "Yuming Zhou", "Baowen Xu"], "https://doi.org/10.1145/2970276.2970353", "ase", 2016]], "Jens Krinke": [["An empirical study on dependence clusters for effort-aware fault-proneness prediction", ["Yibiao Yang", "Mark Harman", "Jens Krinke", "Syed S. Islam", "David W. Binkley", "Yuming Zhou", "Baowen Xu"], "https://doi.org/10.1145/2970276.2970353", "ase", 2016]], "Syed S. Islam": [["An empirical study on dependence clusters for effort-aware fault-proneness prediction", ["Yibiao Yang", "Mark Harman", "Jens Krinke", "Syed S. Islam", "David W. Binkley", "Yuming Zhou", "Baowen Xu"], "https://doi.org/10.1145/2970276.2970353", "ase", 2016]], "David W. Binkley": [["An empirical study on dependence clusters for effort-aware fault-proneness prediction", ["Yibiao Yang", "Mark Harman", "Jens Krinke", "Syed S. Islam", "David W. Binkley", "Yuming Zhou", "Baowen Xu"], "https://doi.org/10.1145/2970276.2970353", "ase", 2016], ["Practical guidelines for change recommendation using association rule mining", ["Leon Moonen", "Stefano Di Alesio", "David W. Binkley", "Thomas Rolfsnes"], "https://doi.org/10.1145/2970276.2970327", "ase", 2016]], "Yuming Zhou": [["An empirical study on dependence clusters for effort-aware fault-proneness prediction", ["Yibiao Yang", "Mark Harman", "Jens Krinke", "Syed S. Islam", "David W. Binkley", "Yuming Zhou", "Baowen Xu"], "https://doi.org/10.1145/2970276.2970353", "ase", 2016]], "Baowen Xu": [["An empirical study on dependence clusters for effort-aware fault-proneness prediction", ["Yibiao Yang", "Mark Harman", "Jens Krinke", "Syed S. Islam", "David W. Binkley", "Yuming Zhou", "Baowen Xu"], "https://doi.org/10.1145/2970276.2970353", "ase", 2016]], "Jiang Ming": [["StraightTaint: decoupled offline symbolic taint analysis", ["Jiang Ming", "Dinghao Wu", "Jun Wang", "Gaoyao Xiao", "Peng Liu"], "https://doi.org/10.1145/2970276.2970299", "ase", 2016]], "Dinghao Wu": [["StraightTaint: decoupled offline symbolic taint analysis", ["Jiang Ming", "Dinghao Wu", "Jun Wang", "Gaoyao Xiao", "Peng Liu"], "https://doi.org/10.1145/2970276.2970299", "ase", 2016]], "Jun Wang": [["StraightTaint: decoupled offline symbolic taint analysis", ["Jiang Ming", "Dinghao Wu", "Jun Wang", "Gaoyao Xiao", "Peng Liu"], "https://doi.org/10.1145/2970276.2970299", "ase", 2016]], "Gaoyao Xiao": [["StraightTaint: decoupled offline symbolic taint analysis", ["Jiang Ming", "Dinghao Wu", "Jun Wang", "Gaoyao Xiao", "Peng Liu"], "https://doi.org/10.1145/2970276.2970299", "ase", 2016]], "Peng Liu": [["StraightTaint: decoupled offline symbolic taint analysis", ["Jiang Ming", "Dinghao Wu", "Jun Wang", "Gaoyao Xiao", "Peng Liu"], "https://doi.org/10.1145/2970276.2970299", "ase", 2016]], "Tamas Szabo": [["IncA: a DSL for the definition of incremental program analyses", ["Tamas Szabo", "Sebastian Erdweg", "Markus Voelter"], "https://doi.org/10.1145/2970276.2970298", "ase", 2016], ["An extensible framework for variable-precision data-flow analyses in MPS", ["Tamas Szabo", "Simon Alperovich", "Markus Voelter", "Sebastian Erdweg"], "https://doi.org/10.1145/2970276.2970296", "ase", 2016]], "Sebastian Erdweg": [["IncA: a DSL for the definition of incremental program analyses", ["Tamas Szabo", "Sebastian Erdweg", "Markus Voelter"], "https://doi.org/10.1145/2970276.2970298", "ase", 2016], ["An extensible framework for variable-precision data-flow analyses in MPS", ["Tamas Szabo", "Simon Alperovich", "Markus Voelter", "Sebastian Erdweg"], "https://doi.org/10.1145/2970276.2970296", "ase", 2016]], "Markus Voelter": [["IncA: a DSL for the definition of incremental program analyses", ["Tamas Szabo", "Sebastian Erdweg", "Markus Voelter"], "https://doi.org/10.1145/2970276.2970298", "ase", 2016], ["An extensible framework for variable-precision data-flow analyses in MPS", ["Tamas Szabo", "Simon Alperovich", "Markus Voelter", "Sebastian Erdweg"], "https://doi.org/10.1145/2970276.2970296", "ase", 2016]], "Maria Christakis": [["What developers want and need from program analysis: an empirical study", ["Maria Christakis", "Christian Bird"], "https://doi.org/10.1145/2970276.2970347", "ase", 2016]], "Christian Bird": [["What developers want and need from program analysis: an empirical study", ["Maria Christakis", "Christian Bird"], "https://doi.org/10.1145/2970276.2970347", "ase", 2016]], "Haipeng Cai": [["DistIA: a cost-effective dynamic impact analysis for distributed programs", ["Haipeng Cai", "Douglas Thain"], "https://doi.org/10.1145/2970276.2970352", "ase", 2016]], "Douglas Thain": [["DistIA: a cost-effective dynamic impact analysis for distributed programs", ["Haipeng Cai", "Douglas Thain"], "https://doi.org/10.1145/2970276.2970352", "ase", 2016]], "Yan Cai": [["Radius aware probabilistic testing of deadlocks with guarantees", ["Yan Cai", "Zijiang Yang"], "https://doi.org/10.1145/2970276.2970307", "ase", 2016]], "Zijiang Yang": [["Radius aware probabilistic testing of deadlocks with guarantees", ["Yan Cai", "Zijiang Yang"], "https://doi.org/10.1145/2970276.2970307", "ase", 2016], ["GUICat: GUI testing as a service", ["Lin Cheng", "Jialiang Chang", "Zijiang Yang", "Chao Wang"], "https://doi.org/10.1145/2970276.2970294", "ase", 2016]], "Ziyi Lin": [["LockPeeker: detecting latent locks in Java APIs", ["Ziyi Lin", "Hao Zhong", "Yuting Chen", "Jianjun Zhao"], "https://doi.org/10.1145/2970276.2970355", "ase", 2016]], "Hao Zhong": [["LockPeeker: detecting latent locks in Java APIs", ["Ziyi Lin", "Hao Zhong", "Yuting Chen", "Jianjun Zhao"], "https://doi.org/10.1145/2970276.2970355", "ase", 2016], ["Mining revision histories to detect cross-language clones without intermediates", ["Xiao Cheng", "Zhiming Peng", "Lingxiao Jiang", "Hao Zhong", "Haibo Yu", "Jianjun Zhao"], "https://doi.org/10.1145/2970276.2970363", "ase", 2016]], "Yuting Chen": [["LockPeeker: detecting latent locks in Java APIs", ["Ziyi Lin", "Hao Zhong", "Yuting Chen", "Jianjun Zhao"], "https://doi.org/10.1145/2970276.2970355", "ase", 2016]], "Jianjun Zhao": [["LockPeeker: detecting latent locks in Java APIs", ["Ziyi Lin", "Hao Zhong", "Yuting Chen", "Jianjun Zhao"], "https://doi.org/10.1145/2970276.2970355", "ase", 2016], ["Mining revision histories to detect cross-language clones without intermediates", ["Xiao Cheng", "Zhiming Peng", "Lingxiao Jiang", "Hao Zhong", "Haibo Yu", "Jianjun Zhao"], "https://doi.org/10.1145/2970276.2970363", "ase", 2016]], "Daniel Kroening": [["Sound static deadlock analysis for C/Pthreads", ["Daniel Kroening", "Daniel Poetzl", "Peter Schrammel", "Bjorn Wachter"], "https://doi.org/10.1145/2970276.2970309", "ase", 2016]], "Daniel Poetzl": [["Sound static deadlock analysis for C/Pthreads", ["Daniel Kroening", "Daniel Poetzl", "Peter Schrammel", "Bjorn Wachter"], "https://doi.org/10.1145/2970276.2970309", "ase", 2016]], "Peter Schrammel": [["Sound static deadlock analysis for C/Pthreads", ["Daniel Kroening", "Daniel Poetzl", "Peter Schrammel", "Bjorn Wachter"], "https://doi.org/10.1145/2970276.2970309", "ase", 2016]], "Bjorn Wachter": [["Sound static deadlock analysis for C/Pthreads", ["Daniel Kroening", "Daniel Poetzl", "Peter Schrammel", "Bjorn Wachter"], "https://doi.org/10.1145/2970276.2970309", "ase", 2016]], "Vesal Vojdani": [["Static race detection for device drivers: the Goblint approach", ["Vesal Vojdani", "Kalmer Apinis", "Vootele Rotov", "Helmut Seidl", "Varmo Vene", "Ralf Vogler"], "https://doi.org/10.1145/2970276.2970337", "ase", 2016]], "Kalmer Apinis": [["Static race detection for device drivers: the Goblint approach", ["Vesal Vojdani", "Kalmer Apinis", "Vootele Rotov", "Helmut Seidl", "Varmo Vene", "Ralf Vogler"], "https://doi.org/10.1145/2970276.2970337", "ase", 2016]], "Vootele Rotov": [["Static race detection for device drivers: the Goblint approach", ["Vesal Vojdani", "Kalmer Apinis", "Vootele Rotov", "Helmut Seidl", "Varmo Vene", "Ralf Vogler"], "https://doi.org/10.1145/2970276.2970337", "ase", 2016]], "Helmut Seidl": [["Static race detection for device drivers: the Goblint approach", ["Vesal Vojdani", "Kalmer Apinis", "Vootele Rotov", "Helmut Seidl", "Varmo Vene", "Ralf Vogler"], "https://doi.org/10.1145/2970276.2970337", "ase", 2016]], "Varmo Vene": [["Static race detection for device drivers: the Goblint approach", ["Vesal Vojdani", "Kalmer Apinis", "Vootele Rotov", "Helmut Seidl", "Varmo Vene", "Ralf Vogler"], "https://doi.org/10.1145/2970276.2970337", "ase", 2016]], "Ralf Vogler": [["Static race detection for device drivers: the Goblint approach", ["Vesal Vojdani", "Kalmer Apinis", "Vootele Rotov", "Helmut Seidl", "Varmo Vene", "Ralf Vogler"], "https://doi.org/10.1145/2970276.2970337", "ase", 2016]], "Martin Hentschel": [["An empirical evaluation of two user interfaces of an interactive program verifier", ["Martin Hentschel", "Reiner Hahnle", "Richard Bubel"], "https://doi.org/10.1145/2970276.2970303", "ase", 2016], ["The interactive verification debugger: effective understanding of interactive proof attempts", ["Martin Hentschel", "Reiner Hahnle", "Richard Bubel"], "https://doi.org/10.1145/2970276.2970292", "ase", 2016]], "Reiner Hahnle": [["An empirical evaluation of two user interfaces of an interactive program verifier", ["Martin Hentschel", "Reiner Hahnle", "Richard Bubel"], "https://doi.org/10.1145/2970276.2970303", "ase", 2016], ["The interactive verification debugger: effective understanding of interactive proof attempts", ["Martin Hentschel", "Reiner Hahnle", "Richard Bubel"], "https://doi.org/10.1145/2970276.2970292", "ase", 2016]], "Richard Bubel": [["An empirical evaluation of two user interfaces of an interactive program verifier", ["Martin Hentschel", "Reiner Hahnle", "Richard Bubel"], "https://doi.org/10.1145/2970276.2970303", "ase", 2016], ["The interactive verification debugger: effective understanding of interactive proof attempts", ["Martin Hentschel", "Reiner Hahnle", "Richard Bubel"], "https://doi.org/10.1145/2970276.2970292", "ase", 2016]], "Salome Maro": [["Traceability maintenance: factors and guidelines", ["Salome Maro", "Anthony Anjorin", "Rebekka Wohlrab", "Jan-Philipp Steghofer"], "https://doi.org/10.1145/2970276.2970314", "ase", 2016]], "Anthony Anjorin": [["Traceability maintenance: factors and guidelines", ["Salome Maro", "Anthony Anjorin", "Rebekka Wohlrab", "Jan-Philipp Steghofer"], "https://doi.org/10.1145/2970276.2970314", "ase", 2016]], "Rebekka Wohlrab": [["Traceability maintenance: factors and guidelines", ["Salome Maro", "Anthony Anjorin", "Rebekka Wohlrab", "Jan-Philipp Steghofer"], "https://doi.org/10.1145/2970276.2970314", "ase", 2016]], "Jan-Philipp Steghofer": [["Traceability maintenance: factors and guidelines", ["Salome Maro", "Anthony Anjorin", "Rebekka Wohlrab", "Jan-Philipp Steghofer"], "https://doi.org/10.1145/2970276.2970314", "ase", 2016]], "Michael Hilton": [["Usage, costs, and benefits of continuous integration in open-source projects", ["Michael Hilton", "Timothy Tunnell", "Kai Huang", "Darko Marinov", "Danny Dig"], "https://doi.org/10.1145/2970276.2970358", "ase", 2016]], "Timothy Tunnell": [["Usage, costs, and benefits of continuous integration in open-source projects", ["Michael Hilton", "Timothy Tunnell", "Kai Huang", "Darko Marinov", "Danny Dig"], "https://doi.org/10.1145/2970276.2970358", "ase", 2016]], "Kai Huang": [["Usage, costs, and benefits of continuous integration in open-source projects", ["Michael Hilton", "Timothy Tunnell", "Kai Huang", "Darko Marinov", "Danny Dig"], "https://doi.org/10.1145/2970276.2970358", "ase", 2016]], "Danny Dig": [["Usage, costs, and benefits of continuous integration in open-source projects", ["Michael Hilton", "Timothy Tunnell", "Kai Huang", "Darko Marinov", "Danny Dig"], "https://doi.org/10.1145/2970276.2970358", "ase", 2016]], "Ana Pescador": [["DSL-maps: from requirements to design of domain-specific languages", ["Ana Pescador", "Juan de Lara"], "https://doi.org/10.1145/2970276.2970328", "ase", 2016]], "Juan de Lara": [["DSL-maps: from requirements to design of domain-specific languages", ["Ana Pescador", "Juan de Lara"], "https://doi.org/10.1145/2970276.2970328", "ase", 2016]], "Dimitar Asenov": [["The IDE as a scriptable information system", ["Dimitar Asenov", "Peter Muller", "Lukas Vogel"], "https://doi.org/10.1145/2970276.2970329", "ase", 2016]], "Peter Muller": [["The IDE as a scriptable information system", ["Dimitar Asenov", "Peter Muller", "Lukas Vogel"], "https://doi.org/10.1145/2970276.2970329", "ase", 2016]], "Lukas Vogel": [["The IDE as a scriptable information system", ["Dimitar Asenov", "Peter Muller", "Lukas Vogel"], "https://doi.org/10.1145/2970276.2970329", "ase", 2016]], "Zvonimir Pavlinovic": [["Inferring annotations for device drivers from verification histories", ["Zvonimir Pavlinovic", "Akash Lal", "Rahul Sharma"], "https://doi.org/10.1145/2970276.2970305", "ase", 2016]], "Akash Lal": [["Inferring annotations for device drivers from verification histories", ["Zvonimir Pavlinovic", "Akash Lal", "Rahul Sharma"], "https://doi.org/10.1145/2970276.2970305", "ase", 2016]], "Rahul Sharma": [["Inferring annotations for device drivers from verification histories", ["Zvonimir Pavlinovic", "Akash Lal", "Rahul Sharma"], "https://doi.org/10.1145/2970276.2970305", "ase", 2016]], "Alisa J. Maas": [["Array length inference for C library bindings", ["Alisa J. Maas", "Henrique Nazare", "Ben Liblit"], "https://doi.org/10.1145/2970276.2970310", "ase", 2016]], "Henrique Nazare": [["Array length inference for C library bindings", ["Alisa J. Maas", "Henrique Nazare", "Ben Liblit"], "https://doi.org/10.1145/2970276.2970310", "ase", 2016]], "Yuan Jochen Kang": [["APEx: automated inference of error specifications for C APIs", ["Yuan Jochen Kang", "Baishakhi Ray", "Suman Jana"], "https://doi.org/10.1145/2970276.2970354", "ase", 2016]], "Baishakhi Ray": [["APEx: automated inference of error specifications for C APIs", ["Yuan Jochen Kang", "Baishakhi Ray", "Suman Jana"], "https://doi.org/10.1145/2970276.2970354", "ase", 2016]], "Suman Jana": [["APEx: automated inference of error specifications for C APIs", ["Yuan Jochen Kang", "Baishakhi Ray", "Suman Jana"], "https://doi.org/10.1145/2970276.2970354", "ase", 2016]], "Jens Meinicke": [["On essential configuration complexity: measuring interactions in highly-configurable systems", ["Jens Meinicke", "Chu-Pan Wong", "Christian Kastner", "Thomas Thum", "Gunter Saake"], "https://doi.org/10.1145/2970276.2970322", "ase", 2016]], "Chu-Pan Wong": [["On essential configuration complexity: measuring interactions in highly-configurable systems", ["Jens Meinicke", "Chu-Pan Wong", "Christian Kastner", "Thomas Thum", "Gunter Saake"], "https://doi.org/10.1145/2970276.2970322", "ase", 2016]], "Christian Kastner": [["On essential configuration complexity: measuring interactions in highly-configurable systems", ["Jens Meinicke", "Chu-Pan Wong", "Christian Kastner", "Thomas Thum", "Gunter Saake"], "https://doi.org/10.1145/2970276.2970322", "ase", 2016]], "Thomas Thum": [["On essential configuration complexity: measuring interactions in highly-configurable systems", ["Jens Meinicke", "Chu-Pan Wong", "Christian Kastner", "Thomas Thum", "Gunter Saake"], "https://doi.org/10.1145/2970276.2970322", "ase", 2016]], "Gunter Saake": [["On essential configuration complexity: measuring interactions in highly-configurable systems", ["Jens Meinicke", "Chu-Pan Wong", "Christian Kastner", "Thomas Thum", "Gunter Saake"], "https://doi.org/10.1145/2970276.2970322", "ase", 2016]], "Yi Li": [["Precise semantic history slicing through dynamic delta refinement", ["Yi Li", "Chenguang Zhu", "Julia Rubin", "Marsha Chechik"], "https://doi.org/10.1145/2970276.2970336", "ase", 2016]], "Chenguang Zhu": [["Precise semantic history slicing through dynamic delta refinement", ["Yi Li", "Chenguang Zhu", "Julia Rubin", "Marsha Chechik"], "https://doi.org/10.1145/2970276.2970336", "ase", 2016]], "Julia Rubin": [["Precise semantic history slicing through dynamic delta refinement", ["Yi Li", "Chenguang Zhu", "Julia Rubin", "Marsha Chechik"], "https://doi.org/10.1145/2970276.2970336", "ase", 2016], ["Battery-aware transformations in mobile applications", ["Jurgen Cito", "Julia Rubin", "Phillip Stanley-Marbell", "Martin Rinard"], "https://doi.org/10.1145/2970276.2970324", "ase", 2016]], "Marsha Chechik": [["Precise semantic history slicing through dynamic delta refinement", ["Yi Li", "Chenguang Zhu", "Julia Rubin", "Marsha Chechik"], "https://doi.org/10.1145/2970276.2970336", "ase", 2016]], "Renzo Degiovanni": [["Goal-conflict detection based on temporal satisfiability checking", ["Renzo Degiovanni", "Nicolas Ricci", "Dalal Alrajeh", "Pablo F. Castro", "Nazareno Aguirre"], "https://doi.org/10.1145/2970276.2970349", "ase", 2016]], "Nicolas Ricci": [["Goal-conflict detection based on temporal satisfiability checking", ["Renzo Degiovanni", "Nicolas Ricci", "Dalal Alrajeh", "Pablo F. Castro", "Nazareno Aguirre"], "https://doi.org/10.1145/2970276.2970349", "ase", 2016]], "Dalal Alrajeh": [["Goal-conflict detection based on temporal satisfiability checking", ["Renzo Degiovanni", "Nicolas Ricci", "Dalal Alrajeh", "Pablo F. Castro", "Nazareno Aguirre"], "https://doi.org/10.1145/2970276.2970349", "ase", 2016]], "Pablo F. Castro": [["Goal-conflict detection based on temporal satisfiability checking", ["Renzo Degiovanni", "Nicolas Ricci", "Dalal Alrajeh", "Pablo F. Castro", "Nazareno Aguirre"], "https://doi.org/10.1145/2970276.2970349", "ase", 2016]], "Nazareno Aguirre": [["Goal-conflict detection based on temporal satisfiability checking", ["Renzo Degiovanni", "Nicolas Ricci", "Dalal Alrajeh", "Pablo F. Castro", "Nazareno Aguirre"], "https://doi.org/10.1145/2970276.2970349", "ase", 2016]], "Muhammad Suleman Mahmood": [["Symbolic execution of stored procedures in database management systems", ["Muhammad Suleman Mahmood", "Maryam Abdul Ghafoor", "Junaid Haroon Siddiqui"], "https://doi.org/10.1145/2970276.2970318", "ase", 2016]], "Maryam Abdul Ghafoor": [["Symbolic execution of stored procedures in database management systems", ["Muhammad Suleman Mahmood", "Maryam Abdul Ghafoor", "Junaid Haroon Siddiqui"], "https://doi.org/10.1145/2970276.2970318", "ase", 2016]], "Junaid Haroon Siddiqui": [["Symbolic execution of stored procedures in database management systems", ["Muhammad Suleman Mahmood", "Maryam Abdul Ghafoor", "Junaid Haroon Siddiqui"], "https://doi.org/10.1145/2970276.2970318", "ase", 2016]], "Shengjian Guo": [["Conc-iSE: incremental symbolic execution of concurrent software", ["Shengjian Guo", "Markus Kusano", "Chao Wang"], "https://doi.org/10.1145/2970276.2970332", "ase", 2016]], "Markus Kusano": [["Conc-iSE: incremental symbolic execution of concurrent software", ["Shengjian Guo", "Markus Kusano", "Chao Wang"], "https://doi.org/10.1145/2970276.2970332", "ase", 2016]], "Chao Wang": [["Conc-iSE: incremental symbolic execution of concurrent software", ["Shengjian Guo", "Markus Kusano", "Chao Wang"], "https://doi.org/10.1145/2970276.2970332", "ase", 2016], ["GUICat: GUI testing as a service", ["Lin Cheng", "Jialiang Chang", "Zijiang Yang", "Chao Wang"], "https://doi.org/10.1145/2970276.2970294", "ase", 2016]], "Van-Thuan Pham": [["Model-based whitebox fuzzing for program binaries", ["Van-Thuan Pham", "Marcel Bohme", "Abhik Roychoudhury"], "https://doi.org/10.1145/2970276.2970316", "ase", 2016]], "Marcel Bohme": [["Model-based whitebox fuzzing for program binaries", ["Van-Thuan Pham", "Marcel Bohme", "Abhik Roychoudhury"], "https://doi.org/10.1145/2970276.2970316", "ase", 2016]], "Abhik Roychoudhury": [["Model-based whitebox fuzzing for program binaries", ["Van-Thuan Pham", "Marcel Bohme", "Abhik Roychoudhury"], "https://doi.org/10.1145/2970276.2970316", "ase", 2016]], "Xin Li": [["Symbolic execution of complex program driven by machine learning based constraint solving", ["Xin Li", "Yongjuan Liang", "Hong Qian", "Yi-Qi Hu", "Lei Bu", "Yang Yu", "Xin Chen", "Xuandong Li"], "https://doi.org/10.1145/2970276.2970364", "ase", 2016]], "Yongjuan Liang": [["Symbolic execution of complex program driven by machine learning based constraint solving", ["Xin Li", "Yongjuan Liang", "Hong Qian", "Yi-Qi Hu", "Lei Bu", "Yang Yu", "Xin Chen", "Xuandong Li"], "https://doi.org/10.1145/2970276.2970364", "ase", 2016]], "Hong Qian": [["Symbolic execution of complex program driven by machine learning based constraint solving", ["Xin Li", "Yongjuan Liang", "Hong Qian", "Yi-Qi Hu", "Lei Bu", "Yang Yu", "Xin Chen", "Xuandong Li"], "https://doi.org/10.1145/2970276.2970364", "ase", 2016]], "Yi-Qi Hu": [["Symbolic execution of complex program driven by machine learning based constraint solving", ["Xin Li", "Yongjuan Liang", "Hong Qian", "Yi-Qi Hu", "Lei Bu", "Yang Yu", "Xin Chen", "Xuandong Li"], "https://doi.org/10.1145/2970276.2970364", "ase", 2016]], "Lei Bu": [["Symbolic execution of complex program driven by machine learning based constraint solving", ["Xin Li", "Yongjuan Liang", "Hong Qian", "Yi-Qi Hu", "Lei Bu", "Yang Yu", "Xin Chen", "Xuandong Li"], "https://doi.org/10.1145/2970276.2970364", "ase", 2016]], "Yang Yu": [["Symbolic execution of complex program driven by machine learning based constraint solving", ["Xin Li", "Yongjuan Liang", "Hong Qian", "Yi-Qi Hu", "Lei Bu", "Yang Yu", "Xin Chen", "Xuandong Li"], "https://doi.org/10.1145/2970276.2970364", "ase", 2016]], "Xin Chen": [["Symbolic execution of complex program driven by machine learning based constraint solving", ["Xin Li", "Yongjuan Liang", "Hong Qian", "Yi-Qi Hu", "Lei Bu", "Yang Yu", "Xin Chen", "Xuandong Li"], "https://doi.org/10.1145/2970276.2970364", "ase", 2016]], "Xuandong Li": [["Symbolic execution of complex program driven by machine learning based constraint solving", ["Xin Li", "Yongjuan Liang", "Hong Qian", "Yi-Qi Hu", "Lei Bu", "Yang Yu", "Xin Chen", "Xuandong Li"], "https://doi.org/10.1145/2970276.2970364", "ase", 2016], ["BovInspector: automatic inspection and repair of buffer overflow vulnerabilities", ["Fengjuan Gao", "Linzhang Wang", "Xuandong Li"], "https://doi.org/10.1145/2970276.2970282", "ase", 2016]], "Masataka Nishi": [["Towards bounded model checking using nonlinear programming solver", ["Masataka Nishi"], "https://doi.org/10.1145/2970276.2970319", "ase", 2016]], "Jitendra Singh Thakur": [["Identifying domain elements from textual specifications", ["Jitendra Singh Thakur", "Atul Gupta"], "https://doi.org/10.1145/2970276.2970323", "ase", 2016], ["AnModeler: a tool for generating domain models from textual specifications", ["Jitendra Singh Thakur", "Atul Gupta"], "https://doi.org/10.1145/2970276.2970289", "ase", 2016]], "Atul Gupta": [["Identifying domain elements from textual specifications", ["Jitendra Singh Thakur", "Atul Gupta"], "https://doi.org/10.1145/2970276.2970323", "ase", 2016], ["AnModeler: a tool for generating domain models from textual specifications", ["Jitendra Singh Thakur", "Atul Gupta"], "https://doi.org/10.1145/2970276.2970289", "ase", 2016]], "Sven Peldszus": [["Continuous detection of design flaws in evolving object-oriented programs using incremental multi-pattern matching", ["Sven Peldszus", "Geza Kulcsar", "Malte Lochau", "Sandro Schulze"], "https://doi.org/10.1145/2970276.2970338", "ase", 2016]], "Geza Kulcsar": [["Continuous detection of design flaws in evolving object-oriented programs using incremental multi-pattern matching", ["Sven Peldszus", "Geza Kulcsar", "Malte Lochau", "Sandro Schulze"], "https://doi.org/10.1145/2970276.2970338", "ase", 2016]], "Malte Lochau": [["Continuous detection of design flaws in evolving object-oriented programs using incremental multi-pattern matching", ["Sven Peldszus", "Geza Kulcsar", "Malte Lochau", "Sandro Schulze"], "https://doi.org/10.1145/2970276.2970338", "ase", 2016]], "Sandro Schulze": [["Continuous detection of design flaws in evolving object-oriented programs using incremental multi-pattern matching", ["Sven Peldszus", "Geza Kulcsar", "Malte Lochau", "Sandro Schulze"], "https://doi.org/10.1145/2970276.2970338", "ase", 2016]], "Andreas Demuth": [["Efficient detection of inconsistencies in a multi-developer engineering environment", ["Andreas Demuth", "Markus Riedl-Ehrenleitner", "Alexander Egyed"], "https://doi.org/10.1145/2970276.2970304", "ase", 2016]], "Markus Riedl-Ehrenleitner": [["Efficient detection of inconsistencies in a multi-developer engineering environment", ["Andreas Demuth", "Markus Riedl-Ehrenleitner", "Alexander Egyed"], "https://doi.org/10.1145/2970276.2970304", "ase", 2016]], "Alexander Egyed": [["Efficient detection of inconsistencies in a multi-developer engineering environment", ["Andreas Demuth", "Markus Riedl-Ehrenleitner", "Alexander Egyed"], "https://doi.org/10.1145/2970276.2970304", "ase", 2016]], "Owolabi Legunsen": [["How good are the specs? a study of the bug-finding effectiveness of existing Java API specifications", ["Owolabi Legunsen", "Wajih Ul Hassan", "Xinyue Xu", "Grigore Rosu", "Darko Marinov"], "https://doi.org/10.1145/2970276.2970356", "ase", 2016]], "Wajih Ul Hassan": [["How good are the specs? a study of the bug-finding effectiveness of existing Java API specifications", ["Owolabi Legunsen", "Wajih Ul Hassan", "Xinyue Xu", "Grigore Rosu", "Darko Marinov"], "https://doi.org/10.1145/2970276.2970356", "ase", 2016]], "Xinyue Xu": [["How good are the specs? a study of the bug-finding effectiveness of existing Java API specifications", ["Owolabi Legunsen", "Wajih Ul Hassan", "Xinyue Xu", "Grigore Rosu", "Darko Marinov"], "https://doi.org/10.1145/2970276.2970356", "ase", 2016]], "Grigore Rosu": [["How good are the specs? a study of the bug-finding effectiveness of existing Java API specifications", ["Owolabi Legunsen", "Wajih Ul Hassan", "Xinyue Xu", "Grigore Rosu", "Darko Marinov"], "https://doi.org/10.1145/2970276.2970356", "ase", 2016]], "Akihisa Yamada": [["Greedy combinatorial test case generation using unsatisfiable cores", ["Akihisa Yamada", "Armin Biere", "Cyrille Artho", "Takashi Kitamura", "Eun-Hye Choi"], "https://doi.org/10.1145/2970276.2970335", "ase", 2016]], "Armin Biere": [["Greedy combinatorial test case generation using unsatisfiable cores", ["Akihisa Yamada", "Armin Biere", "Cyrille Artho", "Takashi Kitamura", "Eun-Hye Choi"], "https://doi.org/10.1145/2970276.2970335", "ase", 2016]], "Cyrille Artho": [["Greedy combinatorial test case generation using unsatisfiable cores", ["Akihisa Yamada", "Armin Biere", "Cyrille Artho", "Takashi Kitamura", "Eun-Hye Choi"], "https://doi.org/10.1145/2970276.2970335", "ase", 2016]], "Takashi Kitamura": [["Greedy combinatorial test case generation using unsatisfiable cores", ["Akihisa Yamada", "Armin Biere", "Cyrille Artho", "Takashi Kitamura", "Eun-Hye Choi"], "https://doi.org/10.1145/2970276.2970335", "ase", 2016]], "Eun-Hye Choi": [["Greedy combinatorial test case generation using unsatisfiable cores", ["Akihisa Yamada", "Armin Biere", "Cyrille Artho", "Takashi Kitamura", "Eun-Hye Choi"], "https://doi.org/10.1145/2970276.2970335", "ase", 2016]], "Benwen Zhang": [["Towards automatically generating descriptive names for unit tests", ["Benwen Zhang", "Emily Hill", "James Clause"], "https://doi.org/10.1145/2970276.2970342", "ase", 2016]], "Emily Hill": [["Towards automatically generating descriptive names for unit tests", ["Benwen Zhang", "Emily Hill", "James Clause"], "https://doi.org/10.1145/2970276.2970342", "ase", 2016]], "James Clause": [["Towards automatically generating descriptive names for unit tests", ["Benwen Zhang", "Emily Hill", "James Clause"], "https://doi.org/10.1145/2970276.2970342", "ase", 2016]], "Nan Li": [["Applying combinatorial test data generation to big data applications", ["Nan Li", "Yu Lei", "Haider Riaz Khan", "Jingshu Liu", "Yun Guo"], "https://doi.org/10.1145/2970276.2970325", "ase", 2016]], "Yu Lei": [["Applying combinatorial test data generation to big data applications", ["Nan Li", "Yu Lei", "Haider Riaz Khan", "Jingshu Liu", "Yun Guo"], "https://doi.org/10.1145/2970276.2970325", "ase", 2016]], "Haider Riaz Khan": [["Applying combinatorial test data generation to big data applications", ["Nan Li", "Yu Lei", "Haider Riaz Khan", "Jingshu Liu", "Yun Guo"], "https://doi.org/10.1145/2970276.2970325", "ase", 2016]], "Jingshu Liu": [["Applying combinatorial test data generation to big data applications", ["Nan Li", "Yu Lei", "Haider Riaz Khan", "Jingshu Liu", "Yun Guo"], "https://doi.org/10.1145/2970276.2970325", "ase", 2016]], "Yun Guo": [["Applying combinatorial test data generation to big data applications", ["Nan Li", "Yu Lei", "Haider Riaz Khan", "Jingshu Liu", "Yun Guo"], "https://doi.org/10.1145/2970276.2970325", "ase", 2016]], "Hongyin Tang": [["Generating test cases to expose concurrency bugs in Android applications", ["Hongyin Tang", "Guoquan Wu", "Jun Wei", "Hua Zhong"], "https://doi.org/10.1145/2970276.2970320", "ase", 2016]], "Guoquan Wu": [["Generating test cases to expose concurrency bugs in Android applications", ["Hongyin Tang", "Guoquan Wu", "Jun Wei", "Hua Zhong"], "https://doi.org/10.1145/2970276.2970320", "ase", 2016]], "Jun Wei": [["Generating test cases to expose concurrency bugs in Android applications", ["Hongyin Tang", "Guoquan Wu", "Jun Wei", "Hua Zhong"], "https://doi.org/10.1145/2970276.2970320", "ase", 2016]], "Hua Zhong": [["Generating test cases to expose concurrency bugs in Android applications", ["Hongyin Tang", "Guoquan Wu", "Jun Wei", "Hua Zhong"], "https://doi.org/10.1145/2970276.2970320", "ase", 2016]], "Matthew Patrick": [["Automatic test image generation using procedural noise", ["Matthew Patrick", "Matthew D. Castle", "Richard O. J. H. Stutt", "Christopher A. Gilligan"], "https://doi.org/10.1145/2970276.2970333", "ase", 2016]], "Matthew D. Castle": [["Automatic test image generation using procedural noise", ["Matthew Patrick", "Matthew D. Castle", "Richard O. J. H. Stutt", "Christopher A. Gilligan"], "https://doi.org/10.1145/2970276.2970333", "ase", 2016]], "Richard O. J. H. Stutt": [["Automatic test image generation using procedural noise", ["Matthew Patrick", "Matthew D. Castle", "Richard O. J. H. Stutt", "Christopher A. Gilligan"], "https://doi.org/10.1145/2970276.2970333", "ase", 2016]], "Christopher A. Gilligan": [["Automatic test image generation using procedural noise", ["Matthew Patrick", "Matthew D. Castle", "Richard O. J. H. Stutt", "Christopher A. Gilligan"], "https://doi.org/10.1145/2970276.2970333", "ase", 2016]], "Georg Dotzler": [["Move-optimized source code tree differencing", ["Georg Dotzler", "Michael Philippsen"], "https://doi.org/10.1145/2970276.2970315", "ase", 2016]], "Michael Philippsen": [["Move-optimized source code tree differencing", ["Georg Dotzler", "Michael Philippsen"], "https://doi.org/10.1145/2970276.2970315", "ase", 2016]], "Davood Mazinanian": [["Migrating cascading style sheets to preprocessors by introducing mixins", ["Davood Mazinanian", "Nikolaos Tsantalis"], "https://doi.org/10.1145/2970276.2970348", "ase", 2016]], "Nikolaos Tsantalis": [["Migrating cascading style sheets to preprocessors by introducing mixins", ["Davood Mazinanian", "Nikolaos Tsantalis"], "https://doi.org/10.1145/2970276.2970348", "ase", 2016]], "Tianxiao Gu": [["Automatic runtime recovery via error handler synthesis", ["Tianxiao Gu", "Chengnian Sun", "Xiaoxing Ma", "Jian Lu", "Zhendong Su"], "https://doi.org/10.1145/2970276.2970360", "ase", 2016]], "Chengnian Sun": [["Automatic runtime recovery via error handler synthesis", ["Tianxiao Gu", "Chengnian Sun", "Xiaoxing Ma", "Jian Lu", "Zhendong Su"], "https://doi.org/10.1145/2970276.2970360", "ase", 2016]], "Xiaoxing Ma": [["Automatic runtime recovery via error handler synthesis", ["Tianxiao Gu", "Chengnian Sun", "Xiaoxing Ma", "Jian Lu", "Zhendong Su"], "https://doi.org/10.1145/2970276.2970360", "ase", 2016]], "Jian Lu": [["Automatic runtime recovery via error handler synthesis", ["Tianxiao Gu", "Chengnian Sun", "Xiaoxing Ma", "Jian Lu", "Zhendong Su"], "https://doi.org/10.1145/2970276.2970360", "ase", 2016]], "Zhendong Su": [["Automatic runtime recovery via error handler synthesis", ["Tianxiao Gu", "Chengnian Sun", "Xiaoxing Ma", "Jian Lu", "Zhendong Su"], "https://doi.org/10.1145/2970276.2970360", "ase", 2016]], "Xiao Cheng": [["Mining revision histories to detect cross-language clones without intermediates", ["Xiao Cheng", "Zhiming Peng", "Lingxiao Jiang", "Hao Zhong", "Haibo Yu", "Jianjun Zhao"], "https://doi.org/10.1145/2970276.2970363", "ase", 2016]], "Zhiming Peng": [["Mining revision histories to detect cross-language clones without intermediates", ["Xiao Cheng", "Zhiming Peng", "Lingxiao Jiang", "Hao Zhong", "Haibo Yu", "Jianjun Zhao"], "https://doi.org/10.1145/2970276.2970363", "ase", 2016]], "Lingxiao Jiang": [["Mining revision histories to detect cross-language clones without intermediates", ["Xiao Cheng", "Zhiming Peng", "Lingxiao Jiang", "Hao Zhong", "Haibo Yu", "Jianjun Zhao"], "https://doi.org/10.1145/2970276.2970363", "ase", 2016]], "Haibo Yu": [["Mining revision histories to detect cross-language clones without intermediates", ["Xiao Cheng", "Zhiming Peng", "Lingxiao Jiang", "Hao Zhong", "Haibo Yu", "Jianjun Zhao"], "https://doi.org/10.1145/2970276.2970363", "ase", 2016]], "Jurgen Cito": [["Battery-aware transformations in mobile applications", ["Jurgen Cito", "Julia Rubin", "Phillip Stanley-Marbell", "Martin Rinard"], "https://doi.org/10.1145/2970276.2970324", "ase", 2016], ["Developer targeted analytics: supporting software development decisions with runtime information", ["Jurgen Cito"], "https://doi.org/10.1145/2970276.2975939", "ase", 2016]], "Phillip Stanley-Marbell": [["Battery-aware transformations in mobile applications", ["Jurgen Cito", "Julia Rubin", "Phillip Stanley-Marbell", "Martin Rinard"], "https://doi.org/10.1145/2970276.2970324", "ase", 2016]], "Martin Rinard": [["Battery-aware transformations in mobile applications", ["Jurgen Cito", "Julia Rubin", "Phillip Stanley-Marbell", "Martin Rinard"], "https://doi.org/10.1145/2970276.2970324", "ase", 2016]], "Devin Chollak": [["Bugram: bug detection with n-gram language models", ["Song Wang", "Devin Chollak", "Dana Movshovitz-Attias", "Lin Tan"], "https://doi.org/10.1145/2970276.2970341", "ase", 2016]], "Dana Movshovitz-Attias": [["Bugram: bug detection with n-gram language models", ["Song Wang", "Devin Chollak", "Dana Movshovitz-Attias", "Lin Tan"], "https://doi.org/10.1145/2970276.2970341", "ase", 2016]], "Lin Tan": [["Bugram: bug detection with n-gram language models", ["Song Wang", "Devin Chollak", "Dana Movshovitz-Attias", "Lin Tan"], "https://doi.org/10.1145/2970276.2970341", "ase", 2016]], "Matthias Hoschele": [["Mining input grammars from dynamic taints", ["Matthias Hoschele", "Andreas Zeller"], "https://doi.org/10.1145/2970276.2970321", "ase", 2016]], "Andreas Zeller": [["Mining input grammars from dynamic taints", ["Matthias Hoschele", "Andreas Zeller"], "https://doi.org/10.1145/2970276.2970321", "ase", 2016]], "Phong Minh Vu": [["Phrase-based extraction of user opinions in mobile app reviews", ["Phong Minh Vu", "Hung Viet Pham", "Tam The Nguyen", "Tung Thanh Nguyen"], "https://doi.org/10.1145/2970276.2970365", "ase", 2016]], "Hung Viet Pham": [["Phrase-based extraction of user opinions in mobile app reviews", ["Phong Minh Vu", "Hung Viet Pham", "Tam The Nguyen", "Tung Thanh Nguyen"], "https://doi.org/10.1145/2970276.2970365", "ase", 2016]], "Tam The Nguyen": [["Phrase-based extraction of user opinions in mobile app reviews", ["Phong Minh Vu", "Hung Viet Pham", "Tam The Nguyen", "Tung Thanh Nguyen"], "https://doi.org/10.1145/2970276.2970365", "ase", 2016]], "Tung Thanh Nguyen": [["Phrase-based extraction of user opinions in mobile app reviews", ["Phong Minh Vu", "Hung Viet Pham", "Tam The Nguyen", "Tung Thanh Nguyen"], "https://doi.org/10.1145/2970276.2970365", "ase", 2016]], "Leon Moonen": [["Practical guidelines for change recommendation using association rule mining", ["Leon Moonen", "Stefano Di Alesio", "David W. Binkley", "Thomas Rolfsnes"], "https://doi.org/10.1145/2970276.2970327", "ase", 2016]], "Stefano Di Alesio": [["Practical guidelines for change recommendation using association rule mining", ["Leon Moonen", "Stefano Di Alesio", "David W. Binkley", "Thomas Rolfsnes"], "https://doi.org/10.1145/2970276.2970327", "ase", 2016]], "Thomas Rolfsnes": [["Practical guidelines for change recommendation using association rule mining", ["Leon Moonen", "Stefano Di Alesio", "David W. Binkley", "Thomas Rolfsnes"], "https://doi.org/10.1145/2970276.2970327", "ase", 2016]], "Chunyang Chen": [["Learning a dual-language vector space for domain-specific cross-lingual question retrieval", ["Guibin Chen", "Chunyang Chen", "Zhenchang Xing", "Bowen Xu"], "https://doi.org/10.1145/2970276.2970317", "ase", 2016], ["SimilarTech: automatically recommend analogical libraries across different programming languages", ["Chunyang Chen", "Zhenchang Xing"], "https://doi.org/10.1145/2970276.2970290", "ase", 2016]], "Li Li": [["Reflection-aware static analysis of Android apps", ["Li Li", "Tegawende F. Bissyande", "Damien Octeau", "Jacques Klein"], "https://doi.org/10.1145/2970276.2970277", "ase", 2016]], "Tegawende F. Bissyande": [["Reflection-aware static analysis of Android apps", ["Li Li", "Tegawende F. Bissyande", "Damien Octeau", "Jacques Klein"], "https://doi.org/10.1145/2970276.2970277", "ase", 2016]], "Damien Octeau": [["Reflection-aware static analysis of Android apps", ["Li Li", "Tegawende F. Bissyande", "Damien Octeau", "Jacques Klein"], "https://doi.org/10.1145/2970276.2970277", "ase", 2016]], "Jacques Klein": [["Reflection-aware static analysis of Android apps", ["Li Li", "Tegawende F. Bissyande", "Damien Octeau", "Jacques Klein"], "https://doi.org/10.1145/2970276.2970277", "ase", 2016]], "Tianyong Wu": [["Relda2: an effective static analysis tool for resource leak detection in Android apps", ["Tianyong Wu", "Jierui Liu", "Xi Deng", "Jun Yan", "Jian Zhang"], "https://doi.org/10.1145/2970276.2970278", "ase", 2016]], "Jierui Liu": [["Relda2: an effective static analysis tool for resource leak detection in Android apps", ["Tianyong Wu", "Jierui Liu", "Xi Deng", "Jun Yan", "Jian Zhang"], "https://doi.org/10.1145/2970276.2970278", "ase", 2016]], "Xi Deng": [["Relda2: an effective static analysis tool for resource leak detection in Android apps", ["Tianyong Wu", "Jierui Liu", "Xi Deng", "Jun Yan", "Jian Zhang"], "https://doi.org/10.1145/2970276.2970278", "ase", 2016]], "Jun Yan": [["Relda2: an effective static analysis tool for resource leak detection in Android apps", ["Tianyong Wu", "Jierui Liu", "Xi Deng", "Jun Yan", "Jian Zhang"], "https://doi.org/10.1145/2970276.2970278", "ase", 2016]], "Jian Zhang": [["Relda2: an effective static analysis tool for resource leak detection in Android apps", ["Tianyong Wu", "Jierui Liu", "Xi Deng", "Jun Yan", "Jian Zhang"], "https://doi.org/10.1145/2970276.2970278", "ase", 2016]], "Zhongyi Zhai": [["An end-user oriented tool suite for development of mobile applications", ["Zhongyi Zhai", "Bo Cheng", "Meng Niu", "Zhaoning Wang", "Yimeng Feng", "Junliang Chen"], "https://doi.org/10.1145/2970276.2970279", "ase", 2016]], "Bo Cheng": [["An end-user oriented tool suite for development of mobile applications", ["Zhongyi Zhai", "Bo Cheng", "Meng Niu", "Zhaoning Wang", "Yimeng Feng", "Junliang Chen"], "https://doi.org/10.1145/2970276.2970279", "ase", 2016]], "Meng Niu": [["An end-user oriented tool suite for development of mobile applications", ["Zhongyi Zhai", "Bo Cheng", "Meng Niu", "Zhaoning Wang", "Yimeng Feng", "Junliang Chen"], "https://doi.org/10.1145/2970276.2970279", "ase", 2016]], "Zhaoning Wang": [["An end-user oriented tool suite for development of mobile applications", ["Zhongyi Zhai", "Bo Cheng", "Meng Niu", "Zhaoning Wang", "Yimeng Feng", "Junliang Chen"], "https://doi.org/10.1145/2970276.2970279", "ase", 2016]], "Yimeng Feng": [["An end-user oriented tool suite for development of mobile applications", ["Zhongyi Zhai", "Bo Cheng", "Meng Niu", "Zhaoning Wang", "Yimeng Feng", "Junliang Chen"], "https://doi.org/10.1145/2970276.2970279", "ase", 2016]], "Junliang Chen": [["An end-user oriented tool suite for development of mobile applications", ["Zhongyi Zhai", "Bo Cheng", "Meng Niu", "Zhaoning Wang", "Yimeng Feng", "Junliang Chen"], "https://doi.org/10.1145/2970276.2970279", "ase", 2016]], "Huafeng Zhang": [["Model driven design of heterogeneous synchronous embedded systems", ["Huafeng Zhang", "Yu Jiang", "Han Liu", "Hehua Zhang", "Ming Gu", "Jia-Guang Sun"], "https://doi.org/10.1145/2970276.2970280", "ase", 2016]], "Yu Jiang": [["Model driven design of heterogeneous synchronous embedded systems", ["Huafeng Zhang", "Yu Jiang", "Han Liu", "Hehua Zhang", "Ming Gu", "Jia-Guang Sun"], "https://doi.org/10.1145/2970276.2970280", "ase", 2016], ["Verifying simulink stateflow model: timed automata approach", ["Yixiao Yang", "Yu Jiang", "Ming Gu", "Jia-Guang Sun"], "https://doi.org/10.1145/2970276.2970293", "ase", 2016]], "Han Liu": [["Model driven design of heterogeneous synchronous embedded systems", ["Huafeng Zhang", "Yu Jiang", "Han Liu", "Hehua Zhang", "Ming Gu", "Jia-Guang Sun"], "https://doi.org/10.1145/2970276.2970280", "ase", 2016]], "Hehua Zhang": [["Model driven design of heterogeneous synchronous embedded systems", ["Huafeng Zhang", "Yu Jiang", "Han Liu", "Hehua Zhang", "Ming Gu", "Jia-Guang Sun"], "https://doi.org/10.1145/2970276.2970280", "ase", 2016]], "Ming Gu": [["Model driven design of heterogeneous synchronous embedded systems", ["Huafeng Zhang", "Yu Jiang", "Han Liu", "Hehua Zhang", "Ming Gu", "Jia-Guang Sun"], "https://doi.org/10.1145/2970276.2970280", "ase", 2016], ["Verifying simulink stateflow model: timed automata approach", ["Yixiao Yang", "Yu Jiang", "Ming Gu", "Jia-Guang Sun"], "https://doi.org/10.1145/2970276.2970293", "ase", 2016]], "Jia-Guang Sun": [["Model driven design of heterogeneous synchronous embedded systems", ["Huafeng Zhang", "Yu Jiang", "Han Liu", "Hehua Zhang", "Ming Gu", "Jia-Guang Sun"], "https://doi.org/10.1145/2970276.2970280", "ase", 2016], ["Verifying simulink stateflow model: timed automata approach", ["Yixiao Yang", "Yu Jiang", "Ming Gu", "Jia-Guang Sun"], "https://doi.org/10.1145/2970276.2970293", "ase", 2016]], "Saahil Ognawala": [["MACKE: compositional analysis of low-level vulnerabilities with symbolic execution", ["Saahil Ognawala", "Martin Ochoa", "Alexander Pretschner", "Tobias Limmer"], "https://doi.org/10.1145/2970276.2970281", "ase", 2016]], "Martin Ochoa": [["MACKE: compositional analysis of low-level vulnerabilities with symbolic execution", ["Saahil Ognawala", "Martin Ochoa", "Alexander Pretschner", "Tobias Limmer"], "https://doi.org/10.1145/2970276.2970281", "ase", 2016]], "Alexander Pretschner": [["MACKE: compositional analysis of low-level vulnerabilities with symbolic execution", ["Saahil Ognawala", "Martin Ochoa", "Alexander Pretschner", "Tobias Limmer"], "https://doi.org/10.1145/2970276.2970281", "ase", 2016]], "Tobias Limmer": [["MACKE: compositional analysis of low-level vulnerabilities with symbolic execution", ["Saahil Ognawala", "Martin Ochoa", "Alexander Pretschner", "Tobias Limmer"], "https://doi.org/10.1145/2970276.2970281", "ase", 2016]], "Fengjuan Gao": [["BovInspector: automatic inspection and repair of buffer overflow vulnerabilities", ["Fengjuan Gao", "Linzhang Wang", "Xuandong Li"], "https://doi.org/10.1145/2970276.2970282", "ase", 2016]], "Linzhang Wang": [["BovInspector: automatic inspection and repair of buffer overflow vulnerabilities", ["Fengjuan Gao", "Linzhang Wang", "Xuandong Li"], "https://doi.org/10.1145/2970276.2970282", "ase", 2016]], "Chanchal Kumar Roy": [["CORRECT: code reviewer recommendation at GitHub for Vendasta technologies", ["Mohammad Masudur Rahman", "Chanchal Kumar Roy", "Jesse Redl", "Jason A. Collins"], "https://doi.org/10.1145/2970276.2970283", "ase", 2016]], "Jesse Redl": [["CORRECT: code reviewer recommendation at GitHub for Vendasta technologies", ["Mohammad Masudur Rahman", "Chanchal Kumar Roy", "Jesse Redl", "Jason A. Collins"], "https://doi.org/10.1145/2970276.2970283", "ase", 2016]], "Jason A. Collins": [["CORRECT: code reviewer recommendation at GitHub for Vendasta technologies", ["Mohammad Masudur Rahman", "Chanchal Kumar Roy", "Jesse Redl", "Jason A. Collins"], "https://doi.org/10.1145/2970276.2970283", "ase", 2016]], "Mushtaq Raza": [["ProcessPAIR: a tool for automated performance analysis and improvement recommendation in software development", ["Mushtaq Raza", "Joao Pascoal Faria"], "https://doi.org/10.1145/2970276.2970284", "ase", 2016]], "Joao Pascoal Faria": [["ProcessPAIR: a tool for automated performance analysis and improvement recommendation in software development", ["Mushtaq Raza", "Joao Pascoal Faria"], "https://doi.org/10.1145/2970276.2970284", "ase", 2016]], "Gillian J. Greene": [["CVExplorer: identifying candidate developers by mining and exploring their open source contributions", ["Gillian J. Greene", "Bernd Fischer"], "https://doi.org/10.1145/2970276.2970285", "ase", 2016]], "Bernd Fischer": [["CVExplorer: identifying candidate developers by mining and exploring their open source contributions", ["Gillian J. Greene", "Bernd Fischer"], "https://doi.org/10.1145/2970276.2970285", "ase", 2016]], "Thomas Kowark": [["Lightweight collection and storage of software repository data with DataRover", ["Thomas Kowark", "Christoph Matthies", "Matthias Uflacker", "Hasso Plattner"], "https://doi.org/10.1145/2970276.2970286", "ase", 2016]], "Christoph Matthies": [["Lightweight collection and storage of software repository data with DataRover", ["Thomas Kowark", "Christoph Matthies", "Matthias Uflacker", "Hasso Plattner"], "https://doi.org/10.1145/2970276.2970286", "ase", 2016]], "Matthias Uflacker": [["Lightweight collection and storage of software repository data with DataRover", ["Thomas Kowark", "Christoph Matthies", "Matthias Uflacker", "Hasso Plattner"], "https://doi.org/10.1145/2970276.2970286", "ase", 2016]], "Hasso Plattner": [["Lightweight collection and storage of software repository data with DataRover", ["Thomas Kowark", "Christoph Matthies", "Matthias Uflacker", "Hasso Plattner"], "https://doi.org/10.1145/2970276.2970286", "ase", 2016]], "Abdullah M. Alshanqiti": [["Visual contract extractor: a tool for reverse engineering visual contracts using dynamic analysis", ["Abdullah M. Alshanqiti", "Reiko Heckel", "Timo Kehrer"], "https://doi.org/10.1145/2970276.2970287", "ase", 2016]], "Reiko Heckel": [["Visual contract extractor: a tool for reverse engineering visual contracts using dynamic analysis", ["Abdullah M. Alshanqiti", "Reiko Heckel", "Timo Kehrer"], "https://doi.org/10.1145/2970276.2970287", "ase", 2016]], "Timo Kehrer": [["Visual contract extractor: a tool for reverse engineering visual contracts using dynamic analysis", ["Abdullah M. Alshanqiti", "Reiko Heckel", "Timo Kehrer"], "https://doi.org/10.1145/2970276.2970287", "ase", 2016]], "Felix Schwagerl": [["SuperMod: tool support for collaborative filtered model-driven software product line engineering", ["Felix Schwagerl", "Bernhard Westfechtel"], "https://doi.org/10.1145/2970276.2970288", "ase", 2016]], "Bernhard Westfechtel": [["SuperMod: tool support for collaborative filtered model-driven software product line engineering", ["Felix Schwagerl", "Bernhard Westfechtel"], "https://doi.org/10.1145/2970276.2970288", "ase", 2016]], "Jian Liu": [["TeeVML: tool support for semi-automatic integration testing environment emulation", ["Jian Liu", "John C. Grundy", "Iman Avazpour", "Mohamed Almorsy Abdelrazek"], "https://doi.org/10.1145/2970276.2970291", "ase", 2016]], "John C. Grundy": [["TeeVML: tool support for semi-automatic integration testing environment emulation", ["Jian Liu", "John C. Grundy", "Iman Avazpour", "Mohamed Almorsy Abdelrazek"], "https://doi.org/10.1145/2970276.2970291", "ase", 2016], ["An automated collaborative requirements engineering tool for better validation of requirements", ["Nor Aiza Moketar", "Massila Kamalrudin", "Safiah Sidek", "Mark Robinson", "John C. Grundy"], "https://doi.org/10.1145/2970276.2970295", "ase", 2016]], "Iman Avazpour": [["TeeVML: tool support for semi-automatic integration testing environment emulation", ["Jian Liu", "John C. Grundy", "Iman Avazpour", "Mohamed Almorsy Abdelrazek"], "https://doi.org/10.1145/2970276.2970291", "ase", 2016]], "Mohamed Almorsy Abdelrazek": [["TeeVML: tool support for semi-automatic integration testing environment emulation", ["Jian Liu", "John C. Grundy", "Iman Avazpour", "Mohamed Almorsy Abdelrazek"], "https://doi.org/10.1145/2970276.2970291", "ase", 2016]], "Yixiao Yang": [["Verifying simulink stateflow model: timed automata approach", ["Yixiao Yang", "Yu Jiang", "Ming Gu", "Jia-Guang Sun"], "https://doi.org/10.1145/2970276.2970293", "ase", 2016]], "Lin Cheng": [["GUICat: GUI testing as a service", ["Lin Cheng", "Jialiang Chang", "Zijiang Yang", "Chao Wang"], "https://doi.org/10.1145/2970276.2970294", "ase", 2016]], "Jialiang Chang": [["GUICat: GUI testing as a service", ["Lin Cheng", "Jialiang Chang", "Zijiang Yang", "Chao Wang"], "https://doi.org/10.1145/2970276.2970294", "ase", 2016]], "Nor Aiza Moketar": [["An automated collaborative requirements engineering tool for better validation of requirements", ["Nor Aiza Moketar", "Massila Kamalrudin", "Safiah Sidek", "Mark Robinson", "John C. Grundy"], "https://doi.org/10.1145/2970276.2970295", "ase", 2016]], "Massila Kamalrudin": [["An automated collaborative requirements engineering tool for better validation of requirements", ["Nor Aiza Moketar", "Massila Kamalrudin", "Safiah Sidek", "Mark Robinson", "John C. Grundy"], "https://doi.org/10.1145/2970276.2970295", "ase", 2016]], "Safiah Sidek": [["An automated collaborative requirements engineering tool for better validation of requirements", ["Nor Aiza Moketar", "Massila Kamalrudin", "Safiah Sidek", "Mark Robinson", "John C. Grundy"], "https://doi.org/10.1145/2970276.2970295", "ase", 2016]], "Mark Robinson": [["An automated collaborative requirements engineering tool for better validation of requirements", ["Nor Aiza Moketar", "Massila Kamalrudin", "Safiah Sidek", "Mark Robinson", "John C. Grundy"], "https://doi.org/10.1145/2970276.2970295", "ase", 2016]], "Simon Alperovich": [["An extensible framework for variable-precision data-flow analyses in MPS", ["Tamas Szabo", "Simon Alperovich", "Markus Voelter", "Sebastian Erdweg"], "https://doi.org/10.1145/2970276.2970296", "ase", 2016]], "Xuan-Bach D. Le": [["Towards efficient and effective automatic program repair", ["Xuan-Bach D. Le"], "https://doi.org/10.1145/2970276.2975934", "ase", 2016]], "Joseph Chan Joo Keng": [["Automated testing and notification of mobile app privacy leak-cause behaviours", ["Joseph Chan Joo Keng"], "https://doi.org/10.1145/2970276.2975935", "ase", 2016]], "Davoud Mougouei": [["Factoring requirement dependencies in software requirement selection using graphs and integer programming", ["Davoud Mougouei"], "https://doi.org/10.1145/2970276.2975936", "ase", 2016]], "Onder Babur": [["Statistical analysis of large sets of models", ["Onder Babur"], "https://doi.org/10.1145/2970276.2975938", "ase", 2016]], "Ferdian Thung": [["API recommendation system for software development", ["Ferdian Thung"], "https://doi.org/10.1145/2970276.2975940", "ase", 2016]]}
{"Guy L. Steele Jr.": [0, ["Organizing functional code for parallel execution or, foldl and foldr considered slightly harmful", ["Guy L. Steele Jr."], "https://doi.org/10.1145/1596550.1596551", "icfp", 2009]], "Ralf Hinze": [0, ["Functional pearl: la tour d'Hano\u00ef", ["Ralf Hinze"], "https://doi.org/10.1145/1596550.1596555", "icfp", 2009]], "Sebastian Fischer": [0, ["Purely functional lazy non-deterministic programming", ["Sebastian Fischer", "Oleg Kiselyov", "Chung-chieh Shan"], "https://doi.org/10.1145/1596550.1596556", "icfp", 2009]], "Oleg Kiselyov": [0, ["Purely functional lazy non-deterministic programming", ["Sebastian Fischer", "Oleg Kiselyov", "Chung-chieh Shan"], "https://doi.org/10.1145/1596550.1596556", "icfp", 2009]], "Chung-chieh Shan": [0, ["Purely functional lazy non-deterministic programming", ["Sebastian Fischer", "Oleg Kiselyov", "Chung-chieh Shan"], "https://doi.org/10.1145/1596550.1596556", "icfp", 2009]], "Neil Sculthorpe": [0, ["Safe functional reactive programming through dependent types", ["Neil Sculthorpe", "Henrik Nilsson"], "https://doi.org/10.1145/1596550.1596558", "icfp", 2009]], "Henrik Nilsson": [0, ["Safe functional reactive programming through dependent types", ["Neil Sculthorpe", "Henrik Nilsson"], "https://doi.org/10.1145/1596550.1596558", "icfp", 2009]], "Hai Liu": [0, ["Causal commutative arrows and their optimization", ["Hai Liu", "Eric Cheng", "Paul Hudak"], "https://doi.org/10.1145/1596550.1596559", "icfp", 2009]], "Eric Cheng": [0, ["Causal commutative arrows and their optimization", ["Hai Liu", "Eric Cheng", "Paul Hudak"], "https://doi.org/10.1145/1596550.1596559", "icfp", 2009]], "Paul Hudak": [0, ["Causal commutative arrows and their optimization", ["Hai Liu", "Eric Cheng", "Paul Hudak"], "https://doi.org/10.1145/1596550.1596559", "icfp", 2009]], "Matthias Felleisen": [0, ["A functional I/O system or, fun for freshman kids", ["Matthias Felleisen", "Robert Bruce Findler", "Matthew Flatt", "Shriram Krishnamurthi"], "https://doi.org/10.1145/1596550.1596561", "icfp", 2009]], "Robert Bruce Findler": [0, ["A functional I/O system or, fun for freshman kids", ["Matthias Felleisen", "Robert Bruce Findler", "Matthew Flatt", "Shriram Krishnamurthi"], "https://doi.org/10.1145/1596550.1596561", "icfp", 2009], ["Scribble: closing the book on ad hoc documentation tools", ["Matthew Flatt", "Eli Barzilay", "Robert Bruce Findler"], "https://doi.org/10.1145/1596550.1596569", "icfp", 2009]], "Matthew Flatt": [0, ["A functional I/O system or, fun for freshman kids", ["Matthias Felleisen", "Robert Bruce Findler", "Matthew Flatt", "Shriram Krishnamurthi"], "https://doi.org/10.1145/1596550.1596561", "icfp", 2009], ["Scribble: closing the book on ad hoc documentation tools", ["Matthew Flatt", "Eli Barzilay", "Robert Bruce Findler"], "https://doi.org/10.1145/1596550.1596569", "icfp", 2009]], "Shriram Krishnamurthi": [0, ["A functional I/O system or, fun for freshman kids", ["Matthias Felleisen", "Robert Bruce Findler", "Matthew Flatt", "Shriram Krishnamurthi"], "https://doi.org/10.1145/1596550.1596561", "icfp", 2009]], "Ryan Newton": [0, ["Experience report: embedded, parallel computer-vision with a functional DSL", ["Ryan Newton", "Teresa Ko"], "https://doi.org/10.1145/1596550.1596562", "icfp", 2009]], "Teresa Ko": [3.8614281772098025e-09, ["Experience report: embedded, parallel computer-vision with a functional DSL", ["Ryan Newton", "Teresa Ko"], "https://doi.org/10.1145/1596550.1596562", "icfp", 2009]], "Simon Marlow": [0, ["Runtime support for multicore Haskell", ["Simon Marlow", "Simon L. Peyton Jones", "Satnam Singh"], "https://doi.org/10.1145/1596550.1596563", "icfp", 2009]], "Simon L. Peyton Jones": [0, ["Runtime support for multicore Haskell", ["Simon Marlow", "Simon L. Peyton Jones", "Satnam Singh"], "https://doi.org/10.1145/1596550.1596563", "icfp", 2009], ["Complete and decidable type inference for GADTs", ["Tom Schrijvers", "Simon L. Peyton Jones", "Martin Sulzmann", "Dimitrios Vytiniotis"], "https://doi.org/10.1145/1596550.1596599", "icfp", 2009]], "Satnam Singh": [0, ["Runtime support for multicore Haskell", ["Simon Marlow", "Simon L. Peyton Jones", "Satnam Singh"], "https://doi.org/10.1145/1596550.1596563", "icfp", 2009]], "Adam Chlipala": [0, ["Effective interactive proofs for higher-order imperative programs", ["Adam Chlipala", "J. Gregory Malecha", "Greg Morrisett", "Avraham Shinnar", "Ryan Wisnesky"], "https://doi.org/10.1145/1596550.1596565", "icfp", 2009]], "J. Gregory Malecha": [0, ["Effective interactive proofs for higher-order imperative programs", ["Adam Chlipala", "J. Gregory Malecha", "Greg Morrisett", "Avraham Shinnar", "Ryan Wisnesky"], "https://doi.org/10.1145/1596550.1596565", "icfp", 2009]], "Greg Morrisett": [0, ["Effective interactive proofs for higher-order imperative programs", ["Adam Chlipala", "J. Gregory Malecha", "Greg Morrisett", "Avraham Shinnar", "Ryan Wisnesky"], "https://doi.org/10.1145/1596550.1596565", "icfp", 2009]], "Avraham Shinnar": [0, ["Effective interactive proofs for higher-order imperative programs", ["Adam Chlipala", "J. Gregory Malecha", "Greg Morrisett", "Avraham Shinnar", "Ryan Wisnesky"], "https://doi.org/10.1145/1596550.1596565", "icfp", 2009]], "Ryan Wisnesky": [0, ["Effective interactive proofs for higher-order imperative programs", ["Adam Chlipala", "J. Gregory Malecha", "Greg Morrisett", "Avraham Shinnar", "Ryan Wisnesky"], "https://doi.org/10.1145/1596550.1596565", "icfp", 2009]], "Gerwin Klein": [0, ["Experience report: seL4: formally verifying a high-performance microkernel", ["Gerwin Klein", "Philip Derrin", "Kevin Elphinstone"], "https://doi.org/10.1145/1596550.1596566", "icfp", 2009]], "Philip Derrin": [0, ["Experience report: seL4: formally verifying a high-performance microkernel", ["Gerwin Klein", "Philip Derrin", "Kevin Elphinstone"], "https://doi.org/10.1145/1596550.1596566", "icfp", 2009]], "Kevin Elphinstone": [0, ["Experience report: seL4: formally verifying a high-performance microkernel", ["Gerwin Klein", "Philip Derrin", "Kevin Elphinstone"], "https://doi.org/10.1145/1596550.1596566", "icfp", 2009]], "Nick Benton": [0, ["Biorthogonality, step-indexing and compiler correctness", ["Nick Benton", "Chung-Kil Hur"], "https://doi.org/10.1145/1596550.1596567", "icfp", 2009]], "Chung-Kil Hur": [1, ["Biorthogonality, step-indexing and compiler correctness", ["Nick Benton", "Chung-Kil Hur"], "https://doi.org/10.1145/1596550.1596567", "icfp", 2009]], "Eli Barzilay": [0, ["Scribble: closing the book on ad hoc documentation tools", ["Matthew Flatt", "Eli Barzilay", "Robert Bruce Findler"], "https://doi.org/10.1145/1596550.1596569", "icfp", 2009]], "Benjamin C. Pierce": [0, ["Lambda, the ultimate TA: using a proof assistant to teach programming language foundations", ["Benjamin C. Pierce"], "https://doi.org/10.1145/1596550.1596552", "icfp", 2009]], "Daniel R. Licata": [0, ["A universe of binding and computation", ["Daniel R. Licata", "Robert Harper"], "https://doi.org/10.1145/1596550.1596571", "icfp", 2009]], "Robert Harper": [0, ["A universe of binding and computation", ["Daniel R. Licata", "Robert Harper"], "https://doi.org/10.1145/1596550.1596571", "icfp", 2009]], "Georg Neis": [0, ["Non-parametric parametricity", ["Georg Neis", "Derek Dreyer", "Andreas Rossberg"], "https://doi.org/10.1145/1596550.1596572", "icfp", 2009]], "Derek Dreyer": [0, ["Non-parametric parametricity", ["Georg Neis", "Derek Dreyer", "Andreas Rossberg"], "https://doi.org/10.1145/1596550.1596572", "icfp", 2009]], "Andreas Rossberg": [0, ["Non-parametric parametricity", ["Georg Neis", "Derek Dreyer", "Andreas Rossberg"], "https://doi.org/10.1145/1596550.1596572", "icfp", 2009]], "Koen Claessen": [0, ["Finding race conditions in Erlang with QuickCheck and PULSE", ["Koen Claessen", "Michal H. Palka", "Nicholas Smallbone", "John Hughes", "Hans Svensson", "Thomas Arts", "Ulf T. Wiger"], "https://doi.org/10.1145/1596550.1596574", "icfp", 2009]], "Michal H. Palka": [0, ["Finding race conditions in Erlang with QuickCheck and PULSE", ["Koen Claessen", "Michal H. Palka", "Nicholas Smallbone", "John Hughes", "Hans Svensson", "Thomas Arts", "Ulf T. Wiger"], "https://doi.org/10.1145/1596550.1596574", "icfp", 2009]], "Nicholas Smallbone": [0, ["Finding race conditions in Erlang with QuickCheck and PULSE", ["Koen Claessen", "Michal H. Palka", "Nicholas Smallbone", "John Hughes", "Hans Svensson", "Thomas Arts", "Ulf T. Wiger"], "https://doi.org/10.1145/1596550.1596574", "icfp", 2009]], "John Hughes": [0, ["Finding race conditions in Erlang with QuickCheck and PULSE", ["Koen Claessen", "Michal H. Palka", "Nicholas Smallbone", "John Hughes", "Hans Svensson", "Thomas Arts", "Ulf T. Wiger"], "https://doi.org/10.1145/1596550.1596574", "icfp", 2009]], "Hans Svensson": [0, ["Finding race conditions in Erlang with QuickCheck and PULSE", ["Koen Claessen", "Michal H. Palka", "Nicholas Smallbone", "John Hughes", "Hans Svensson", "Thomas Arts", "Ulf T. Wiger"], "https://doi.org/10.1145/1596550.1596574", "icfp", 2009]], "Thomas Arts": [0, ["Finding race conditions in Erlang with QuickCheck and PULSE", ["Koen Claessen", "Michal H. Palka", "Nicholas Smallbone", "John Hughes", "Hans Svensson", "Thomas Arts", "Ulf T. Wiger"], "https://doi.org/10.1145/1596550.1596574", "icfp", 2009]], "Ulf T. Wiger": [0, ["Finding race conditions in Erlang with QuickCheck and PULSE", ["Koen Claessen", "Michal H. Palka", "Nicholas Smallbone", "John Hughes", "Hans Svensson", "Thomas Arts", "Ulf T. Wiger"], "https://doi.org/10.1145/1596550.1596574", "icfp", 2009]], "Lukasz Ziarek": [0, ["Partial memoization of concurrency and communication", ["Lukasz Ziarek", "K. C. Sivaramakrishnan", "Suresh Jagannathan"], "https://doi.org/10.1145/1596550.1596575", "icfp", 2009]], "K. C. Sivaramakrishnan": [0, ["Partial memoization of concurrency and communication", ["Lukasz Ziarek", "K. C. Sivaramakrishnan", "Suresh Jagannathan"], "https://doi.org/10.1145/1596550.1596575", "icfp", 2009]], "Suresh Jagannathan": [0, ["Partial memoization of concurrency and communication", ["Lukasz Ziarek", "K. C. Sivaramakrishnan", "Suresh Jagannathan"], "https://doi.org/10.1145/1596550.1596575", "icfp", 2009]], "Janis Voigtlander": [0, ["Free theorems involving type constructor classes: functional pearl", ["Janis Voigtlander"], "https://doi.org/10.1145/1596550.1596577", "icfp", 2009]], "Curt J. Sampson": [0, ["Experience report: Haskell in the 'real world': writing a commercial application in a lazy functional lanuage", ["Curt J. Sampson"], "https://doi.org/10.1145/1596550.1596578", "icfp", 2009]], "Conal M. Elliott": [0, ["Beautiful differentiation", ["Conal M. Elliott"], "https://doi.org/10.1145/1596550.1596579", "icfp", 2009]], "Thomas Gazagnaire": [0, ["OXenstored: an efficient hierarchical and transactional database using functional programming with reference cell comparisons", ["Thomas Gazagnaire", "Vincent Hanquez"], "https://doi.org/10.1145/1596550.1596581", "icfp", 2009]], "Vincent Hanquez": [0, ["OXenstored: an efficient hierarchical and transactional database using functional programming with reference cell comparisons", ["Thomas Gazagnaire", "Vincent Hanquez"], "https://doi.org/10.1145/1596550.1596581", "icfp", 2009]], "Bruno Pagano": [0, ["Experience report: using objective caml to develop safety-critical embedded tools in a certification framework", ["Bruno Pagano", "Olivier Andrieu", "Thomas Moniot", "Benjamin Canou", "Emmanuel Chailloux", "Philippe Wang", "Pascal Manoury", "Jean-Louis Colaco"], "https://doi.org/10.1145/1596550.1596582", "icfp", 2009]], "Olivier Andrieu": [0, ["Experience report: using objective caml to develop safety-critical embedded tools in a certification framework", ["Bruno Pagano", "Olivier Andrieu", "Thomas Moniot", "Benjamin Canou", "Emmanuel Chailloux", "Philippe Wang", "Pascal Manoury", "Jean-Louis Colaco"], "https://doi.org/10.1145/1596550.1596582", "icfp", 2009]], "Thomas Moniot": [0, ["Experience report: using objective caml to develop safety-critical embedded tools in a certification framework", ["Bruno Pagano", "Olivier Andrieu", "Thomas Moniot", "Benjamin Canou", "Emmanuel Chailloux", "Philippe Wang", "Pascal Manoury", "Jean-Louis Colaco"], "https://doi.org/10.1145/1596550.1596582", "icfp", 2009]], "Benjamin Canou": [0, ["Experience report: using objective caml to develop safety-critical embedded tools in a certification framework", ["Bruno Pagano", "Olivier Andrieu", "Thomas Moniot", "Benjamin Canou", "Emmanuel Chailloux", "Philippe Wang", "Pascal Manoury", "Jean-Louis Colaco"], "https://doi.org/10.1145/1596550.1596582", "icfp", 2009]], "Emmanuel Chailloux": [0, ["Experience report: using objective caml to develop safety-critical embedded tools in a certification framework", ["Bruno Pagano", "Olivier Andrieu", "Thomas Moniot", "Benjamin Canou", "Emmanuel Chailloux", "Philippe Wang", "Pascal Manoury", "Jean-Louis Colaco"], "https://doi.org/10.1145/1596550.1596582", "icfp", 2009]], "Philippe Wang": [2.6377628273621667e-05, ["Experience report: using objective caml to develop safety-critical embedded tools in a certification framework", ["Bruno Pagano", "Olivier Andrieu", "Thomas Moniot", "Benjamin Canou", "Emmanuel Chailloux", "Philippe Wang", "Pascal Manoury", "Jean-Louis Colaco"], "https://doi.org/10.1145/1596550.1596582", "icfp", 2009]], "Pascal Manoury": [0, ["Experience report: using objective caml to develop safety-critical embedded tools in a certification framework", ["Bruno Pagano", "Olivier Andrieu", "Thomas Moniot", "Benjamin Canou", "Emmanuel Chailloux", "Philippe Wang", "Pascal Manoury", "Jean-Louis Colaco"], "https://doi.org/10.1145/1596550.1596582", "icfp", 2009]], "Jean-Louis Colaco": [0, ["Experience report: using objective caml to develop safety-critical embedded tools in a certification framework", ["Bruno Pagano", "Olivier Andrieu", "Thomas Moniot", "Benjamin Canou", "Emmanuel Chailloux", "Philippe Wang", "Pascal Manoury", "Jean-Louis Colaco"], "https://doi.org/10.1145/1596550.1596582", "icfp", 2009]], "Pierre Geneves": [0, ["Identifying query incompatibilities with evolving XML schemas", ["Pierre Geneves", "Nabil Layaida", "Vincent Quint"], "https://doi.org/10.1145/1596550.1596583", "icfp", 2009]], "Nabil Layaida": [0, ["Identifying query incompatibilities with evolving XML schemas", ["Pierre Geneves", "Nabil Layaida", "Vincent Quint"], "https://doi.org/10.1145/1596550.1596583", "icfp", 2009]], "Vincent Quint": [0, ["Identifying query incompatibilities with evolving XML schemas", ["Pierre Geneves", "Nabil Layaida", "Vincent Quint"], "https://doi.org/10.1145/1596550.1596583", "icfp", 2009]], "Dan P. Piponi": [0, ["Commutative monads, diagrams and knots", ["Dan P. Piponi"], "https://doi.org/10.1145/1596550.1596553", "icfp", 2009]], "Alexey Rodriguez Yakushev": [0, ["Generic programming with fixed points for mutually recursive datatypes", ["Alexey Rodriguez Yakushev", "Stefan Holdermans", "Andres Loh", "Johan Jeuring"], "https://doi.org/10.1145/1596550.1596585", "icfp", 2009]], "Stefan Holdermans": [0, ["Generic programming with fixed points for mutually recursive datatypes", ["Alexey Rodriguez Yakushev", "Stefan Holdermans", "Andres Loh", "Johan Jeuring"], "https://doi.org/10.1145/1596550.1596585", "icfp", 2009]], "Andres Loh": [0, ["Generic programming with fixed points for mutually recursive datatypes", ["Alexey Rodriguez Yakushev", "Stefan Holdermans", "Andres Loh", "Johan Jeuring"], "https://doi.org/10.1145/1596550.1596585", "icfp", 2009]], "Johan Jeuring": [0, ["Generic programming with fixed points for mutually recursive datatypes", ["Alexey Rodriguez Yakushev", "Stefan Holdermans", "Andres Loh", "Johan Jeuring"], "https://doi.org/10.1145/1596550.1596585", "icfp", 2009]], "Marcos Viera": [0, ["Attribute grammars fly first-class: how to do aspect oriented programming in Haskell", ["Marcos Viera", "S. Doaitse Swierstra", "Wouter Swierstra"], "https://doi.org/10.1145/1596550.1596586", "icfp", 2009]], "S. Doaitse Swierstra": [0, ["Attribute grammars fly first-class: how to do aspect oriented programming in Haskell", ["Marcos Viera", "S. Doaitse Swierstra", "Wouter Swierstra"], "https://doi.org/10.1145/1596550.1596586", "icfp", 2009]], "Wouter Swierstra": [0, ["Attribute grammars fly first-class: how to do aspect oriented programming in Haskell", ["Marcos Viera", "S. Doaitse Swierstra", "Wouter Swierstra"], "https://doi.org/10.1145/1596550.1596586", "icfp", 2009]], "John H. Reppy": [0, ["Parallel concurrent ML", ["John H. Reppy", "Claudio V. Russo", "Yingqi Xiao"], "https://doi.org/10.1145/1596550.1596588", "icfp", 2009]], "Claudio V. Russo": [0, ["Parallel concurrent ML", ["John H. Reppy", "Claudio V. Russo", "Yingqi Xiao"], "https://doi.org/10.1145/1596550.1596588", "icfp", 2009]], "Yingqi Xiao": [0, ["Parallel concurrent ML", ["John H. Reppy", "Claudio V. Russo", "Yingqi Xiao"], "https://doi.org/10.1145/1596550.1596588", "icfp", 2009]], "Avik Chaudhuri": [0, ["A concurrent ML library in concurrent Haskell", ["Avik Chaudhuri"], "https://doi.org/10.1145/1596550.1596589", "icfp", 2009]], "Pascal Cuoq": [0, ["Experience report: OCaml for an industrial-strength static analysis framework", ["Pascal Cuoq", "Julien Signoles", "Patrick Baudin", "Richard Bonichon", "Geraud Canet", "Loic Correnson", "Benjamin Monate", "Virgile Prevosto", "Armand Puccetti"], "https://doi.org/10.1145/1596550.1596591", "icfp", 2009]], "Julien Signoles": [0, ["Experience report: OCaml for an industrial-strength static analysis framework", ["Pascal Cuoq", "Julien Signoles", "Patrick Baudin", "Richard Bonichon", "Geraud Canet", "Loic Correnson", "Benjamin Monate", "Virgile Prevosto", "Armand Puccetti"], "https://doi.org/10.1145/1596550.1596591", "icfp", 2009]], "Patrick Baudin": [0, ["Experience report: OCaml for an industrial-strength static analysis framework", ["Pascal Cuoq", "Julien Signoles", "Patrick Baudin", "Richard Bonichon", "Geraud Canet", "Loic Correnson", "Benjamin Monate", "Virgile Prevosto", "Armand Puccetti"], "https://doi.org/10.1145/1596550.1596591", "icfp", 2009]], "Richard Bonichon": [0, ["Experience report: OCaml for an industrial-strength static analysis framework", ["Pascal Cuoq", "Julien Signoles", "Patrick Baudin", "Richard Bonichon", "Geraud Canet", "Loic Correnson", "Benjamin Monate", "Virgile Prevosto", "Armand Puccetti"], "https://doi.org/10.1145/1596550.1596591", "icfp", 2009]], "Geraud Canet": [0, ["Experience report: OCaml for an industrial-strength static analysis framework", ["Pascal Cuoq", "Julien Signoles", "Patrick Baudin", "Richard Bonichon", "Geraud Canet", "Loic Correnson", "Benjamin Monate", "Virgile Prevosto", "Armand Puccetti"], "https://doi.org/10.1145/1596550.1596591", "icfp", 2009]], "Loic Correnson": [0, ["Experience report: OCaml for an industrial-strength static analysis framework", ["Pascal Cuoq", "Julien Signoles", "Patrick Baudin", "Richard Bonichon", "Geraud Canet", "Loic Correnson", "Benjamin Monate", "Virgile Prevosto", "Armand Puccetti"], "https://doi.org/10.1145/1596550.1596591", "icfp", 2009]], "Benjamin Monate": [0, ["Experience report: OCaml for an industrial-strength static analysis framework", ["Pascal Cuoq", "Julien Signoles", "Patrick Baudin", "Richard Bonichon", "Geraud Canet", "Loic Correnson", "Benjamin Monate", "Virgile Prevosto", "Armand Puccetti"], "https://doi.org/10.1145/1596550.1596591", "icfp", 2009]], "Virgile Prevosto": [0, ["Experience report: OCaml for an industrial-strength static analysis framework", ["Pascal Cuoq", "Julien Signoles", "Patrick Baudin", "Richard Bonichon", "Geraud Canet", "Loic Correnson", "Benjamin Monate", "Virgile Prevosto", "Armand Puccetti"], "https://doi.org/10.1145/1596550.1596591", "icfp", 2009]], "Armand Puccetti": [0, ["Experience report: OCaml for an industrial-strength static analysis framework", ["Pascal Cuoq", "Julien Signoles", "Patrick Baudin", "Richard Bonichon", "Geraud Canet", "Loic Correnson", "Benjamin Monate", "Virgile Prevosto", "Armand Puccetti"], "https://doi.org/10.1145/1596550.1596591", "icfp", 2009]], "Jan Midtgaard": [0, ["Control-flow analysis of function calls and returns by abstract interpretation", ["Jan Midtgaard", "Thomas P. Jensen"], "https://doi.org/10.1145/1596550.1596592", "icfp", 2009]], "Thomas P. Jensen": [0, ["Control-flow analysis of function calls and returns by abstract interpretation", ["Jan Midtgaard", "Thomas P. Jensen"], "https://doi.org/10.1145/1596550.1596592", "icfp", 2009]], "Jay A. McCarthy": [0, ["Automatically RESTful web applications: marking modular serializable continuations", ["Jay A. McCarthy"], "https://doi.org/10.1145/1596550.1596594", "icfp", 2009]], "Vincent Balat": [0, ["Experience report: ocsigen, a web programming framework", ["Vincent Balat", "Jerome Vouillon", "Boris Yakobowski"], "https://doi.org/10.1145/1596550.1596595", "icfp", 2009]], "Jerome Vouillon": [0, ["Experience report: ocsigen, a web programming framework", ["Vincent Balat", "Jerome Vouillon", "Boris Yakobowski"], "https://doi.org/10.1145/1596550.1596595", "icfp", 2009]], "Boris Yakobowski": [0, ["Experience report: ocsigen, a web programming framework", ["Vincent Balat", "Jerome Vouillon", "Boris Yakobowski"], "https://doi.org/10.1145/1596550.1596595", "icfp", 2009]], "Tiark Rompf": [0, ["Implementing first-class polymorphic delimited continuations by a type-directed selective CPS-transform", ["Tiark Rompf", "Ingo Maier", "Martin Odersky"], "https://doi.org/10.1145/1596550.1596596", "icfp", 2009]], "Ingo Maier": [0, ["Implementing first-class polymorphic delimited continuations by a type-directed selective CPS-transform", ["Tiark Rompf", "Ingo Maier", "Martin Odersky"], "https://doi.org/10.1145/1596550.1596596", "icfp", 2009]], "Martin Odersky": [0, ["Implementing first-class polymorphic delimited continuations by a type-directed selective CPS-transform", ["Tiark Rompf", "Ingo Maier", "Martin Odersky"], "https://doi.org/10.1145/1596550.1596596", "icfp", 2009]], "Nikhil Swamy": [0, ["A theory of typed coercions and its applications", ["Nikhil Swamy", "Michael W. Hicks", "Gavin M. Bierman"], "https://doi.org/10.1145/1596550.1596598", "icfp", 2009]], "Michael W. Hicks": [0, ["A theory of typed coercions and its applications", ["Nikhil Swamy", "Michael W. Hicks", "Gavin M. Bierman"], "https://doi.org/10.1145/1596550.1596598", "icfp", 2009]], "Gavin M. Bierman": [0, ["A theory of typed coercions and its applications", ["Nikhil Swamy", "Michael W. Hicks", "Gavin M. Bierman"], "https://doi.org/10.1145/1596550.1596598", "icfp", 2009]], "Tom Schrijvers": [0, ["Complete and decidable type inference for GADTs", ["Tom Schrijvers", "Simon L. Peyton Jones", "Martin Sulzmann", "Dimitrios Vytiniotis"], "https://doi.org/10.1145/1596550.1596599", "icfp", 2009]], "Martin Sulzmann": [0, ["Complete and decidable type inference for GADTs", ["Tom Schrijvers", "Simon L. Peyton Jones", "Martin Sulzmann", "Dimitrios Vytiniotis"], "https://doi.org/10.1145/1596550.1596599", "icfp", 2009]], "Dimitrios Vytiniotis": [0, ["Complete and decidable type inference for GADTs", ["Tom Schrijvers", "Simon L. Peyton Jones", "Martin Sulzmann", "Dimitrios Vytiniotis"], "https://doi.org/10.1145/1596550.1596599", "icfp", 2009]]}
{"Vincent St-Amour": [0, ["Herbarium Racketensis: a stroll through the woods (functional pearl)", ["Vincent St-Amour", "Daniel Feltey", "Spencer P. Florence", "Shu-Hung You", "Robert Bruce Findler"], "https://doi.org/10.1145/3110245", "icfp", 2017]], "Daniel Feltey": [0, ["Herbarium Racketensis: a stroll through the woods (functional pearl)", ["Vincent St-Amour", "Daniel Feltey", "Spencer P. Florence", "Shu-Hung You", "Robert Bruce Findler"], "https://doi.org/10.1145/3110245", "icfp", 2017]], "Spencer P. Florence": [0, ["Herbarium Racketensis: a stroll through the woods (functional pearl)", ["Vincent St-Amour", "Daniel Feltey", "Spencer P. Florence", "Shu-Hung You", "Robert Bruce Findler"], "https://doi.org/10.1145/3110245", "icfp", 2017]], "Shu-Hung You": [0, ["Herbarium Racketensis: a stroll through the woods (functional pearl)", ["Vincent St-Amour", "Daniel Feltey", "Spencer P. Florence", "Shu-Hung You", "Robert Bruce Findler"], "https://doi.org/10.1145/3110245", "icfp", 2017]], "Robert Bruce Findler": [0, ["Herbarium Racketensis: a stroll through the woods (functional pearl)", ["Vincent St-Amour", "Daniel Feltey", "Spencer P. Florence", "Shu-Hung You", "Robert Bruce Findler"], "https://doi.org/10.1145/3110245", "icfp", 2017]], "Ivan Perez": [0, ["Testing and debugging functional reactive programming", ["Ivan Perez", "Henrik Nilsson"], "https://doi.org/10.1145/3110246", "icfp", 2017]], "Henrik Nilsson": [0, ["Testing and debugging functional reactive programming", ["Ivan Perez", "Henrik Nilsson"], "https://doi.org/10.1145/3110246", "icfp", 2017]], "Joachim Breitner": [0, ["Lock-step simulation is child's play (experience report)", ["Joachim Breitner", "Chris Smith"], "https://doi.org/10.1145/3110247", "icfp", 2017]], "Chris Smith": [0, ["Lock-step simulation is child's play (experience report)", ["Joachim Breitner", "Chris Smith"], "https://doi.org/10.1145/3110247", "icfp", 2017]], "Benjamin Canou": [0, ["Scaling up functional programming education: under the hood of the OCaml MOOC", ["Benjamin Canou", "Roberto Di Cosmo", "Gregoire Henry"], "https://doi.org/10.1145/3110248", "icfp", 2017]], "Roberto Di Cosmo": [0, ["Scaling up functional programming education: under the hood of the OCaml MOOC", ["Benjamin Canou", "Roberto Di Cosmo", "Gregoire Henry"], "https://doi.org/10.1145/3110248", "icfp", 2017]], "Gregoire Henry": [0, ["Scaling up functional programming education: under the hood of the OCaml MOOC", ["Benjamin Canou", "Roberto Di Cosmo", "Gregoire Henry"], "https://doi.org/10.1145/3110248", "icfp", 2017]], "J. Michael Spivey": [0, ["Faster coroutine pipelines", ["J. Michael Spivey"], "https://doi.org/10.1145/3110249", "icfp", 2017]], "Jean-Philippe Bernardy": [0, ["A pretty but not greedy printer (functional pearl)", ["Jean-Philippe Bernardy"], "https://doi.org/10.1145/3110250", "icfp", 2017]], "Conal Elliott": [0, ["Generic functional parallel algorithms: scan and FFT", ["Conal Elliott"], "https://doi.org/10.1145/3110251", "icfp", 2017], ["Compiling to categories", ["Conal Elliott"], "https://doi.org/10.1145/3110271", "icfp", 2017]], "William E. Byrd": [0, ["A unified approach to solving seven programming problems (functional pearl)", ["William E. Byrd", "Michael Ballantyne", "Gregory Rosenblatt", "Matthew Might"], "https://doi.org/10.1145/3110252", "icfp", 2017]], "Michael Ballantyne": [0, ["A unified approach to solving seven programming problems (functional pearl)", ["William E. Byrd", "Michael Ballantyne", "Gregory Rosenblatt", "Matthew Might"], "https://doi.org/10.1145/3110252", "icfp", 2017]], "Gregory Rosenblatt": [0, ["A unified approach to solving seven programming problems (functional pearl)", ["William E. Byrd", "Michael Ballantyne", "Gregory Rosenblatt", "Matthew Might"], "https://doi.org/10.1145/3110252", "icfp", 2017]], "Matthew Might": [0, ["A unified approach to solving seven programming problems (functional pearl)", ["William E. Byrd", "Michael Ballantyne", "Gregory Rosenblatt", "Matthew Might"], "https://doi.org/10.1145/3110252", "icfp", 2017], ["Restricting grammars with tree automata", ["Michael D. Adams", "Matthew Might"], "https://doi.org/10.1145/3133906", "icfp", 2017]], "Joshua S. Auerbach": [0, ["Prototyping a query compiler using Coq (experience report)", ["Joshua S. Auerbach", "Martin Hirzel", "Louis Mandel", "Avraham Shinnar", "Jerome Simeon"], "https://doi.org/10.1145/3110253", "icfp", 2017]], "Martin Hirzel": [0, ["Prototyping a query compiler using Coq (experience report)", ["Joshua S. Auerbach", "Martin Hirzel", "Louis Mandel", "Avraham Shinnar", "Jerome Simeon"], "https://doi.org/10.1145/3110253", "icfp", 2017]], "Louis Mandel": [0, ["Prototyping a query compiler using Coq (experience report)", ["Joshua S. Auerbach", "Martin Hirzel", "Louis Mandel", "Avraham Shinnar", "Jerome Simeon"], "https://doi.org/10.1145/3110253", "icfp", 2017]], "Avraham Shinnar": [0, ["Prototyping a query compiler using Coq (experience report)", ["Joshua S. Auerbach", "Martin Hirzel", "Louis Mandel", "Avraham Shinnar", "Jerome Simeon"], "https://doi.org/10.1145/3110253", "icfp", 2017]], "Jerome Simeon": [0, ["Prototyping a query compiler using Coq (experience report)", ["Joshua S. Auerbach", "Martin Hirzel", "Louis Mandel", "Avraham Shinnar", "Jerome Simeon"], "https://doi.org/10.1145/3110253", "icfp", 2017]], "Daniel Winograd-Cort": [0, ["A framework for adaptive differential privacy", ["Daniel Winograd-Cort", "Andreas Haeberlen", "Aaron Roth", "Benjamin C. Pierce"], "https://doi.org/10.1145/3110254", "icfp", 2017]], "Andreas Haeberlen": [0, ["A framework for adaptive differential privacy", ["Daniel Winograd-Cort", "Andreas Haeberlen", "Aaron Roth", "Benjamin C. Pierce"], "https://doi.org/10.1145/3110254", "icfp", 2017]], "Aaron Roth": [0, ["A framework for adaptive differential privacy", ["Daniel Winograd-Cort", "Andreas Haeberlen", "Aaron Roth", "Benjamin C. Pierce"], "https://doi.org/10.1145/3110254", "icfp", 2017]], "Benjamin C. Pierce": [0, ["A framework for adaptive differential privacy", ["Daniel Winograd-Cort", "Andreas Haeberlen", "Aaron Roth", "Benjamin C. Pierce"], "https://doi.org/10.1145/3110254", "icfp", 2017]], "Praveen Narayanan": [0, ["Symbolic conditioning of arrays in probabilistic programs", ["Praveen Narayanan", "Chung-chieh Shan"], "https://doi.org/10.1145/3110255", "icfp", 2017]], "Chung-chieh Shan": [0, ["Symbolic conditioning of arrays in probabilistic programs", ["Praveen Narayanan", "Chung-chieh Shan"], "https://doi.org/10.1145/3110255", "icfp", 2017]], "David Darais": [0, ["Abstracting definitional interpreters (functional pearl)", ["David Darais", "Nicholas Labich", "Phuc C. Nguyen", "David Van Horn"], "https://doi.org/10.1145/3110256", "icfp", 2017]], "Nicholas Labich": [0, ["Abstracting definitional interpreters (functional pearl)", ["David Darais", "Nicholas Labich", "Phuc C. Nguyen", "David Van Horn"], "https://doi.org/10.1145/3110256", "icfp", 2017]], "Phuc C. Nguyen": [0, ["Abstracting definitional interpreters (functional pearl)", ["David Darais", "Nicholas Labich", "Phuc C. Nguyen", "David Van Horn"], "https://doi.org/10.1145/3110256", "icfp", 2017]], "David Van Horn": [0, ["Abstracting definitional interpreters (functional pearl)", ["David Darais", "Nicholas Labich", "Phuc C. Nguyen", "David Van Horn"], "https://doi.org/10.1145/3110256", "icfp", 2017]], "Yannick Forster": [0, ["On the expressive power of user-defined effects: effect handlers, monadic reflection, delimited control", ["Yannick Forster", "Ohad Kammar", "Sam Lindley", "Matija Pretnar"], "https://doi.org/10.1145/3110257", "icfp", 2017]], "Ohad Kammar": [0, ["On the expressive power of user-defined effects: effect handlers, monadic reflection, delimited control", ["Yannick Forster", "Ohad Kammar", "Sam Lindley", "Matija Pretnar"], "https://doi.org/10.1145/3110257", "icfp", 2017]], "Sam Lindley": [0, ["On the expressive power of user-defined effects: effect handlers, monadic reflection, delimited control", ["Yannick Forster", "Ohad Kammar", "Sam Lindley", "Matija Pretnar"], "https://doi.org/10.1145/3110257", "icfp", 2017]], "Matija Pretnar": [0, ["On the expressive power of user-defined effects: effect handlers, monadic reflection, delimited control", ["Yannick Forster", "Ohad Kammar", "Sam Lindley", "Matija Pretnar"], "https://doi.org/10.1145/3110257", "icfp", 2017]], "Wilmer Ricciotti": [0, ["Imperative functional programs that explain their work", ["Wilmer Ricciotti", "Jan Stolarek", "Roly Perera", "James Cheney"], "https://doi.org/10.1145/3110258", "icfp", 2017]], "Jan Stolarek": [0, ["Imperative functional programs that explain their work", ["Wilmer Ricciotti", "Jan Stolarek", "Roly Perera", "James Cheney"], "https://doi.org/10.1145/3110258", "icfp", 2017]], "Roly Perera": [0, ["Imperative functional programs that explain their work", ["Wilmer Ricciotti", "Jan Stolarek", "Roly Perera", "James Cheney"], "https://doi.org/10.1145/3110258", "icfp", 2017]], "James Cheney": [0, ["Imperative functional programs that explain their work", ["Wilmer Ricciotti", "Jan Stolarek", "Roly Perera", "James Cheney"], "https://doi.org/10.1145/3110258", "icfp", 2017]], "Jan Midtgaard": [0, ["Effect-driven QuickChecking of compilers", ["Jan Midtgaard", "Mathias Nygaard Justesen", "Patrick Kasting", "Flemming Nielson", "Hanne Riis Nielson"], "https://doi.org/10.1145/3110259", "icfp", 2017]], "Mathias Nygaard Justesen": [0, ["Effect-driven QuickChecking of compilers", ["Jan Midtgaard", "Mathias Nygaard Justesen", "Patrick Kasting", "Flemming Nielson", "Hanne Riis Nielson"], "https://doi.org/10.1145/3110259", "icfp", 2017]], "Patrick Kasting": [0, ["Effect-driven QuickChecking of compilers", ["Jan Midtgaard", "Mathias Nygaard Justesen", "Patrick Kasting", "Flemming Nielson", "Hanne Riis Nielson"], "https://doi.org/10.1145/3110259", "icfp", 2017]], "Flemming Nielson": [0, ["Effect-driven QuickChecking of compilers", ["Jan Midtgaard", "Mathias Nygaard Justesen", "Patrick Kasting", "Flemming Nielson", "Hanne Riis Nielson"], "https://doi.org/10.1145/3110259", "icfp", 2017]], "Hanne Riis Nielson": [0, ["Effect-driven QuickChecking of compilers", ["Jan Midtgaard", "Mathias Nygaard Justesen", "Patrick Kasting", "Flemming Nielson", "Hanne Riis Nielson"], "https://doi.org/10.1145/3110259", "icfp", 2017]], "Juan Pedro Bolivar Puente": [0, ["Persistence for the masses: RRB-vectors in a systems language", ["Juan Pedro Bolivar Puente"], "https://doi.org/10.1145/3110260", "icfp", 2017]], "Jonathan Protzenko": [0, ["Verified low-level programming embedded in F", ["Jonathan Protzenko", "Jean Karim Zinzindohoue", "Aseem Rastogi", "Tahina Ramananandro", "Peng Wang", "Santiago Zanella Beguelin", "Antoine Delignat-Lavaud", "Catalin Hritcu", "Karthikeyan Bhargavan", "Cedric Fournet", "Nikhil Swamy"], "https://doi.org/10.1145/3110261", "icfp", 2017]], "Jean Karim Zinzindohoue": [0, ["Verified low-level programming embedded in F", ["Jonathan Protzenko", "Jean Karim Zinzindohoue", "Aseem Rastogi", "Tahina Ramananandro", "Peng Wang", "Santiago Zanella Beguelin", "Antoine Delignat-Lavaud", "Catalin Hritcu", "Karthikeyan Bhargavan", "Cedric Fournet", "Nikhil Swamy"], "https://doi.org/10.1145/3110261", "icfp", 2017]], "Aseem Rastogi": [0, ["Verified low-level programming embedded in F", ["Jonathan Protzenko", "Jean Karim Zinzindohoue", "Aseem Rastogi", "Tahina Ramananandro", "Peng Wang", "Santiago Zanella Beguelin", "Antoine Delignat-Lavaud", "Catalin Hritcu", "Karthikeyan Bhargavan", "Cedric Fournet", "Nikhil Swamy"], "https://doi.org/10.1145/3110261", "icfp", 2017]], "Tahina Ramananandro": [0, ["Verified low-level programming embedded in F", ["Jonathan Protzenko", "Jean Karim Zinzindohoue", "Aseem Rastogi", "Tahina Ramananandro", "Peng Wang", "Santiago Zanella Beguelin", "Antoine Delignat-Lavaud", "Catalin Hritcu", "Karthikeyan Bhargavan", "Cedric Fournet", "Nikhil Swamy"], "https://doi.org/10.1145/3110261", "icfp", 2017]], "Peng Wang": [1.796872129489202e-05, ["Verified low-level programming embedded in F", ["Jonathan Protzenko", "Jean Karim Zinzindohoue", "Aseem Rastogi", "Tahina Ramananandro", "Peng Wang", "Santiago Zanella Beguelin", "Antoine Delignat-Lavaud", "Catalin Hritcu", "Karthikeyan Bhargavan", "Cedric Fournet", "Nikhil Swamy"], "https://doi.org/10.1145/3110261", "icfp", 2017], ["TiML: a functional language for practical complexity analysis with invariants", ["Peng Wang", "Di Wang", "Adam Chlipala"], "https://doi.org/10.1145/3133903", "icfp", 2017]], "Santiago Zanella Beguelin": [0, ["Verified low-level programming embedded in F", ["Jonathan Protzenko", "Jean Karim Zinzindohoue", "Aseem Rastogi", "Tahina Ramananandro", "Peng Wang", "Santiago Zanella Beguelin", "Antoine Delignat-Lavaud", "Catalin Hritcu", "Karthikeyan Bhargavan", "Cedric Fournet", "Nikhil Swamy"], "https://doi.org/10.1145/3110261", "icfp", 2017]], "Antoine Delignat-Lavaud": [0, ["Verified low-level programming embedded in F", ["Jonathan Protzenko", "Jean Karim Zinzindohoue", "Aseem Rastogi", "Tahina Ramananandro", "Peng Wang", "Santiago Zanella Beguelin", "Antoine Delignat-Lavaud", "Catalin Hritcu", "Karthikeyan Bhargavan", "Cedric Fournet", "Nikhil Swamy"], "https://doi.org/10.1145/3110261", "icfp", 2017]], "Catalin Hritcu": [0, ["Verified low-level programming embedded in F", ["Jonathan Protzenko", "Jean Karim Zinzindohoue", "Aseem Rastogi", "Tahina Ramananandro", "Peng Wang", "Santiago Zanella Beguelin", "Antoine Delignat-Lavaud", "Catalin Hritcu", "Karthikeyan Bhargavan", "Cedric Fournet", "Nikhil Swamy"], "https://doi.org/10.1145/3110261", "icfp", 2017]], "Karthikeyan Bhargavan": [0, ["Verified low-level programming embedded in F", ["Jonathan Protzenko", "Jean Karim Zinzindohoue", "Aseem Rastogi", "Tahina Ramananandro", "Peng Wang", "Santiago Zanella Beguelin", "Antoine Delignat-Lavaud", "Catalin Hritcu", "Karthikeyan Bhargavan", "Cedric Fournet", "Nikhil Swamy"], "https://doi.org/10.1145/3110261", "icfp", 2017]], "Cedric Fournet": [0, ["Verified low-level programming embedded in F", ["Jonathan Protzenko", "Jean Karim Zinzindohoue", "Aseem Rastogi", "Tahina Ramananandro", "Peng Wang", "Santiago Zanella Beguelin", "Antoine Delignat-Lavaud", "Catalin Hritcu", "Karthikeyan Bhargavan", "Cedric Fournet", "Nikhil Swamy"], "https://doi.org/10.1145/3110261", "icfp", 2017]], "Nikhil Swamy": [0, ["Verified low-level programming embedded in F", ["Jonathan Protzenko", "Jean Karim Zinzindohoue", "Aseem Rastogi", "Tahina Ramananandro", "Peng Wang", "Santiago Zanella Beguelin", "Antoine Delignat-Lavaud", "Catalin Hritcu", "Karthikeyan Bhargavan", "Cedric Fournet", "Nikhil Swamy"], "https://doi.org/10.1145/3110261", "icfp", 2017]], "Scott Owens": [0, ["Verifying efficient function calls in CakeML", ["Scott Owens", "Michael Norrish", "Ramana Kumar", "Magnus O. Myreen", "Yong Kiam Tan"], "https://doi.org/10.1145/3110262", "icfp", 2017]], "Michael Norrish": [0, ["Verifying efficient function calls in CakeML", ["Scott Owens", "Michael Norrish", "Ramana Kumar", "Magnus O. Myreen", "Yong Kiam Tan"], "https://doi.org/10.1145/3110262", "icfp", 2017]], "Ramana Kumar": [0, ["Verifying efficient function calls in CakeML", ["Scott Owens", "Michael Norrish", "Ramana Kumar", "Magnus O. Myreen", "Yong Kiam Tan"], "https://doi.org/10.1145/3110262", "icfp", 2017]], "Magnus O. Myreen": [0, ["Verifying efficient function calls in CakeML", ["Scott Owens", "Michael Norrish", "Ramana Kumar", "Magnus O. Myreen", "Yong Kiam Tan"], "https://doi.org/10.1145/3110262", "icfp", 2017]], "Yong Kiam Tan": [0, ["Verifying efficient function calls in CakeML", ["Scott Owens", "Michael Norrish", "Ramana Kumar", "Magnus O. Myreen", "Yong Kiam Tan"], "https://doi.org/10.1145/3110262", "icfp", 2017]], "Geoffrey Mainland": [0, ["Better living through operational semantics: an optimizing compiler for radio protocols", ["Geoffrey Mainland"], "https://doi.org/10.1145/3110263", "icfp", 2017]], "Thibaut Balabonski": [0, ["Foundations of strong call by need", ["Thibaut Balabonski", "Pablo Barenbaum", "Eduardo Bonelli", "Delia Kesner"], "https://doi.org/10.1145/3110264", "icfp", 2017]], "Pablo Barenbaum": [0, ["Foundations of strong call by need", ["Thibaut Balabonski", "Pablo Barenbaum", "Eduardo Bonelli", "Delia Kesner"], "https://doi.org/10.1145/3110264", "icfp", 2017]], "Eduardo Bonelli": [0, ["Foundations of strong call by need", ["Thibaut Balabonski", "Pablo Barenbaum", "Eduardo Bonelli", "Delia Kesner"], "https://doi.org/10.1145/3110264", "icfp", 2017]], "Delia Kesner": [0, ["Foundations of strong call by need", ["Thibaut Balabonski", "Pablo Barenbaum", "Eduardo Bonelli", "Delia Kesner"], "https://doi.org/10.1145/3110264", "icfp", 2017]], "Alejandro Aguirre": [0, ["A relational logic for higher-order programs", ["Alejandro Aguirre", "Gilles Barthe", "Marco Gaboardi", "Deepak Garg", "Pierre-Yves Strub"], "https://doi.org/10.1145/3110265", "icfp", 2017]], "Gilles Barthe": [0, ["A relational logic for higher-order programs", ["Alejandro Aguirre", "Gilles Barthe", "Marco Gaboardi", "Deepak Garg", "Pierre-Yves Strub"], "https://doi.org/10.1145/3110265", "icfp", 2017]], "Marco Gaboardi": [0, ["A relational logic for higher-order programs", ["Alejandro Aguirre", "Gilles Barthe", "Marco Gaboardi", "Deepak Garg", "Pierre-Yves Strub"], "https://doi.org/10.1145/3110265", "icfp", 2017]], "Deepak Garg": [0, ["A relational logic for higher-order programs", ["Alejandro Aguirre", "Gilles Barthe", "Marco Gaboardi", "Deepak Garg", "Pierre-Yves Strub"], "https://doi.org/10.1145/3110265", "icfp", 2017], ["Robust and compositional verification of object capability patterns", ["David Swasey", "Deepak Garg", "Derek Dreyer"], "https://doi.org/10.1145/3133913", "icfp", 2017]], "Pierre-Yves Strub": [0, ["A relational logic for higher-order programs", ["Alejandro Aguirre", "Gilles Barthe", "Marco Gaboardi", "Deepak Garg", "Pierre-Yves Strub"], "https://doi.org/10.1145/3110265", "icfp", 2017]], "Makoto Hamana": [0, ["How to prove your calculus is decidable: practical applications of second-order algebraic theories and computation", ["Makoto Hamana"], "https://doi.org/10.1145/3110266", "icfp", 2017]], "Milo Davis": [0, ["No-brainer CPS conversion (functional pearl)", ["Milo Davis", "William Meehan", "Olin Shivers"], "https://doi.org/10.1145/3110267", "icfp", 2017]], "William Meehan": [0, ["No-brainer CPS conversion (functional pearl)", ["Milo Davis", "William Meehan", "Olin Shivers"], "https://doi.org/10.1145/3110267", "icfp", 2017]], "Olin Shivers": [0, ["No-brainer CPS conversion (functional pearl)", ["Milo Davis", "William Meehan", "Olin Shivers"], "https://doi.org/10.1145/3110267", "icfp", 2017]], "Joonwon Choi": [0.9985402524471283, ["Kami: a platform for high-level parametric hardware specification and its modular verification", ["Joonwon Choi", "Muralidaran Vijayaraghavan", "Benjamin Sherman", "Adam Chlipala", "Arvind"], "https://doi.org/10.1145/3110268", "icfp", 2017]], "Muralidaran Vijayaraghavan": [0, ["Kami: a platform for high-level parametric hardware specification and its modular verification", ["Joonwon Choi", "Muralidaran Vijayaraghavan", "Benjamin Sherman", "Adam Chlipala", "Arvind"], "https://doi.org/10.1145/3110268", "icfp", 2017]], "Benjamin Sherman": [0, ["Kami: a platform for high-level parametric hardware specification and its modular verification", ["Joonwon Choi", "Muralidaran Vijayaraghavan", "Benjamin Sherman", "Adam Chlipala", "Arvind"], "https://doi.org/10.1145/3110268", "icfp", 2017]], "Adam Chlipala": [0, ["Kami: a platform for high-level parametric hardware specification and its modular verification", ["Joonwon Choi", "Muralidaran Vijayaraghavan", "Benjamin Sherman", "Adam Chlipala", "Arvind"], "https://doi.org/10.1145/3110268", "icfp", 2017], ["TiML: a functional language for practical complexity analysis with invariants", ["Peng Wang", "Di Wang", "Adam Chlipala"], "https://doi.org/10.1145/3133903", "icfp", 2017]], "Arvind": [0, ["Kami: a platform for high-level parametric hardware specification and its modular verification", ["Joonwon Choi", "Muralidaran Vijayaraghavan", "Benjamin Sherman", "Adam Chlipala", "Arvind"], "https://doi.org/10.1145/3110268", "icfp", 2017]], "Konstantin Weitz": [0, ["SpaceSearch: a library for building and verifying solver-aided tools", ["Konstantin Weitz", "Steven Lyubomirsky", "Stefan Heule", "Emina Torlak", "Michael D. Ernst", "Zachary Tatlock"], "https://doi.org/10.1145/3110269", "icfp", 2017]], "Steven Lyubomirsky": [0, ["SpaceSearch: a library for building and verifying solver-aided tools", ["Konstantin Weitz", "Steven Lyubomirsky", "Stefan Heule", "Emina Torlak", "Michael D. Ernst", "Zachary Tatlock"], "https://doi.org/10.1145/3110269", "icfp", 2017]], "Stefan Heule": [0, ["SpaceSearch: a library for building and verifying solver-aided tools", ["Konstantin Weitz", "Steven Lyubomirsky", "Stefan Heule", "Emina Torlak", "Michael D. Ernst", "Zachary Tatlock"], "https://doi.org/10.1145/3110269", "icfp", 2017]], "Emina Torlak": [0, ["SpaceSearch: a library for building and verifying solver-aided tools", ["Konstantin Weitz", "Steven Lyubomirsky", "Stefan Heule", "Emina Torlak", "Michael D. Ernst", "Zachary Tatlock"], "https://doi.org/10.1145/3110269", "icfp", 2017]], "Michael D. Ernst": [0, ["SpaceSearch: a library for building and verifying solver-aided tools", ["Konstantin Weitz", "Steven Lyubomirsky", "Stefan Heule", "Emina Torlak", "Michael D. Ernst", "Zachary Tatlock"], "https://doi.org/10.1145/3110269", "icfp", 2017]], "Zachary Tatlock": [0, ["SpaceSearch: a library for building and verifying solver-aided tools", ["Konstantin Weitz", "Steven Lyubomirsky", "Stefan Heule", "Emina Torlak", "Michael D. Ernst", "Zachary Tatlock"], "https://doi.org/10.1145/3110269", "icfp", 2017]], "Benjamin Cosman": [0, ["Local refinement typing", ["Benjamin Cosman", "Ranjit Jhala"], "https://doi.org/10.1145/3110270", "icfp", 2017]], "Ranjit Jhala": [0, ["Local refinement typing", ["Benjamin Cosman", "Ranjit Jhala"], "https://doi.org/10.1145/3110270", "icfp", 2017], ["Learning to blame: localizing novice type errors with data-driven diagnosis", ["Eric L. Seidel", "Huma Sibghat", "Kamalika Chaudhuri", "Westley Weimer", "Ranjit Jhala"], "https://doi.org/10.1145/3138818", "icfp", 2017], ["Verifying distributed programs via canonical sequentialization", ["Alexander Bakst", "Klaus von Gleissenthall", "Rami Gokhan Kici", "Ranjit Jhala"], "https://doi.org/10.1145/3133934", "icfp", 2017]], "Francois Pottier": [0, ["Visitors unchained", ["Francois Pottier"], "https://doi.org/10.1145/3110272", "icfp", 2017]], "Jeremy Yallop": [0, ["Staged generic programming", ["Jeremy Yallop"], "https://doi.org/10.1145/3110273", "icfp", 2017]], "Leif Andersen": [0, ["Super 8 languages for making movies (functional pearl)", ["Leif Andersen", "Stephen Chang", "Matthias Felleisen"], "https://doi.org/10.1145/3110274", "icfp", 2017]], "Stephen Chang": [2.4325365721722392e-08, ["Super 8 languages for making movies (functional pearl)", ["Leif Andersen", "Stephen Chang", "Matthias Felleisen"], "https://doi.org/10.1145/3110274", "icfp", 2017]], "Matthias Felleisen": [0, ["Super 8 languages for making movies (functional pearl)", ["Leif Andersen", "Stephen Chang", "Matthias Felleisen"], "https://doi.org/10.1145/3110274", "icfp", 2017]], "Stephanie Weirich": [0, ["A specification for dependent types in Haskell", ["Stephanie Weirich", "Antoine Voizard", "Pedro Henrique Avezedo de Amorim", "Richard A. Eisenberg"], "https://doi.org/10.1145/3110275", "icfp", 2017]], "Antoine Voizard": [0, ["A specification for dependent types in Haskell", ["Stephanie Weirich", "Antoine Voizard", "Pedro Henrique Avezedo de Amorim", "Richard A. Eisenberg"], "https://doi.org/10.1145/3110275", "icfp", 2017]], "Pedro Henrique Avezedo de Amorim": [0, ["A specification for dependent types in Haskell", ["Stephanie Weirich", "Antoine Voizard", "Pedro Henrique Avezedo de Amorim", "Richard A. Eisenberg"], "https://doi.org/10.1145/3110275", "icfp", 2017]], "Richard A. Eisenberg": [0, ["A specification for dependent types in Haskell", ["Stephanie Weirich", "Antoine Voizard", "Pedro Henrique Avezedo de Amorim", "Richard A. Eisenberg"], "https://doi.org/10.1145/3110275", "icfp", 2017], ["Constrained type families", ["J. Garrett Morris", "Richard A. Eisenberg"], "https://doi.org/10.1145/3110286", "icfp", 2017]], "Andreas Nuyts": [0, ["Parametric quantifiers for dependent type theory", ["Andreas Nuyts", "Andrea Vezzosi", "Dominique Devriese"], "https://doi.org/10.1145/3110276", "icfp", 2017]], "Andrea Vezzosi": [0, ["Parametric quantifiers for dependent type theory", ["Andreas Nuyts", "Andrea Vezzosi", "Dominique Devriese"], "https://doi.org/10.1145/3110276", "icfp", 2017], ["Normalization by evaluation for sized dependent types", ["Andreas Abel", "Andrea Vezzosi", "Theo Winterhalter"], "https://doi.org/10.1145/3110277", "icfp", 2017]], "Dominique Devriese": [0, ["Parametric quantifiers for dependent type theory", ["Andreas Nuyts", "Andrea Vezzosi", "Dominique Devriese"], "https://doi.org/10.1145/3110276", "icfp", 2017]], "Andreas Abel": [0, ["Normalization by evaluation for sized dependent types", ["Andreas Abel", "Andrea Vezzosi", "Theo Winterhalter"], "https://doi.org/10.1145/3110277", "icfp", 2017]], "Theo Winterhalter": [0, ["Normalization by evaluation for sized dependent types", ["Andreas Abel", "Andrea Vezzosi", "Theo Winterhalter"], "https://doi.org/10.1145/3110277", "icfp", 2017]], "Gabriel Ebner": [0, ["A metaprogramming framework for formal verification", ["Gabriel Ebner", "Sebastian Ullrich", "Jared Roesch", "Jeremy Avigad", "Leonardo de Moura"], "https://doi.org/10.1145/3110278", "icfp", 2017]], "Sebastian Ullrich": [0, ["A metaprogramming framework for formal verification", ["Gabriel Ebner", "Sebastian Ullrich", "Jared Roesch", "Jeremy Avigad", "Leonardo de Moura"], "https://doi.org/10.1145/3110278", "icfp", 2017]], "Jared Roesch": [0, ["A metaprogramming framework for formal verification", ["Gabriel Ebner", "Sebastian Ullrich", "Jared Roesch", "Jeremy Avigad", "Leonardo de Moura"], "https://doi.org/10.1145/3110278", "icfp", 2017]], "Jeremy Avigad": [0, ["A metaprogramming framework for formal verification", ["Gabriel Ebner", "Sebastian Ullrich", "Jared Roesch", "Jeremy Avigad", "Leonardo de Moura"], "https://doi.org/10.1145/3110278", "icfp", 2017]], "Leonardo de Moura": [0, ["A metaprogramming framework for formal verification", ["Gabriel Ebner", "Sebastian Ullrich", "Jared Roesch", "Jeremy Avigad", "Leonardo de Moura"], "https://doi.org/10.1145/3110278", "icfp", 2017]], "Hernan C. Melgratti": [0, ["Chaperone contracts for higher-order sessions", ["Hernan C. Melgratti", "Luca Padovani"], "https://doi.org/10.1145/3110279", "icfp", 2017]], "Luca Padovani": [0, ["Chaperone contracts for higher-order sessions", ["Hernan C. Melgratti", "Luca Padovani"], "https://doi.org/10.1145/3110279", "icfp", 2017]], "Lucas Waye": [0, ["Whip: higher-order contracts for modern services", ["Lucas Waye", "Stephen Chong", "Christos Dimoulas"], "https://doi.org/10.1145/3110280", "icfp", 2017]], "Stephen Chong": [2.4325365721722392e-08, ["Whip: higher-order contracts for modern services", ["Lucas Waye", "Stephen Chong", "Christos Dimoulas"], "https://doi.org/10.1145/3110280", "icfp", 2017]], "Christos Dimoulas": [0, ["Whip: higher-order contracts for modern services", ["Lucas Waye", "Stephen Chong", "Christos Dimoulas"], "https://doi.org/10.1145/3110280", "icfp", 2017]], "Stephanie Balzer": [0, ["Manifest sharing with session types", ["Stephanie Balzer", "Frank Pfenning"], "https://doi.org/10.1145/3110281", "icfp", 2017]], "Frank Pfenning": [0, ["Manifest sharing with session types", ["Stephanie Balzer", "Frank Pfenning"], "https://doi.org/10.1145/3110281", "icfp", 2017]], "Atsushi Igarashi": [0, ["Gradual session types", ["Atsushi Igarashi", "Peter Thiemann", "Vasco T. Vasconcelos", "Philip Wadler"], "https://doi.org/10.1145/3110282", "icfp", 2017], ["On polymorphic gradual typing", ["Yuu Igarashi", "Taro Sekiyama", "Atsushi Igarashi"], "https://doi.org/10.1145/3110284", "icfp", 2017]], "Peter Thiemann": [0, ["Gradual session types", ["Atsushi Igarashi", "Peter Thiemann", "Vasco T. Vasconcelos", "Philip Wadler"], "https://doi.org/10.1145/3110282", "icfp", 2017]], "Vasco T. Vasconcelos": [0, ["Gradual session types", ["Atsushi Igarashi", "Peter Thiemann", "Vasco T. Vasconcelos", "Philip Wadler"], "https://doi.org/10.1145/3110282", "icfp", 2017], ["Deadlock avoidance in parallel programs with futures: why parallel tasks should not wait for strangers", ["Tiago Cogumbreiro", "Rishi Surendran", "Francisco Martins", "Vivek Sarkar", "Vasco T. Vasconcelos", "Max Grossman"], "https://doi.org/10.1145/3143359", "icfp", 2017]], "Philip Wadler": [0, ["Gradual session types", ["Atsushi Igarashi", "Peter Thiemann", "Vasco T. Vasconcelos", "Philip Wadler"], "https://doi.org/10.1145/3110282", "icfp", 2017], ["Theorems for free for free: parametricity, with and without types", ["Amal Ahmed", "Dustin Jamner", "Jeremy G. Siek", "Philip Wadler"], "https://doi.org/10.1145/3110283", "icfp", 2017]], "Amal Ahmed": [0, ["Theorems for free for free: parametricity, with and without types", ["Amal Ahmed", "Dustin Jamner", "Jeremy G. Siek", "Philip Wadler"], "https://doi.org/10.1145/3110283", "icfp", 2017]], "Dustin Jamner": [0, ["Theorems for free for free: parametricity, with and without types", ["Amal Ahmed", "Dustin Jamner", "Jeremy G. Siek", "Philip Wadler"], "https://doi.org/10.1145/3110283", "icfp", 2017]], "Jeremy G. Siek": [0, ["Theorems for free for free: parametricity, with and without types", ["Amal Ahmed", "Dustin Jamner", "Jeremy G. Siek", "Philip Wadler"], "https://doi.org/10.1145/3110283", "icfp", 2017], ["Sound gradual typing: only mostly dead", ["Spenser Bauman", "Carl Friedrich Bolz-Tereick", "Jeremy G. Siek", "Sam Tobin-Hochstadt"], "https://doi.org/10.1145/3133878", "icfp", 2017]], "Yuu Igarashi": [0, ["On polymorphic gradual typing", ["Yuu Igarashi", "Taro Sekiyama", "Atsushi Igarashi"], "https://doi.org/10.1145/3110284", "icfp", 2017]], "Taro Sekiyama": [0, ["On polymorphic gradual typing", ["Yuu Igarashi", "Taro Sekiyama", "Atsushi Igarashi"], "https://doi.org/10.1145/3110284", "icfp", 2017]], "Giuseppe Castagna": [0, ["Gradual typing with union and intersection types", ["Giuseppe Castagna", "Victor Lanvin"], "https://doi.org/10.1145/3110285", "icfp", 2017]], "Victor Lanvin": [0, ["Gradual typing with union and intersection types", ["Giuseppe Castagna", "Victor Lanvin"], "https://doi.org/10.1145/3110285", "icfp", 2017]], "J. Garrett Morris": [0, ["Constrained type families", ["J. Garrett Morris", "Richard A. Eisenberg"], "https://doi.org/10.1145/3110286", "icfp", 2017]], "Martin Avanzini": [0, ["Automating sized-type inference for complexity analysis", ["Martin Avanzini", "Ugo Dal Lago"], "https://doi.org/10.1145/3110287", "icfp", 2017]], "Ugo Dal Lago": [0, ["Automating sized-type inference for complexity analysis", ["Martin Avanzini", "Ugo Dal Lago"], "https://doi.org/10.1145/3110287", "icfp", 2017]], "Justin Pombrio": [0, ["Inferring scope through syntactic sugar", ["Justin Pombrio", "Shriram Krishnamurthi", "Mitchell Wand"], "https://doi.org/10.1145/3110288", "icfp", 2017]], "Shriram Krishnamurthi": [0, ["Inferring scope through syntactic sugar", ["Justin Pombrio", "Shriram Krishnamurthi", "Mitchell Wand"], "https://doi.org/10.1145/3110288", "icfp", 2017]], "Mitchell Wand": [0, ["Inferring scope through syntactic sugar", ["Justin Pombrio", "Shriram Krishnamurthi", "Mitchell Wand"], "https://doi.org/10.1145/3110288", "icfp", 2017]], "Izzat El Hajj": [0, ["SAVI objects: sharing and virtuality incorporated", ["Izzat El Hajj", "Thomas B. Jablin", "Dejan S. Milojicic", "Wen-Mei W. Hwu"], "https://doi.org/10.1145/3133869", "icfp", 2017]], "Thomas B. Jablin": [0, ["SAVI objects: sharing and virtuality incorporated", ["Izzat El Hajj", "Thomas B. Jablin", "Dejan S. Milojicic", "Wen-Mei W. Hwu"], "https://doi.org/10.1145/3133869", "icfp", 2017]], "Dejan S. Milojicic": [0, ["SAVI objects: sharing and virtuality incorporated", ["Izzat El Hajj", "Thomas B. Jablin", "Dejan S. Milojicic", "Wen-Mei W. Hwu"], "https://doi.org/10.1145/3133869", "icfp", 2017]], "Wen-Mei W. Hwu": [0, ["SAVI objects: sharing and virtuality incorporated", ["Izzat El Hajj", "Thomas B. Jablin", "Dejan S. Milojicic", "Wen-Mei W. Hwu"], "https://doi.org/10.1145/3133869", "icfp", 2017]], "Marianna Rapoport": [0, ["A simple soundness proof for dependent object types", ["Marianna Rapoport", "Ifaz Kabir", "Paul He", "Ondrej Lhotak"], "https://doi.org/10.1145/3133870", "icfp", 2017]], "Ifaz Kabir": [0, ["A simple soundness proof for dependent object types", ["Marianna Rapoport", "Ifaz Kabir", "Paul He", "Ondrej Lhotak"], "https://doi.org/10.1145/3133870", "icfp", 2017]], "Paul He": [0, ["A simple soundness proof for dependent object types", ["Marianna Rapoport", "Ifaz Kabir", "Paul He", "Ondrej Lhotak"], "https://doi.org/10.1145/3133870", "icfp", 2017]], "Ondrej Lhotak": [0, ["A simple soundness proof for dependent object types", ["Marianna Rapoport", "Ifaz Kabir", "Paul He", "Ondrej Lhotak"], "https://doi.org/10.1145/3133870", "icfp", 2017], ["A model for reasoning about JavaScript promises", ["Magnus Madsen", "Ondrej Lhotak", "Frank Tip"], "https://doi.org/10.1145/3133910", "icfp", 2017]], "Yanpeng Yang": [8.205826418361539e-07, ["Unifying typing and subtyping", ["Yanpeng Yang", "Bruno C. d. S. Oliveira"], "https://doi.org/10.1145/3133871", "icfp", 2017]], "Bruno C. d. S. Oliveira": [0, ["Unifying typing and subtyping", ["Yanpeng Yang", "Bruno C. d. S. Oliveira"], "https://doi.org/10.1145/3133871", "icfp", 2017]], "Avik Chaudhuri": [0, ["Fast and precise type checking for JavaScript", ["Avik Chaudhuri", "Panagiotis Vekris", "Sam Goldman", "Marshall Roch", "Gabriel Levi"], "https://doi.org/10.1145/3133872", "icfp", 2017]], "Panagiotis Vekris": [0, ["Fast and precise type checking for JavaScript", ["Avik Chaudhuri", "Panagiotis Vekris", "Sam Goldman", "Marshall Roch", "Gabriel Levi"], "https://doi.org/10.1145/3133872", "icfp", 2017]], "Sam Goldman": [0, ["Fast and precise type checking for JavaScript", ["Avik Chaudhuri", "Panagiotis Vekris", "Sam Goldman", "Marshall Roch", "Gabriel Levi"], "https://doi.org/10.1145/3133872", "icfp", 2017]], "Marshall Roch": [0, ["Fast and precise type checking for JavaScript", ["Avik Chaudhuri", "Panagiotis Vekris", "Sam Goldman", "Marshall Roch", "Gabriel Levi"], "https://doi.org/10.1145/3133872", "icfp", 2017]], "Gabriel Levi": [0, ["Fast and precise type checking for JavaScript", ["Avik Chaudhuri", "Panagiotis Vekris", "Sam Goldman", "Marshall Roch", "Gabriel Levi"], "https://doi.org/10.1145/3133872", "icfp", 2017]], "Lun Liu": [0, ["A volatile-by-default JVM for server applications", ["Lun Liu", "Todd D. Millstein", "Madanlal Musuvathi"], "https://doi.org/10.1145/3133873", "icfp", 2017]], "Todd D. Millstein": [0, ["A volatile-by-default JVM for server applications", ["Lun Liu", "Todd D. Millstein", "Madanlal Musuvathi"], "https://doi.org/10.1145/3133873", "icfp", 2017]], "Madanlal Musuvathi": [0, ["A volatile-by-default JVM for server applications", ["Lun Liu", "Todd D. Millstein", "Madanlal Musuvathi"], "https://doi.org/10.1145/3133873", "icfp", 2017]], "Gabriel Poesia": [0, ["Static placement of computation on heterogeneous devices", ["Gabriel Poesia", "Breno Campos Ferreira Guimaraes", "Fabricio Ferracioli", "Fernando Magno Quintao Pereira"], "https://doi.org/10.1145/3133874", "icfp", 2017]], "Breno Campos Ferreira Guimaraes": [0, ["Static placement of computation on heterogeneous devices", ["Gabriel Poesia", "Breno Campos Ferreira Guimaraes", "Fabricio Ferracioli", "Fernando Magno Quintao Pereira"], "https://doi.org/10.1145/3133874", "icfp", 2017]], "Fabricio Ferracioli": [0, ["Static placement of computation on heterogeneous devices", ["Gabriel Poesia", "Breno Campos Ferreira Guimaraes", "Fabricio Ferracioli", "Fernando Magno Quintao Pereira"], "https://doi.org/10.1145/3133874", "icfp", 2017]], "Fernando Magno Quintao Pereira": [0, ["Static placement of computation on heterogeneous devices", ["Gabriel Poesia", "Breno Campos Ferreira Guimaraes", "Fabricio Ferracioli", "Fernando Magno Quintao Pereira"], "https://doi.org/10.1145/3133874", "icfp", 2017]], "Sarah Chasins": [0, ["Skip blocks: reusing execution history to accelerate web scripts", ["Sarah Chasins", "Rastislav Bodik"], "https://doi.org/10.1145/3133875", "icfp", 2017]], "Rastislav Bodik": [0, ["Skip blocks: reusing execution history to accelerate web scripts", ["Sarah Chasins", "Rastislav Bodik"], "https://doi.org/10.1145/3133875", "icfp", 2017]], "Edd Barrett": [0, ["Virtual machine warmup blows hot and cold", ["Edd Barrett", "Carl Friedrich Bolz-Tereick", "Rebecca Killick", "Sarah Mount", "Laurence Tratt"], "https://doi.org/10.1145/3133876", "icfp", 2017]], "Carl Friedrich Bolz-Tereick": [0, ["Virtual machine warmup blows hot and cold", ["Edd Barrett", "Carl Friedrich Bolz-Tereick", "Rebecca Killick", "Sarah Mount", "Laurence Tratt"], "https://doi.org/10.1145/3133876", "icfp", 2017], ["Sound gradual typing: only mostly dead", ["Spenser Bauman", "Carl Friedrich Bolz-Tereick", "Jeremy G. Siek", "Sam Tobin-Hochstadt"], "https://doi.org/10.1145/3133878", "icfp", 2017]], "Rebecca Killick": [0, ["Virtual machine warmup blows hot and cold", ["Edd Barrett", "Carl Friedrich Bolz-Tereick", "Rebecca Killick", "Sarah Mount", "Laurence Tratt"], "https://doi.org/10.1145/3133876", "icfp", 2017]], "Sarah Mount": [0, ["Virtual machine warmup blows hot and cold", ["Edd Barrett", "Carl Friedrich Bolz-Tereick", "Rebecca Killick", "Sarah Mount", "Laurence Tratt"], "https://doi.org/10.1145/3133876", "icfp", 2017]], "Laurence Tratt": [0, ["Virtual machine warmup blows hot and cold", ["Edd Barrett", "Carl Friedrich Bolz-Tereick", "Rebecca Killick", "Sarah Mount", "Laurence Tratt"], "https://doi.org/10.1145/3133876", "icfp", 2017]], "Tomoharu Ugawa": [0, ["Model checking copy phases of concurrent copying garbage collection with various memory models", ["Tomoharu Ugawa", "Tatsuya Abe", "Toshiyuki Maeda"], "https://doi.org/10.1145/3133877", "icfp", 2017]], "Tatsuya Abe": [0, ["Model checking copy phases of concurrent copying garbage collection with various memory models", ["Tomoharu Ugawa", "Tatsuya Abe", "Toshiyuki Maeda"], "https://doi.org/10.1145/3133877", "icfp", 2017]], "Toshiyuki Maeda": [0, ["Model checking copy phases of concurrent copying garbage collection with various memory models", ["Tomoharu Ugawa", "Tatsuya Abe", "Toshiyuki Maeda"], "https://doi.org/10.1145/3133877", "icfp", 2017]], "Spenser Bauman": [0, ["Sound gradual typing: only mostly dead", ["Spenser Bauman", "Carl Friedrich Bolz-Tereick", "Jeremy G. Siek", "Sam Tobin-Hochstadt"], "https://doi.org/10.1145/3133878", "icfp", 2017]], "Sam Tobin-Hochstadt": [0, ["Sound gradual typing: only mostly dead", ["Spenser Bauman", "Carl Friedrich Bolz-Tereick", "Jeremy G. Siek", "Sam Tobin-Hochstadt"], "https://doi.org/10.1145/3133878", "icfp", 2017]], "Gregor Richards": [0, ["The VM already knew that: leveraging compile-time knowledge to optimize gradual typing", ["Gregor Richards", "Ellen Arteca", "Alexi Turcotte"], "https://doi.org/10.1145/3133879", "icfp", 2017]], "Ellen Arteca": [0, ["The VM already knew that: leveraging compile-time knowledge to optimize gradual typing", ["Gregor Richards", "Ellen Arteca", "Alexi Turcotte"], "https://doi.org/10.1145/3133879", "icfp", 2017]], "Alexi Turcotte": [0, ["The VM already knew that: leveraging compile-time knowledge to optimize gradual typing", ["Gregor Richards", "Ellen Arteca", "Alexi Turcotte"], "https://doi.org/10.1145/3133879", "icfp", 2017]], "Fabian Muehlboeck": [0, ["Sound gradual typing is nominally alive and well", ["Fabian Muehlboeck", "Ross Tate"], "https://doi.org/10.1145/3133880", "icfp", 2017]], "Ross Tate": [0, ["Sound gradual typing is nominally alive and well", ["Fabian Muehlboeck", "Ross Tate"], "https://doi.org/10.1145/3133880", "icfp", 2017]], "Xin Zhang": [0, ["Effective interactive resolution of static analysis alarms", ["Xin Zhang", "Radu Grigore", "Xujie Si", "Mayur Naik"], "https://doi.org/10.1145/3133881", "icfp", 2017]], "Radu Grigore": [0, ["Effective interactive resolution of static analysis alarms", ["Xin Zhang", "Radu Grigore", "Xujie Si", "Mayur Naik"], "https://doi.org/10.1145/3133881", "icfp", 2017]], "Xujie Si": [0, ["Effective interactive resolution of static analysis alarms", ["Xin Zhang", "Radu Grigore", "Xujie Si", "Mayur Naik"], "https://doi.org/10.1145/3133881", "icfp", 2017]], "Mayur Naik": [0, ["Effective interactive resolution of static analysis alarms", ["Xin Zhang", "Radu Grigore", "Xujie Si", "Mayur Naik"], "https://doi.org/10.1145/3133881", "icfp", 2017]], "Binhang Yuan": [0, ["Abridging source code", ["Binhang Yuan", "Vijayaraghavan Murali", "Christopher M. Jermaine"], "https://doi.org/10.1145/3133882", "icfp", 2017]], "Vijayaraghavan Murali": [0, ["Abridging source code", ["Binhang Yuan", "Vijayaraghavan Murali", "Christopher M. Jermaine"], "https://doi.org/10.1145/3133882", "icfp", 2017]], "Christopher M. Jermaine": [0, ["Abridging source code", ["Binhang Yuan", "Vijayaraghavan Murali", "Christopher M. Jermaine"], "https://doi.org/10.1145/3133882", "icfp", 2017]], "Guilherme Cavalcanti": [0, ["Evaluating and improving semistructured merge", ["Guilherme Cavalcanti", "Paulo Borba", "Paola R. G. Accioly"], "https://doi.org/10.1145/3133883", "icfp", 2017]], "Paulo Borba": [0, ["Evaluating and improving semistructured merge", ["Guilherme Cavalcanti", "Paulo Borba", "Paola R. G. Accioly"], "https://doi.org/10.1145/3133883", "icfp", 2017]], "Paola R. G. Accioly": [0, ["Evaluating and improving semistructured merge", ["Guilherme Cavalcanti", "Paulo Borba", "Paola R. G. Accioly"], "https://doi.org/10.1145/3133883", "icfp", 2017]], "Eric L. Seidel": [0, ["Learning to blame: localizing novice type errors with data-driven diagnosis", ["Eric L. Seidel", "Huma Sibghat", "Kamalika Chaudhuri", "Westley Weimer", "Ranjit Jhala"], "https://doi.org/10.1145/3138818", "icfp", 2017]], "Huma Sibghat": [0, ["Learning to blame: localizing novice type errors with data-driven diagnosis", ["Eric L. Seidel", "Huma Sibghat", "Kamalika Chaudhuri", "Westley Weimer", "Ranjit Jhala"], "https://doi.org/10.1145/3138818", "icfp", 2017]], "Kamalika Chaudhuri": [0, ["Learning to blame: localizing novice type errors with data-driven diagnosis", ["Eric L. Seidel", "Huma Sibghat", "Kamalika Chaudhuri", "Westley Weimer", "Ranjit Jhala"], "https://doi.org/10.1145/3138818", "icfp", 2017]], "Westley Weimer": [0, ["Learning to blame: localizing novice type errors with data-driven diagnosis", ["Eric L. Seidel", "Huma Sibghat", "Kamalika Chaudhuri", "Westley Weimer", "Ranjit Jhala"], "https://doi.org/10.1145/3138818", "icfp", 2017]], "Venkatesh Srinivasan": [0, ["Model-assisted machine-code synthesis", ["Venkatesh Srinivasan", "Ara Vartanian", "Thomas W. Reps"], "https://doi.org/10.1145/3133885", "icfp", 2017]], "Ara Vartanian": [0, ["Model-assisted machine-code synthesis", ["Venkatesh Srinivasan", "Ara Vartanian", "Thomas W. Reps"], "https://doi.org/10.1145/3133885", "icfp", 2017]], "Thomas W. Reps": [0, ["Model-assisted machine-code synthesis", ["Venkatesh Srinivasan", "Ara Vartanian", "Thomas W. Reps"], "https://doi.org/10.1145/3133885", "icfp", 2017]], "Xinyu Wang": [0.0004145848215557635, ["Synthesis of data completion scripts using finite tree automata", ["Xinyu Wang", "Isil Dillig", "Rishabh Singh"], "https://doi.org/10.1145/3133886", "icfp", 2017]], "Isil Dillig": [0, ["Synthesis of data completion scripts using finite tree automata", ["Xinyu Wang", "Isil Dillig", "Rishabh Singh"], "https://doi.org/10.1145/3133886", "icfp", 2017], ["SQLizer: query synthesis from natural language", ["Navid Yaghmazadeh", "Yuepeng Wang", "Isil Dillig", "Thomas Dillig"], "https://doi.org/10.1145/3133887", "icfp", 2017]], "Rishabh Singh": [0, ["Synthesis of data completion scripts using finite tree automata", ["Xinyu Wang", "Isil Dillig", "Rishabh Singh"], "https://doi.org/10.1145/3133886", "icfp", 2017]], "Navid Yaghmazadeh": [0, ["SQLizer: query synthesis from natural language", ["Navid Yaghmazadeh", "Yuepeng Wang", "Isil Dillig", "Thomas Dillig"], "https://doi.org/10.1145/3133887", "icfp", 2017]], "Yuepeng Wang": [9.154745748674031e-05, ["SQLizer: query synthesis from natural language", ["Navid Yaghmazadeh", "Yuepeng Wang", "Isil Dillig", "Thomas Dillig"], "https://doi.org/10.1145/3133887", "icfp", 2017]], "Thomas Dillig": [0, ["SQLizer: query synthesis from natural language", ["Navid Yaghmazadeh", "Yuepeng Wang", "Isil Dillig", "Thomas Dillig"], "https://doi.org/10.1145/3133887", "icfp", 2017]], "Mark Santolucito": [0, ["Synthesizing configuration file specifications with association rule learning", ["Mark Santolucito", "Ennan Zhai", "Rahul Dhodapkar", "Aaron Shim", "Ruzica Piskac"], "https://doi.org/10.1145/3133888", "icfp", 2017]], "Ennan Zhai": [0, ["Synthesizing configuration file specifications with association rule learning", ["Mark Santolucito", "Ennan Zhai", "Rahul Dhodapkar", "Aaron Shim", "Ruzica Piskac"], "https://doi.org/10.1145/3133888", "icfp", 2017], ["An auditing language for preventing correlated failures in the cloud", ["Ennan Zhai", "Ruzica Piskac", "Ronghui Gu", "Xun Lao", "Xi Wang"], "https://doi.org/10.1145/3133921", "icfp", 2017]], "Rahul Dhodapkar": [0, ["Synthesizing configuration file specifications with association rule learning", ["Mark Santolucito", "Ennan Zhai", "Rahul Dhodapkar", "Aaron Shim", "Ruzica Piskac"], "https://doi.org/10.1145/3133888", "icfp", 2017]], "Aaron Shim": [9.727854148877668e-06, ["Synthesizing configuration file specifications with association rule learning", ["Mark Santolucito", "Ennan Zhai", "Rahul Dhodapkar", "Aaron Shim", "Ruzica Piskac"], "https://doi.org/10.1145/3133888", "icfp", 2017]], "Ruzica Piskac": [0, ["Synthesizing configuration file specifications with association rule learning", ["Mark Santolucito", "Ennan Zhai", "Rahul Dhodapkar", "Aaron Shim", "Ruzica Piskac"], "https://doi.org/10.1145/3133888", "icfp", 2017], ["An auditing language for preventing correlated failures in the cloud", ["Ennan Zhai", "Ruzica Piskac", "Ronghui Gu", "Xun Lao", "Xi Wang"], "https://doi.org/10.1145/3133921", "icfp", 2017]], "Xiaokang Qiu": [0, ["Natural synthesis of provably-correct data-structure manipulations", ["Xiaokang Qiu", "Armando Solar-Lezama"], "https://doi.org/10.1145/3133889", "icfp", 2017]], "Armando Solar-Lezama": [0, ["Natural synthesis of provably-correct data-structure manipulations", ["Xiaokang Qiu", "Armando Solar-Lezama"], "https://doi.org/10.1145/3133889", "icfp", 2017]], "Christoffer Quist Adamsen": [0, ["Practical initialization race detection for JavaScript web applications", ["Christoffer Quist Adamsen", "Anders Moller", "Frank Tip"], "https://doi.org/10.1145/3133890", "icfp", 2017]], "Anders Moller": [0, ["Practical initialization race detection for JavaScript web applications", ["Christoffer Quist Adamsen", "Anders Moller", "Frank Tip"], "https://doi.org/10.1145/3133890", "icfp", 2017], ["Type test scripts for TypeScript testing", ["Erik Krogh Kristensen", "Anders Moller"], "https://doi.org/10.1145/3133914", "icfp", 2017]], "Frank Tip": [0, ["Practical initialization race detection for JavaScript web applications", ["Christoffer Quist Adamsen", "Anders Moller", "Frank Tip"], "https://doi.org/10.1145/3133890", "icfp", 2017], ["A model for reasoning about JavaScript promises", ["Magnus Madsen", "Ondrej Lhotak", "Frank Tip"], "https://doi.org/10.1145/3133910", "icfp", 2017]], "Nachshon Cohen": [0, ["Efficient logging in non-volatile memory by exploiting coherency protocols", ["Nachshon Cohen", "Michal Friedman", "James R. Larus"], "https://doi.org/10.1145/3133891", "icfp", 2017]], "Michal Friedman": [0, ["Efficient logging in non-volatile memory by exploiting coherency protocols", ["Nachshon Cohen", "Michal Friedman", "James R. Larus"], "https://doi.org/10.1145/3133891", "icfp", 2017]], "James R. Larus": [0, ["Efficient logging in non-volatile memory by exploiting coherency protocols", ["Nachshon Cohen", "Michal Friedman", "James R. Larus"], "https://doi.org/10.1145/3133891", "icfp", 2017]], "Neville Grech": [0, ["Heaps don't lie: countering unsoundness with heap snapshots", ["Neville Grech", "George Fourtounis", "Adrian Francalanza", "Yannis Smaragdakis"], "https://doi.org/10.1145/3133892", "icfp", 2017], ["P/Taint: unified points-to and taint analysis", ["Neville Grech", "Yannis Smaragdakis"], "https://doi.org/10.1145/3133926", "icfp", 2017]], "George Fourtounis": [0, ["Heaps don't lie: countering unsoundness with heap snapshots", ["Neville Grech", "George Fourtounis", "Adrian Francalanza", "Yannis Smaragdakis"], "https://doi.org/10.1145/3133892", "icfp", 2017]], "Adrian Francalanza": [0, ["Heaps don't lie: countering unsoundness with heap snapshots", ["Neville Grech", "George Fourtounis", "Adrian Francalanza", "Yannis Smaragdakis"], "https://doi.org/10.1145/3133892", "icfp", 2017]], "Yannis Smaragdakis": [0, ["Heaps don't lie: countering unsoundness with heap snapshots", ["Neville Grech", "George Fourtounis", "Adrian Francalanza", "Yannis Smaragdakis"], "https://doi.org/10.1145/3133892", "icfp", 2017], ["P/Taint: unified points-to and taint analysis", ["Neville Grech", "Yannis Smaragdakis"], "https://doi.org/10.1145/3133926", "icfp", 2017]], "Benjamin P. Wood": [0, ["Instrumentation bias for dynamic data race detection", ["Benjamin P. Wood", "Man Cao", "Michael D. Bond", "Dan Grossman"], "https://doi.org/10.1145/3133893", "icfp", 2017]], "Man Cao": [0, ["Instrumentation bias for dynamic data race detection", ["Benjamin P. Wood", "Man Cao", "Michael D. Bond", "Dan Grossman"], "https://doi.org/10.1145/3133893", "icfp", 2017]], "Michael D. Bond": [0, ["Instrumentation bias for dynamic data race detection", ["Benjamin P. Wood", "Man Cao", "Michael D. Bond", "Dan Grossman"], "https://doi.org/10.1145/3133893", "icfp", 2017]], "Dan Grossman": [0, ["Instrumentation bias for dynamic data race detection", ["Benjamin P. Wood", "Man Cao", "Michael D. Bond", "Dan Grossman"], "https://doi.org/10.1145/3133893", "icfp", 2017], ["A solver-aided language for test input generation", ["Talia Ringer", "Dan Grossman", "Daniel Schwartz-Narbonne", "Serdar Tasiran"], "https://doi.org/10.1145/3133915", "icfp", 2017]], "Yizhou Zhang": [0, ["Familia: unifying interfaces, type classes, and family polymorphism", ["Yizhou Zhang", "Andrew C. Myers"], "https://doi.org/10.1145/3133894", "icfp", 2017]], "Andrew C. Myers": [0, ["Familia: unifying interfaces, type classes, and family polymorphism", ["Yizhou Zhang", "Andrew C. Myers"], "https://doi.org/10.1145/3133894", "icfp", 2017]], "Adrian Sampson": [0, ["Static stages for heterogeneous programming", ["Adrian Sampson", "Kathryn S. McKinley", "Todd Mytkowicz"], "https://doi.org/10.1145/3133895", "icfp", 2017]], "Kathryn S. McKinley": [0, ["Static stages for heterogeneous programming", ["Adrian Sampson", "Kathryn S. McKinley", "Todd Mytkowicz"], "https://doi.org/10.1145/3133895", "icfp", 2017]], "Todd Mytkowicz": [0, ["Static stages for heterogeneous programming", ["Adrian Sampson", "Kathryn S. McKinley", "Todd Mytkowicz"], "https://doi.org/10.1145/3133895", "icfp", 2017]], "Sylvan Clebsch": [0, ["Orca: GC and type system co-design for actor languages", ["Sylvan Clebsch", "Juliana Franco", "Sophia Drossopoulou", "Albert Mingkun Yang", "Tobias Wrigstad", "Jan Vitek"], "https://doi.org/10.1145/3133896", "icfp", 2017]], "Juliana Franco": [0, ["Orca: GC and type system co-design for actor languages", ["Sylvan Clebsch", "Juliana Franco", "Sophia Drossopoulou", "Albert Mingkun Yang", "Tobias Wrigstad", "Jan Vitek"], "https://doi.org/10.1145/3133896", "icfp", 2017]], "Sophia Drossopoulou": [0, ["Orca: GC and type system co-design for actor languages", ["Sylvan Clebsch", "Juliana Franco", "Sophia Drossopoulou", "Albert Mingkun Yang", "Tobias Wrigstad", "Jan Vitek"], "https://doi.org/10.1145/3133896", "icfp", 2017]], "Albert Mingkun Yang": [5.316663857215728e-13, ["Orca: GC and type system co-design for actor languages", ["Sylvan Clebsch", "Juliana Franco", "Sophia Drossopoulou", "Albert Mingkun Yang", "Tobias Wrigstad", "Jan Vitek"], "https://doi.org/10.1145/3133896", "icfp", 2017]], "Tobias Wrigstad": [0, ["Orca: GC and type system co-design for actor languages", ["Sylvan Clebsch", "Juliana Franco", "Sophia Drossopoulou", "Albert Mingkun Yang", "Tobias Wrigstad", "Jan Vitek"], "https://doi.org/10.1145/3133896", "icfp", 2017]], "Jan Vitek": [0, ["Orca: GC and type system co-design for actor languages", ["Sylvan Clebsch", "Juliana Franco", "Sophia Drossopoulou", "Albert Mingkun Yang", "Tobias Wrigstad", "Jan Vitek"], "https://doi.org/10.1145/3133896", "icfp", 2017], ["D\u00e9j\u00e0Vu: a map of code duplicates on GitHub", ["Cristina V. Lopes", "Petr Maj", "Pedro Martins", "Vaibhav Saini", "Di Yang", "Jakub Zitny", "Hitesh Sajnani", "Jan Vitek"], "https://doi.org/10.1145/3133908", "icfp", 2017]], "Ryan G. Scott": [0, ["Monadic composition for deterministic, parallel batch processing", ["Ryan G. Scott", "Omar S. Navarro Leija", "Joseph Devietti", "Ryan R. Newton"], "https://doi.org/10.1145/3133897", "icfp", 2017]], "Omar S. Navarro Leija": [0, ["Monadic composition for deterministic, parallel batch processing", ["Ryan G. Scott", "Omar S. Navarro Leija", "Joseph Devietti", "Ryan R. Newton"], "https://doi.org/10.1145/3133897", "icfp", 2017]], "Joseph Devietti": [0, ["Monadic composition for deterministic, parallel batch processing", ["Ryan G. Scott", "Omar S. Navarro Leija", "Joseph Devietti", "Ryan R. Newton"], "https://doi.org/10.1145/3133897", "icfp", 2017]], "Ryan R. Newton": [0, ["Monadic composition for deterministic, parallel batch processing", ["Ryan G. Scott", "Omar S. Navarro Leija", "Joseph Devietti", "Ryan R. Newton"], "https://doi.org/10.1145/3133897", "icfp", 2017]], "Yufei Ding": [0, ["GLORE: generalized loop redundancy elimination upon LER-notation", ["Yufei Ding", "Xipeng Shen"], "https://doi.org/10.1145/3133898", "icfp", 2017]], "Xipeng Shen": [0, ["GLORE: generalized loop redundancy elimination upon LER-notation", ["Yufei Ding", "Xipeng Shen"], "https://doi.org/10.1145/3133898", "icfp", 2017]], "Dominic A. Orchard": [0, ["Verifying spatial properties of array computations", ["Dominic A. Orchard", "Mistral Contrastin", "Matthew Danish", "Andrew C. Rice"], "https://doi.org/10.1145/3133899", "icfp", 2017]], "Mistral Contrastin": [0, ["Verifying spatial properties of array computations", ["Dominic A. Orchard", "Mistral Contrastin", "Matthew Danish", "Andrew C. Rice"], "https://doi.org/10.1145/3133899", "icfp", 2017]], "Matthew Danish": [0, ["Verifying spatial properties of array computations", ["Dominic A. Orchard", "Mistral Contrastin", "Matthew Danish", "Andrew C. Rice"], "https://doi.org/10.1145/3133899", "icfp", 2017]], "Andrew C. Rice": [0, ["Verifying spatial properties of array computations", ["Dominic A. Orchard", "Mistral Contrastin", "Matthew Danish", "Andrew C. Rice"], "https://doi.org/10.1145/3133899", "icfp", 2017]], "Laith Sakka": [0, ["TreeFuser: a framework for analyzing and fusing general recursive tree traversals", ["Laith Sakka", "Kirshanthan Sundararajah", "Milind Kulkarni"], "https://doi.org/10.1145/3133900", "icfp", 2017]], "Kirshanthan Sundararajah": [0, ["TreeFuser: a framework for analyzing and fusing general recursive tree traversals", ["Laith Sakka", "Kirshanthan Sundararajah", "Milind Kulkarni"], "https://doi.org/10.1145/3133900", "icfp", 2017]], "Milind Kulkarni": [0, ["TreeFuser: a framework for analyzing and fusing general recursive tree traversals", ["Laith Sakka", "Kirshanthan Sundararajah", "Milind Kulkarni"], "https://doi.org/10.1145/3133900", "icfp", 2017]], "Fredrik Kjolstad": [0, ["The tensor algebra compiler", ["Fredrik Kjolstad", "Shoaib Kamil", "Stephen Chou", "David Lugato", "Saman P. Amarasinghe"], "https://doi.org/10.1145/3133901", "icfp", 2017]], "Shoaib Kamil": [0, ["The tensor algebra compiler", ["Fredrik Kjolstad", "Shoaib Kamil", "Stephen Chou", "David Lugato", "Saman P. Amarasinghe"], "https://doi.org/10.1145/3133901", "icfp", 2017]], "Stephen Chou": [0, ["The tensor algebra compiler", ["Fredrik Kjolstad", "Shoaib Kamil", "Stephen Chou", "David Lugato", "Saman P. Amarasinghe"], "https://doi.org/10.1145/3133901", "icfp", 2017]], "David Lugato": [0, ["The tensor algebra compiler", ["Fredrik Kjolstad", "Shoaib Kamil", "Stephen Chou", "David Lugato", "Saman P. Amarasinghe"], "https://doi.org/10.1145/3133901", "icfp", 2017]], "Saman P. Amarasinghe": [0, ["The tensor algebra compiler", ["Fredrik Kjolstad", "Shoaib Kamil", "Stephen Chou", "David Lugato", "Saman P. Amarasinghe"], "https://doi.org/10.1145/3133901", "icfp", 2017]], "Manolis Papadakis": [0, ["Seam: provably safe local edits on graphs", ["Manolis Papadakis", "Gilbert Louis Bernstein", "Rahul Sharma", "Alex Aiken", "Pat Hanrahan"], "https://doi.org/10.1145/3133902", "icfp", 2017]], "Gilbert Louis Bernstein": [0, ["Seam: provably safe local edits on graphs", ["Manolis Papadakis", "Gilbert Louis Bernstein", "Rahul Sharma", "Alex Aiken", "Pat Hanrahan"], "https://doi.org/10.1145/3133902", "icfp", 2017]], "Rahul Sharma": [0, ["Seam: provably safe local edits on graphs", ["Manolis Papadakis", "Gilbert Louis Bernstein", "Rahul Sharma", "Alex Aiken", "Pat Hanrahan"], "https://doi.org/10.1145/3133902", "icfp", 2017]], "Alex Aiken": [0, ["Seam: provably safe local edits on graphs", ["Manolis Papadakis", "Gilbert Louis Bernstein", "Rahul Sharma", "Alex Aiken", "Pat Hanrahan"], "https://doi.org/10.1145/3133902", "icfp", 2017]], "Pat Hanrahan": [0, ["Seam: provably safe local edits on graphs", ["Manolis Papadakis", "Gilbert Louis Bernstein", "Rahul Sharma", "Alex Aiken", "Pat Hanrahan"], "https://doi.org/10.1145/3133902", "icfp", 2017]], "Di Wang": [0.0006083871703594923, ["TiML: a functional language for practical complexity analysis with invariants", ["Peng Wang", "Di Wang", "Adam Chlipala"], "https://doi.org/10.1145/3133903", "icfp", 2017]], "Aws Albarghouthi": [0, ["FairSquare: probabilistic verification of program fairness", ["Aws Albarghouthi", "Loris DAntoni", "Samuel Drews", "Aditya V. Nori"], "https://doi.org/10.1145/3133904", "icfp", 2017]], "Loris DAntoni": [0, ["FairSquare: probabilistic verification of program fairness", ["Aws Albarghouthi", "Loris DAntoni", "Samuel Drews", "Aditya V. Nori"], "https://doi.org/10.1145/3133904", "icfp", 2017]], "Samuel Drews": [0, ["FairSquare: probabilistic verification of program fairness", ["Aws Albarghouthi", "Loris DAntoni", "Samuel Drews", "Aditya V. Nori"], "https://doi.org/10.1145/3133904", "icfp", 2017]], "Aditya V. Nori": [0, ["FairSquare: probabilistic verification of program fairness", ["Aws Albarghouthi", "Loris DAntoni", "Samuel Drews", "Aditya V. Nori"], "https://doi.org/10.1145/3133904", "icfp", 2017]], "Davide Ancona": [0, ["Reasoning on divergent computations with coaxioms", ["Davide Ancona", "Francesco Dagnino", "Elena Zucca"], "https://doi.org/10.1145/3133905", "icfp", 2017]], "Francesco Dagnino": [0, ["Reasoning on divergent computations with coaxioms", ["Davide Ancona", "Francesco Dagnino", "Elena Zucca"], "https://doi.org/10.1145/3133905", "icfp", 2017]], "Elena Zucca": [0, ["Reasoning on divergent computations with coaxioms", ["Davide Ancona", "Francesco Dagnino", "Elena Zucca"], "https://doi.org/10.1145/3133905", "icfp", 2017]], "Michael D. Adams": [0, ["Restricting grammars with tree automata", ["Michael D. Adams", "Matthew Might"], "https://doi.org/10.1145/3133906", "icfp", 2017]], "Syeda Khairunnesa Samantha": [0, ["Exploiting implicit beliefs to resolve sparse usage problem in usage-based specification mining", ["Syeda Khairunnesa Samantha", "Hoan Anh Nguyen", "Tien N. Nguyen", "Hridesh Rajan"], "https://doi.org/10.1145/3133907", "icfp", 2017]], "Hoan Anh Nguyen": [0, ["Exploiting implicit beliefs to resolve sparse usage problem in usage-based specification mining", ["Syeda Khairunnesa Samantha", "Hoan Anh Nguyen", "Tien N. Nguyen", "Hridesh Rajan"], "https://doi.org/10.1145/3133907", "icfp", 2017]], "Tien N. Nguyen": [0, ["Exploiting implicit beliefs to resolve sparse usage problem in usage-based specification mining", ["Syeda Khairunnesa Samantha", "Hoan Anh Nguyen", "Tien N. Nguyen", "Hridesh Rajan"], "https://doi.org/10.1145/3133907", "icfp", 2017]], "Hridesh Rajan": [0, ["Exploiting implicit beliefs to resolve sparse usage problem in usage-based specification mining", ["Syeda Khairunnesa Samantha", "Hoan Anh Nguyen", "Tien N. Nguyen", "Hridesh Rajan"], "https://doi.org/10.1145/3133907", "icfp", 2017]], "Cristina V. Lopes": [0, ["D\u00e9j\u00e0Vu: a map of code duplicates on GitHub", ["Cristina V. Lopes", "Petr Maj", "Pedro Martins", "Vaibhav Saini", "Di Yang", "Jakub Zitny", "Hitesh Sajnani", "Jan Vitek"], "https://doi.org/10.1145/3133908", "icfp", 2017]], "Petr Maj": [0, ["D\u00e9j\u00e0Vu: a map of code duplicates on GitHub", ["Cristina V. Lopes", "Petr Maj", "Pedro Martins", "Vaibhav Saini", "Di Yang", "Jakub Zitny", "Hitesh Sajnani", "Jan Vitek"], "https://doi.org/10.1145/3133908", "icfp", 2017]], "Pedro Martins": [0, ["D\u00e9j\u00e0Vu: a map of code duplicates on GitHub", ["Cristina V. Lopes", "Petr Maj", "Pedro Martins", "Vaibhav Saini", "Di Yang", "Jakub Zitny", "Hitesh Sajnani", "Jan Vitek"], "https://doi.org/10.1145/3133908", "icfp", 2017]], "Vaibhav Saini": [0, ["D\u00e9j\u00e0Vu: a map of code duplicates on GitHub", ["Cristina V. Lopes", "Petr Maj", "Pedro Martins", "Vaibhav Saini", "Di Yang", "Jakub Zitny", "Hitesh Sajnani", "Jan Vitek"], "https://doi.org/10.1145/3133908", "icfp", 2017]], "Di Yang": [0.0006083871703594923, ["D\u00e9j\u00e0Vu: a map of code duplicates on GitHub", ["Cristina V. Lopes", "Petr Maj", "Pedro Martins", "Vaibhav Saini", "Di Yang", "Jakub Zitny", "Hitesh Sajnani", "Jan Vitek"], "https://doi.org/10.1145/3133908", "icfp", 2017]], "Jakub Zitny": [0, ["D\u00e9j\u00e0Vu: a map of code duplicates on GitHub", ["Cristina V. Lopes", "Petr Maj", "Pedro Martins", "Vaibhav Saini", "Di Yang", "Jakub Zitny", "Hitesh Sajnani", "Jan Vitek"], "https://doi.org/10.1145/3133908", "icfp", 2017]], "Hitesh Sajnani": [0, ["D\u00e9j\u00e0Vu: a map of code duplicates on GitHub", ["Cristina V. Lopes", "Petr Maj", "Pedro Martins", "Vaibhav Saini", "Di Yang", "Jakub Zitny", "Hitesh Sajnani", "Jan Vitek"], "https://doi.org/10.1145/3133908", "icfp", 2017]], "Davood Mazinanian": [0, ["Understanding the use of lambda expressions in Java", ["Davood Mazinanian", "Ameya Ketkar", "Nikolaos Tsantalis", "Danny Dig"], "https://doi.org/10.1145/3133909", "icfp", 2017]], "Ameya Ketkar": [0, ["Understanding the use of lambda expressions in Java", ["Davood Mazinanian", "Ameya Ketkar", "Nikolaos Tsantalis", "Danny Dig"], "https://doi.org/10.1145/3133909", "icfp", 2017]], "Nikolaos Tsantalis": [0, ["Understanding the use of lambda expressions in Java", ["Davood Mazinanian", "Ameya Ketkar", "Nikolaos Tsantalis", "Danny Dig"], "https://doi.org/10.1145/3133909", "icfp", 2017]], "Danny Dig": [0, ["Understanding the use of lambda expressions in Java", ["Davood Mazinanian", "Ameya Ketkar", "Nikolaos Tsantalis", "Danny Dig"], "https://doi.org/10.1145/3133909", "icfp", 2017]], "Magnus Madsen": [0, ["A model for reasoning about JavaScript promises", ["Magnus Madsen", "Ondrej Lhotak", "Frank Tip"], "https://doi.org/10.1145/3133910", "icfp", 2017]], "William Mansky": [0, ["A verified messaging system", ["William Mansky", "Andrew W. Appel", "Aleksey Nogin"], "https://doi.org/10.1145/3133911", "icfp", 2017]], "Andrew W. Appel": [0, ["A verified messaging system", ["William Mansky", "Andrew W. Appel", "Aleksey Nogin"], "https://doi.org/10.1145/3133911", "icfp", 2017]], "Aleksey Nogin": [0, ["A verified messaging system", ["William Mansky", "Andrew W. Appel", "Aleksey Nogin"], "https://doi.org/10.1145/3133911", "icfp", 2017]], "Alastair Reid": [0, ["Who guards the guards? formal validation of the Arm v8-m architecture specification", ["Alastair Reid"], "https://doi.org/10.1145/3133912", "icfp", 2017]], "David Swasey": [0, ["Robust and compositional verification of object capability patterns", ["David Swasey", "Deepak Garg", "Derek Dreyer"], "https://doi.org/10.1145/3133913", "icfp", 2017]], "Derek Dreyer": [0, ["Robust and compositional verification of object capability patterns", ["David Swasey", "Deepak Garg", "Derek Dreyer"], "https://doi.org/10.1145/3133913", "icfp", 2017]], "Erik Krogh Kristensen": [0, ["Type test scripts for TypeScript testing", ["Erik Krogh Kristensen", "Anders Moller"], "https://doi.org/10.1145/3133914", "icfp", 2017]], "Talia Ringer": [0, ["A solver-aided language for test input generation", ["Talia Ringer", "Dan Grossman", "Daniel Schwartz-Narbonne", "Serdar Tasiran"], "https://doi.org/10.1145/3133915", "icfp", 2017]], "Daniel Schwartz-Narbonne": [0, ["A solver-aided language for test input generation", ["Talia Ringer", "Dan Grossman", "Daniel Schwartz-Narbonne", "Serdar Tasiran"], "https://doi.org/10.1145/3133915", "icfp", 2017]], "Serdar Tasiran": [0, ["A solver-aided language for test input generation", ["Talia Ringer", "Dan Grossman", "Daniel Schwartz-Narbonne", "Serdar Tasiran"], "https://doi.org/10.1145/3133915", "icfp", 2017]], "Xia Li": [0, ["Transforming programs and tests in tandem for fault localization", ["Xia Li", "Lingming Zhang"], "https://doi.org/10.1145/3133916", "icfp", 2017]], "Lingming Zhang": [0, ["Transforming programs and tests in tandem for fault localization", ["Xia Li", "Lingming Zhang"], "https://doi.org/10.1145/3133916", "icfp", 2017]], "Alastair F. Donaldson": [0, ["Automated testing of graphics shader compilers", ["Alastair F. Donaldson", "Hugues Evrard", "Andrei Lascu", "Paul Thomson"], "https://doi.org/10.1145/3133917", "icfp", 2017]], "Hugues Evrard": [0, ["Automated testing of graphics shader compilers", ["Alastair F. Donaldson", "Hugues Evrard", "Andrei Lascu", "Paul Thomson"], "https://doi.org/10.1145/3133917", "icfp", 2017]], "Andrei Lascu": [0, ["Automated testing of graphics shader compilers", ["Alastair F. Donaldson", "Hugues Evrard", "Andrei Lascu", "Paul Thomson"], "https://doi.org/10.1145/3133917", "icfp", 2017]], "Paul Thomson": [0, ["Automated testing of graphics shader compilers", ["Alastair F. Donaldson", "Hugues Evrard", "Andrei Lascu", "Paul Thomson"], "https://doi.org/10.1145/3133917", "icfp", 2017]], "Ahmet Celik": [0, ["Bounded exhaustive test-input generation on GPUs", ["Ahmet Celik", "Sreepathi Pai", "Sarfraz Khurshid", "Milos Gligoric"], "https://doi.org/10.1145/3133918", "icfp", 2017]], "Sreepathi Pai": [2.9495811158509978e-15, ["Bounded exhaustive test-input generation on GPUs", ["Ahmet Celik", "Sreepathi Pai", "Sarfraz Khurshid", "Milos Gligoric"], "https://doi.org/10.1145/3133918", "icfp", 2017]], "Sarfraz Khurshid": [0, ["Bounded exhaustive test-input generation on GPUs", ["Ahmet Celik", "Sreepathi Pai", "Sarfraz Khurshid", "Milos Gligoric"], "https://doi.org/10.1145/3133918", "icfp", 2017]], "Milos Gligoric": [0, ["Bounded exhaustive test-input generation on GPUs", ["Ahmet Celik", "Sreepathi Pai", "Sarfraz Khurshid", "Milos Gligoric"], "https://doi.org/10.1145/3133918", "icfp", 2017]], "Matthew J. Parkinson": [0, ["Project snowflake: non-blocking safe manual memory management in .NET", ["Matthew J. Parkinson", "Dimitrios Vytiniotis", "Kapil Vaswani", "Manuel Costa", "Pantazis Deligiannis", "Dylan McDermott", "Aaron Blankstein", "Jonathan Balkind"], "https://doi.org/10.1145/3141879", "icfp", 2017]], "Dimitrios Vytiniotis": [0, ["Project snowflake: non-blocking safe manual memory management in .NET", ["Matthew J. Parkinson", "Dimitrios Vytiniotis", "Kapil Vaswani", "Manuel Costa", "Pantazis Deligiannis", "Dylan McDermott", "Aaron Blankstein", "Jonathan Balkind"], "https://doi.org/10.1145/3141879", "icfp", 2017]], "Kapil Vaswani": [0, ["Project snowflake: non-blocking safe manual memory management in .NET", ["Matthew J. Parkinson", "Dimitrios Vytiniotis", "Kapil Vaswani", "Manuel Costa", "Pantazis Deligiannis", "Dylan McDermott", "Aaron Blankstein", "Jonathan Balkind"], "https://doi.org/10.1145/3141879", "icfp", 2017]], "Manuel Costa": [0, ["Project snowflake: non-blocking safe manual memory management in .NET", ["Matthew J. Parkinson", "Dimitrios Vytiniotis", "Kapil Vaswani", "Manuel Costa", "Pantazis Deligiannis", "Dylan McDermott", "Aaron Blankstein", "Jonathan Balkind"], "https://doi.org/10.1145/3141879", "icfp", 2017]], "Pantazis Deligiannis": [0, ["Project snowflake: non-blocking safe manual memory management in .NET", ["Matthew J. Parkinson", "Dimitrios Vytiniotis", "Kapil Vaswani", "Manuel Costa", "Pantazis Deligiannis", "Dylan McDermott", "Aaron Blankstein", "Jonathan Balkind"], "https://doi.org/10.1145/3141879", "icfp", 2017]], "Dylan McDermott": [0, ["Project snowflake: non-blocking safe manual memory management in .NET", ["Matthew J. Parkinson", "Dimitrios Vytiniotis", "Kapil Vaswani", "Manuel Costa", "Pantazis Deligiannis", "Dylan McDermott", "Aaron Blankstein", "Jonathan Balkind"], "https://doi.org/10.1145/3141879", "icfp", 2017]], "Aaron Blankstein": [0, ["Project snowflake: non-blocking safe manual memory management in .NET", ["Matthew J. Parkinson", "Dimitrios Vytiniotis", "Kapil Vaswani", "Manuel Costa", "Pantazis Deligiannis", "Dylan McDermott", "Aaron Blankstein", "Jonathan Balkind"], "https://doi.org/10.1145/3141879", "icfp", 2017]], "Jonathan Balkind": [0, ["Project snowflake: non-blocking safe manual memory management in .NET", ["Matthew J. Parkinson", "Dimitrios Vytiniotis", "Kapil Vaswani", "Manuel Costa", "Pantazis Deligiannis", "Dylan McDermott", "Aaron Blankstein", "Jonathan Balkind"], "https://doi.org/10.1145/3141879", "icfp", 2017]], "Kiwan Maeng": [0.6299311965703964, ["Alpaca: intermittent execution without checkpoints", ["Kiwan Maeng", "Alexei Colin", "Brandon Lucia"], "https://doi.org/10.1145/3133920", "icfp", 2017]], "Alexei Colin": [0, ["Alpaca: intermittent execution without checkpoints", ["Kiwan Maeng", "Alexei Colin", "Brandon Lucia"], "https://doi.org/10.1145/3133920", "icfp", 2017]], "Brandon Lucia": [0, ["Alpaca: intermittent execution without checkpoints", ["Kiwan Maeng", "Alexei Colin", "Brandon Lucia"], "https://doi.org/10.1145/3133920", "icfp", 2017]], "Ronghui Gu": [0, ["An auditing language for preventing correlated failures in the cloud", ["Ennan Zhai", "Ruzica Piskac", "Ronghui Gu", "Xun Lao", "Xi Wang"], "https://doi.org/10.1145/3133921", "icfp", 2017]], "Xun Lao": [0, ["An auditing language for preventing correlated failures in the cloud", ["Ennan Zhai", "Ruzica Piskac", "Ronghui Gu", "Xun Lao", "Xi Wang"], "https://doi.org/10.1145/3133921", "icfp", 2017]], "Xi Wang": [3.964134066336555e-06, ["An auditing language for preventing correlated failures in the cloud", ["Ennan Zhai", "Ruzica Piskac", "Ronghui Gu", "Xun Lao", "Xi Wang"], "https://doi.org/10.1145/3133921", "icfp", 2017]], "Ted Kaminski": [0, ["Reliable and automatic composition of language extensions to C: the ableC extensible language framework", ["Ted Kaminski", "Lucas Kramer", "Travis Carlson", "Eric Van Wyk"], "https://doi.org/10.1145/3138224", "icfp", 2017]], "Lucas Kramer": [0, ["Reliable and automatic composition of language extensions to C: the ableC extensible language framework", ["Ted Kaminski", "Lucas Kramer", "Travis Carlson", "Eric Van Wyk"], "https://doi.org/10.1145/3138224", "icfp", 2017]], "Travis Carlson": [0, ["Reliable and automatic composition of language extensions to C: the ableC extensible language framework", ["Ted Kaminski", "Lucas Kramer", "Travis Carlson", "Eric Van Wyk"], "https://doi.org/10.1145/3138224", "icfp", 2017]], "Eric Van Wyk": [0, ["Reliable and automatic composition of language extensions to C: the ableC extensible language framework", ["Ted Kaminski", "Lucas Kramer", "Travis Carlson", "Eric Van Wyk"], "https://doi.org/10.1145/3138224", "icfp", 2017]], "Johannes Spath": [0, ["IDEal: efficient and precise alias-aware dataflow analysis", ["Johannes Spath", "Karim Ali", "Eric Bodden"], "https://doi.org/10.1145/3133923", "icfp", 2017]], "Karim Ali": [0, ["IDEal: efficient and precise alias-aware dataflow analysis", ["Johannes Spath", "Karim Ali", "Eric Bodden"], "https://doi.org/10.1145/3133923", "icfp", 2017]], "Eric Bodden": [0, ["IDEal: efficient and precise alias-aware dataflow analysis", ["Johannes Spath", "Karim Ali", "Eric Bodden"], "https://doi.org/10.1145/3133923", "icfp", 2017]], "Sehun Jeong": [0.9142275601625443, ["Data-driven context-sensitivity for points-to analysis", ["Sehun Jeong", "Minseok Jeon", "Sung Deok Cha", "Hakjoo Oh"], "https://doi.org/10.1145/3133924", "icfp", 2017]], "Minseok Jeon": [0.9736576676368713, ["Data-driven context-sensitivity for points-to analysis", ["Sehun Jeong", "Minseok Jeon", "Sung Deok Cha", "Hakjoo Oh"], "https://doi.org/10.1145/3133924", "icfp", 2017]], "Sung Deok Cha": [1, ["Data-driven context-sensitivity for points-to analysis", ["Sehun Jeong", "Minseok Jeon", "Sung Deok Cha", "Hakjoo Oh"], "https://doi.org/10.1145/3133924", "icfp", 2017]], "Hakjoo Oh": [1, ["Data-driven context-sensitivity for points-to analysis", ["Sehun Jeong", "Minseok Jeon", "Sung Deok Cha", "Hakjoo Oh"], "https://doi.org/10.1145/3133924", "icfp", 2017], ["Automatically generating features for learning program analysis heuristics for C-like languages", ["Kwonsoo Chae", "Hakjoo Oh", "Kihong Heo", "Hongseok Yang"], "https://doi.org/10.1145/3133925", "icfp", 2017]], "Kwonsoo Chae": [0, ["Automatically generating features for learning program analysis heuristics for C-like languages", ["Kwonsoo Chae", "Hakjoo Oh", "Kihong Heo", "Hongseok Yang"], "https://doi.org/10.1145/3133925", "icfp", 2017]], "Kihong Heo": [0, ["Automatically generating features for learning program analysis heuristics for C-like languages", ["Kwonsoo Chae", "Hakjoo Oh", "Kihong Heo", "Hongseok Yang"], "https://doi.org/10.1145/3133925", "icfp", 2017]], "Hongseok Yang": [1, ["Automatically generating features for learning program analysis heuristics for C-like languages", ["Kwonsoo Chae", "Hakjoo Oh", "Kihong Heo", "Hongseok Yang"], "https://doi.org/10.1145/3133925", "icfp", 2017]], "Tiago Cogumbreiro": [0, ["Deadlock avoidance in parallel programs with futures: why parallel tasks should not wait for strangers", ["Tiago Cogumbreiro", "Rishi Surendran", "Francisco Martins", "Vivek Sarkar", "Vasco T. Vasconcelos", "Max Grossman"], "https://doi.org/10.1145/3143359", "icfp", 2017]], "Rishi Surendran": [0, ["Deadlock avoidance in parallel programs with futures: why parallel tasks should not wait for strangers", ["Tiago Cogumbreiro", "Rishi Surendran", "Francisco Martins", "Vivek Sarkar", "Vasco T. Vasconcelos", "Max Grossman"], "https://doi.org/10.1145/3143359", "icfp", 2017]], "Francisco Martins": [0, ["Deadlock avoidance in parallel programs with futures: why parallel tasks should not wait for strangers", ["Tiago Cogumbreiro", "Rishi Surendran", "Francisco Martins", "Vivek Sarkar", "Vasco T. Vasconcelos", "Max Grossman"], "https://doi.org/10.1145/3143359", "icfp", 2017]], "Vivek Sarkar": [0, ["Deadlock avoidance in parallel programs with futures: why parallel tasks should not wait for strangers", ["Tiago Cogumbreiro", "Rishi Surendran", "Francisco Martins", "Vivek Sarkar", "Vasco T. Vasconcelos", "Max Grossman"], "https://doi.org/10.1145/3143359", "icfp", 2017]], "Max Grossman": [0, ["Deadlock avoidance in parallel programs with futures: why parallel tasks should not wait for strangers", ["Tiago Cogumbreiro", "Rishi Surendran", "Francisco Martins", "Vivek Sarkar", "Vasco T. Vasconcelos", "Max Grossman"], "https://doi.org/10.1145/3143359", "icfp", 2017]], "Andrew Rice": [0, ["Detecting argument selection defects", ["Andrew Rice", "Edward Aftandilian", "Ciera Jaspan", "Emily Johnston", "Michael Pradel", "Yulissa Arroyo-Paredes"], "https://doi.org/10.1145/3133928", "icfp", 2017]], "Edward Aftandilian": [0, ["Detecting argument selection defects", ["Andrew Rice", "Edward Aftandilian", "Ciera Jaspan", "Emily Johnston", "Michael Pradel", "Yulissa Arroyo-Paredes"], "https://doi.org/10.1145/3133928", "icfp", 2017]], "Ciera Jaspan": [0, ["Detecting argument selection defects", ["Andrew Rice", "Edward Aftandilian", "Ciera Jaspan", "Emily Johnston", "Michael Pradel", "Yulissa Arroyo-Paredes"], "https://doi.org/10.1145/3133928", "icfp", 2017]], "Emily Johnston": [0, ["Detecting argument selection defects", ["Andrew Rice", "Edward Aftandilian", "Ciera Jaspan", "Emily Johnston", "Michael Pradel", "Yulissa Arroyo-Paredes"], "https://doi.org/10.1145/3133928", "icfp", 2017]], "Michael Pradel": [0, ["Detecting argument selection defects", ["Andrew Rice", "Edward Aftandilian", "Ciera Jaspan", "Emily Johnston", "Michael Pradel", "Yulissa Arroyo-Paredes"], "https://doi.org/10.1145/3133928", "icfp", 2017]], "Yulissa Arroyo-Paredes": [0, ["Detecting argument selection defects", ["Andrew Rice", "Edward Aftandilian", "Ciera Jaspan", "Emily Johnston", "Michael Pradel", "Yulissa Arroyo-Paredes"], "https://doi.org/10.1145/3133928", "icfp", 2017]], "Baijun Wu": [9.435132142243674e-06, ["How type errors were fixed and what students did?", ["Baijun Wu", "Sheng Chen"], "https://doi.org/10.1145/3133929", "icfp", 2017], ["Learning user friendly type-error messages", ["Baijun Wu", "John Peter Campora III", "Sheng Chen"], "https://doi.org/10.1145/3133930", "icfp", 2017]], "Sheng Chen": [0, ["How type errors were fixed and what students did?", ["Baijun Wu", "Sheng Chen"], "https://doi.org/10.1145/3133929", "icfp", 2017], ["Learning user friendly type-error messages", ["Baijun Wu", "John Peter Campora III", "Sheng Chen"], "https://doi.org/10.1145/3133930", "icfp", 2017]], "John Peter Campora III": [0, ["Learning user friendly type-error messages", ["Baijun Wu", "John Peter Campora III", "Sheng Chen"], "https://doi.org/10.1145/3133930", "icfp", 2017]], "Philip A. Bernstein": [0, ["Geo-distribution of actor-based services", ["Philip A. Bernstein", "Sebastian Burckhardt", "Sergey Bykov", "Natacha Crooks", "Jose M. Faleiro", "Gabriel Kliot", "Alok Kumbhare", "Muntasir Raihan Rahman", "Vivek Shah", "Adriana Szekeres", "Jorgen Thelin"], "https://doi.org/10.1145/3133931", "icfp", 2017]], "Sebastian Burckhardt": [0, ["Geo-distribution of actor-based services", ["Philip A. Bernstein", "Sebastian Burckhardt", "Sergey Bykov", "Natacha Crooks", "Jose M. Faleiro", "Gabriel Kliot", "Alok Kumbhare", "Muntasir Raihan Rahman", "Vivek Shah", "Adriana Szekeres", "Jorgen Thelin"], "https://doi.org/10.1145/3133931", "icfp", 2017]], "Sergey Bykov": [0, ["Geo-distribution of actor-based services", ["Philip A. Bernstein", "Sebastian Burckhardt", "Sergey Bykov", "Natacha Crooks", "Jose M. Faleiro", "Gabriel Kliot", "Alok Kumbhare", "Muntasir Raihan Rahman", "Vivek Shah", "Adriana Szekeres", "Jorgen Thelin"], "https://doi.org/10.1145/3133931", "icfp", 2017]], "Natacha Crooks": [0, ["Geo-distribution of actor-based services", ["Philip A. Bernstein", "Sebastian Burckhardt", "Sergey Bykov", "Natacha Crooks", "Jose M. Faleiro", "Gabriel Kliot", "Alok Kumbhare", "Muntasir Raihan Rahman", "Vivek Shah", "Adriana Szekeres", "Jorgen Thelin"], "https://doi.org/10.1145/3133931", "icfp", 2017]], "Jose M. Faleiro": [0, ["Geo-distribution of actor-based services", ["Philip A. Bernstein", "Sebastian Burckhardt", "Sergey Bykov", "Natacha Crooks", "Jose M. Faleiro", "Gabriel Kliot", "Alok Kumbhare", "Muntasir Raihan Rahman", "Vivek Shah", "Adriana Szekeres", "Jorgen Thelin"], "https://doi.org/10.1145/3133931", "icfp", 2017]], "Gabriel Kliot": [0, ["Geo-distribution of actor-based services", ["Philip A. Bernstein", "Sebastian Burckhardt", "Sergey Bykov", "Natacha Crooks", "Jose M. Faleiro", "Gabriel Kliot", "Alok Kumbhare", "Muntasir Raihan Rahman", "Vivek Shah", "Adriana Szekeres", "Jorgen Thelin"], "https://doi.org/10.1145/3133931", "icfp", 2017]], "Alok Kumbhare": [0, ["Geo-distribution of actor-based services", ["Philip A. Bernstein", "Sebastian Burckhardt", "Sergey Bykov", "Natacha Crooks", "Jose M. Faleiro", "Gabriel Kliot", "Alok Kumbhare", "Muntasir Raihan Rahman", "Vivek Shah", "Adriana Szekeres", "Jorgen Thelin"], "https://doi.org/10.1145/3133931", "icfp", 2017]], "Muntasir Raihan Rahman": [0, ["Geo-distribution of actor-based services", ["Philip A. Bernstein", "Sebastian Burckhardt", "Sergey Bykov", "Natacha Crooks", "Jose M. Faleiro", "Gabriel Kliot", "Alok Kumbhare", "Muntasir Raihan Rahman", "Vivek Shah", "Adriana Szekeres", "Jorgen Thelin"], "https://doi.org/10.1145/3133931", "icfp", 2017]], "Vivek Shah": [0, ["Geo-distribution of actor-based services", ["Philip A. Bernstein", "Sebastian Burckhardt", "Sergey Bykov", "Natacha Crooks", "Jose M. Faleiro", "Gabriel Kliot", "Alok Kumbhare", "Muntasir Raihan Rahman", "Vivek Shah", "Adriana Szekeres", "Jorgen Thelin"], "https://doi.org/10.1145/3133931", "icfp", 2017]], "Adriana Szekeres": [0, ["Geo-distribution of actor-based services", ["Philip A. Bernstein", "Sebastian Burckhardt", "Sergey Bykov", "Natacha Crooks", "Jose M. Faleiro", "Gabriel Kliot", "Alok Kumbhare", "Muntasir Raihan Rahman", "Vivek Shah", "Adriana Szekeres", "Jorgen Thelin"], "https://doi.org/10.1145/3133931", "icfp", 2017]], "Jorgen Thelin": [0, ["Geo-distribution of actor-based services", ["Philip A. Bernstein", "Sebastian Burckhardt", "Sergey Bykov", "Natacha Crooks", "Jose M. Faleiro", "Gabriel Kliot", "Alok Kumbhare", "Muntasir Raihan Rahman", "Vivek Shah", "Adriana Szekeres", "Jorgen Thelin"], "https://doi.org/10.1145/3133931", "icfp", 2017]], "Oded Padon": [0, ["Paxos made EPR: decidable reasoning about distributed protocols", ["Oded Padon", "Giuliano Losa", "Mooly Sagiv", "Sharon Shoham"], "https://doi.org/10.1145/3140568", "icfp", 2017]], "Giuliano Losa": [0, ["Paxos made EPR: decidable reasoning about distributed protocols", ["Oded Padon", "Giuliano Losa", "Mooly Sagiv", "Sharon Shoham"], "https://doi.org/10.1145/3140568", "icfp", 2017]], "Mooly Sagiv": [0, ["Paxos made EPR: decidable reasoning about distributed protocols", ["Oded Padon", "Giuliano Losa", "Mooly Sagiv", "Sharon Shoham"], "https://doi.org/10.1145/3140568", "icfp", 2017]], "Sharon Shoham": [0, ["Paxos made EPR: decidable reasoning about distributed protocols", ["Oded Padon", "Giuliano Losa", "Mooly Sagiv", "Sharon Shoham"], "https://doi.org/10.1145/3140568", "icfp", 2017]], "Victor B. F. Gomes": [0, ["Verifying strong eventual consistency in distributed systems", ["Victor B. F. Gomes", "Martin Kleppmann", "Dominic P. Mulligan", "Alastair R. Beresford"], "https://doi.org/10.1145/3133933", "icfp", 2017]], "Martin Kleppmann": [0, ["Verifying strong eventual consistency in distributed systems", ["Victor B. F. Gomes", "Martin Kleppmann", "Dominic P. Mulligan", "Alastair R. Beresford"], "https://doi.org/10.1145/3133933", "icfp", 2017]], "Dominic P. Mulligan": [0, ["Verifying strong eventual consistency in distributed systems", ["Victor B. F. Gomes", "Martin Kleppmann", "Dominic P. Mulligan", "Alastair R. Beresford"], "https://doi.org/10.1145/3133933", "icfp", 2017]], "Alastair R. Beresford": [0, ["Verifying strong eventual consistency in distributed systems", ["Victor B. F. Gomes", "Martin Kleppmann", "Dominic P. Mulligan", "Alastair R. Beresford"], "https://doi.org/10.1145/3133933", "icfp", 2017]], "Alexander Bakst": [0, ["Verifying distributed programs via canonical sequentialization", ["Alexander Bakst", "Klaus von Gleissenthall", "Rami Gokhan Kici", "Ranjit Jhala"], "https://doi.org/10.1145/3133934", "icfp", 2017]], "Klaus von Gleissenthall": [0, ["Verifying distributed programs via canonical sequentialization", ["Alexander Bakst", "Klaus von Gleissenthall", "Rami Gokhan Kici", "Ranjit Jhala"], "https://doi.org/10.1145/3133934", "icfp", 2017]], "Rami Gokhan Kici": [0, ["Verifying distributed programs via canonical sequentialization", ["Alexander Bakst", "Klaus von Gleissenthall", "Rami Gokhan Kici", "Ranjit Jhala"], "https://doi.org/10.1145/3133934", "icfp", 2017]]}
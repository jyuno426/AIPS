{"Chris Hawblitzel": [0, ["IronFleet: proving practical distributed systems correct", ["Chris Hawblitzel", "Jon Howell", "Manos Kapritsos", "Jacob R. Lorch", "Bryan Parno", "Michael L. Roberts", "Srinath T. V. Setty", "Brian Zill"], "https://doi.org/10.1145/2815400.2815428", 17, "sosp", 2015]], "Jon Howell": [0, ["IronFleet: proving practical distributed systems correct", ["Chris Hawblitzel", "Jon Howell", "Manos Kapritsos", "Jacob R. Lorch", "Bryan Parno", "Michael L. Roberts", "Srinath T. V. Setty", "Brian Zill"], "https://doi.org/10.1145/2815400.2815428", 17, "sosp", 2015]], "Manos Kapritsos": [0, ["IronFleet: proving practical distributed systems correct", ["Chris Hawblitzel", "Jon Howell", "Manos Kapritsos", "Jacob R. Lorch", "Bryan Parno", "Michael L. Roberts", "Srinath T. V. Setty", "Brian Zill"], "https://doi.org/10.1145/2815400.2815428", 17, "sosp", 2015], ["High-performance ACID via modular concurrency control", ["Chao Xie", "Chunzhi Su", "Cody Littley", "Lorenzo Alvisi", "Manos Kapritsos", "Yang Wang"], "https://doi.org/10.1145/2815400.2815430", 16, "sosp", 2015]], "Jacob R. Lorch": [0, ["IronFleet: proving practical distributed systems correct", ["Chris Hawblitzel", "Jon Howell", "Manos Kapritsos", "Jacob R. Lorch", "Bryan Parno", "Michael L. Roberts", "Srinath T. V. Setty", "Brian Zill"], "https://doi.org/10.1145/2815400.2815428", 17, "sosp", 2015]], "Bryan Parno": [0, ["IronFleet: proving practical distributed systems correct", ["Chris Hawblitzel", "Jon Howell", "Manos Kapritsos", "Jacob R. Lorch", "Bryan Parno", "Michael L. Roberts", "Srinath T. V. Setty", "Brian Zill"], "https://doi.org/10.1145/2815400.2815428", 17, "sosp", 2015]], "Michael L. Roberts": [0, ["IronFleet: proving practical distributed systems correct", ["Chris Hawblitzel", "Jon Howell", "Manos Kapritsos", "Jacob R. Lorch", "Bryan Parno", "Michael L. Roberts", "Srinath T. V. Setty", "Brian Zill"], "https://doi.org/10.1145/2815400.2815428", 17, "sosp", 2015]], "Srinath T. V. Setty": [0, ["IronFleet: proving practical distributed systems correct", ["Chris Hawblitzel", "Jon Howell", "Manos Kapritsos", "Jacob R. Lorch", "Bryan Parno", "Michael L. Roberts", "Srinath T. V. Setty", "Brian Zill"], "https://doi.org/10.1145/2815400.2815428", 17, "sosp", 2015]], "Brian Zill": [0, ["IronFleet: proving practical distributed systems correct", ["Chris Hawblitzel", "Jon Howell", "Manos Kapritsos", "Jacob R. Lorch", "Bryan Parno", "Michael L. Roberts", "Srinath T. V. Setty", "Brian Zill"], "https://doi.org/10.1145/2815400.2815428", 17, "sosp", 2015]], "Haogang Chen": [0, ["Using Crash Hoare logic for certifying the FSCQ file system", ["Haogang Chen", "Daniel Ziegler", "Tej Chajed", "Adam Chlipala", "M. Frans Kaashoek", "Nickolai Zeldovich"], "https://doi.org/10.1145/2815400.2815402", 20, "sosp", 2015]], "Daniel Ziegler": [0, ["Using Crash Hoare logic for certifying the FSCQ file system", ["Haogang Chen", "Daniel Ziegler", "Tej Chajed", "Adam Chlipala", "M. Frans Kaashoek", "Nickolai Zeldovich"], "https://doi.org/10.1145/2815400.2815402", 20, "sosp", 2015]], "Tej Chajed": [0, ["Using Crash Hoare logic for certifying the FSCQ file system", ["Haogang Chen", "Daniel Ziegler", "Tej Chajed", "Adam Chlipala", "M. Frans Kaashoek", "Nickolai Zeldovich"], "https://doi.org/10.1145/2815400.2815402", 20, "sosp", 2015]], "Adam Chlipala": [0, ["Using Crash Hoare logic for certifying the FSCQ file system", ["Haogang Chen", "Daniel Ziegler", "Tej Chajed", "Adam Chlipala", "M. Frans Kaashoek", "Nickolai Zeldovich"], "https://doi.org/10.1145/2815400.2815402", 20, "sosp", 2015]], "M. Frans Kaashoek": [0, ["Using Crash Hoare logic for certifying the FSCQ file system", ["Haogang Chen", "Daniel Ziegler", "Tej Chajed", "Adam Chlipala", "M. Frans Kaashoek", "Nickolai Zeldovich"], "https://doi.org/10.1145/2815400.2815402", 20, "sosp", 2015]], "Nickolai Zeldovich": [0, ["Using Crash Hoare logic for certifying the FSCQ file system", ["Haogang Chen", "Daniel Ziegler", "Tej Chajed", "Adam Chlipala", "M. Frans Kaashoek", "Nickolai Zeldovich"], "https://doi.org/10.1145/2815400.2815402", 20, "sosp", 2015], ["Vuvuzela: scalable private messaging resistant to traffic analysis", ["Jelle van den Hooff", "David Lazar", "Matei Zaharia", "Nickolai Zeldovich"], "https://doi.org/10.1145/2815400.2815417", 16, "sosp", 2015]], "Tom Ridge": [0, ["SibylFS: formal specification and oracle-based testing for POSIX and real-world file systems", ["Tom Ridge", "David Sheets", "Thomas Tuerk", "Andrea Giugliano", "Anil Madhavapeddy", "Peter Sewell"], "https://doi.org/10.1145/2815400.2815411", 16, "sosp", 2015]], "David Sheets": [0, ["SibylFS: formal specification and oracle-based testing for POSIX and real-world file systems", ["Tom Ridge", "David Sheets", "Thomas Tuerk", "Andrea Giugliano", "Anil Madhavapeddy", "Peter Sewell"], "https://doi.org/10.1145/2815400.2815411", 16, "sosp", 2015]], "Thomas Tuerk": [0, ["SibylFS: formal specification and oracle-based testing for POSIX and real-world file systems", ["Tom Ridge", "David Sheets", "Thomas Tuerk", "Andrea Giugliano", "Anil Madhavapeddy", "Peter Sewell"], "https://doi.org/10.1145/2815400.2815411", 16, "sosp", 2015]], "Andrea Giugliano": [0, ["SibylFS: formal specification and oracle-based testing for POSIX and real-world file systems", ["Tom Ridge", "David Sheets", "Thomas Tuerk", "Andrea Giugliano", "Anil Madhavapeddy", "Peter Sewell"], "https://doi.org/10.1145/2815400.2815411", 16, "sosp", 2015]], "Anil Madhavapeddy": [0, ["SibylFS: formal specification and oracle-based testing for POSIX and real-world file systems", ["Tom Ridge", "David Sheets", "Thomas Tuerk", "Andrea Giugliano", "Anil Madhavapeddy", "Peter Sewell"], "https://doi.org/10.1145/2815400.2815411", 16, "sosp", 2015]], "Peter Sewell": [0, ["SibylFS: formal specification and oracle-based testing for POSIX and real-world file systems", ["Tom Ridge", "David Sheets", "Thomas Tuerk", "Andrea Giugliano", "Anil Madhavapeddy", "Peter Sewell"], "https://doi.org/10.1145/2815400.2815411", 16, "sosp", 2015]], "Aleksandar Dragojevic": [0, ["No compromises: distributed transactions with consistency, availability, and performance", ["Aleksandar Dragojevic", "Dushyanth Narayanan", "Edmund B. Nightingale", "Matthew Renzelmann", "Alex Shamis", "Anirudh Badam", "Miguel Castro"], "https://doi.org/10.1145/2815400.2815425", 17, "sosp", 2015]], "Dushyanth Narayanan": [0, ["No compromises: distributed transactions with consistency, availability, and performance", ["Aleksandar Dragojevic", "Dushyanth Narayanan", "Edmund B. Nightingale", "Matthew Renzelmann", "Alex Shamis", "Anirudh Badam", "Miguel Castro"], "https://doi.org/10.1145/2815400.2815425", 17, "sosp", 2015]], "Edmund B. Nightingale": [0, ["No compromises: distributed transactions with consistency, availability, and performance", ["Aleksandar Dragojevic", "Dushyanth Narayanan", "Edmund B. Nightingale", "Matthew Renzelmann", "Alex Shamis", "Anirudh Badam", "Miguel Castro"], "https://doi.org/10.1145/2815400.2815425", 17, "sosp", 2015]], "Matthew Renzelmann": [0, ["No compromises: distributed transactions with consistency, availability, and performance", ["Aleksandar Dragojevic", "Dushyanth Narayanan", "Edmund B. Nightingale", "Matthew Renzelmann", "Alex Shamis", "Anirudh Badam", "Miguel Castro"], "https://doi.org/10.1145/2815400.2815425", 17, "sosp", 2015]], "Alex Shamis": [0, ["No compromises: distributed transactions with consistency, availability, and performance", ["Aleksandar Dragojevic", "Dushyanth Narayanan", "Edmund B. Nightingale", "Matthew Renzelmann", "Alex Shamis", "Anirudh Badam", "Miguel Castro"], "https://doi.org/10.1145/2815400.2815425", 17, "sosp", 2015]], "Anirudh Badam": [0, ["No compromises: distributed transactions with consistency, availability, and performance", ["Aleksandar Dragojevic", "Dushyanth Narayanan", "Edmund B. Nightingale", "Matthew Renzelmann", "Alex Shamis", "Anirudh Badam", "Miguel Castro"], "https://doi.org/10.1145/2815400.2815425", 17, "sosp", 2015], ["Software defined batteries", ["Anirudh Badam", "Ranveer Chandra", "Jon Dutra", "Anthony Ferrese", "Steve Hodges", "Pan Hu", "Julia Meinershagen", "Thomas Moscibroda", "Bodhi Priyantha", "Evangelia D. Skiani"], "https://doi.org/10.1145/2815400.2815429", 15, "sosp", 2015]], "Miguel Castro": [0, ["No compromises: distributed transactions with consistency, availability, and performance", ["Aleksandar Dragojevic", "Dushyanth Narayanan", "Edmund B. Nightingale", "Matthew Renzelmann", "Alex Shamis", "Anirudh Badam", "Miguel Castro"], "https://doi.org/10.1145/2815400.2815425", 17, "sosp", 2015]], "Collin Lee": [7.332649154534465e-08, ["Implementing linearizability at large scale and low latency", ["Collin Lee", "Seo Jin Park", "Ankita Kejriwal", "Satoshi Matsushita", "John K. Ousterhout"], "https://doi.org/10.1145/2815400.2815416", 16, "sosp", 2015]], "Seo Jin Park": [0.9980147182941437, ["Implementing linearizability at large scale and low latency", ["Collin Lee", "Seo Jin Park", "Ankita Kejriwal", "Satoshi Matsushita", "John K. Ousterhout"], "https://doi.org/10.1145/2815400.2815416", 16, "sosp", 2015]], "Ankita Kejriwal": [0, ["Implementing linearizability at large scale and low latency", ["Collin Lee", "Seo Jin Park", "Ankita Kejriwal", "Satoshi Matsushita", "John K. Ousterhout"], "https://doi.org/10.1145/2815400.2815416", 16, "sosp", 2015]], "Satoshi Matsushita": [0, ["Implementing linearizability at large scale and low latency", ["Collin Lee", "Seo Jin Park", "Ankita Kejriwal", "Satoshi Matsushita", "John K. Ousterhout"], "https://doi.org/10.1145/2815400.2815416", 16, "sosp", 2015]], "John K. Ousterhout": [0, ["Implementing linearizability at large scale and low latency", ["Collin Lee", "Seo Jin Park", "Ankita Kejriwal", "Satoshi Matsushita", "John K. Ousterhout"], "https://doi.org/10.1145/2815400.2815416", 16, "sosp", 2015]], "Xingda Wei": [0, ["Fast in-memory transaction processing using RDMA and HTM", ["Xingda Wei", "Jiaxin Shi", "Yanzhe Chen", "Rong Chen", "Haibo Chen"], "https://doi.org/10.1145/2815400.2815419", 18, "sosp", 2015]], "Jiaxin Shi": [0, ["Fast in-memory transaction processing using RDMA and HTM", ["Xingda Wei", "Jiaxin Shi", "Yanzhe Chen", "Rong Chen", "Haibo Chen"], "https://doi.org/10.1145/2815400.2815419", 18, "sosp", 2015]], "Yanzhe Chen": [0, ["Fast in-memory transaction processing using RDMA and HTM", ["Xingda Wei", "Jiaxin Shi", "Yanzhe Chen", "Rong Chen", "Haibo Chen"], "https://doi.org/10.1145/2815400.2815419", 18, "sosp", 2015]], "Rong Chen": [0, ["Fast in-memory transaction processing using RDMA and HTM", ["Xingda Wei", "Jiaxin Shi", "Yanzhe Chen", "Rong Chen", "Haibo Chen"], "https://doi.org/10.1145/2815400.2815419", 18, "sosp", 2015]], "Haibo Chen": [0, ["Fast in-memory transaction processing using RDMA and HTM", ["Xingda Wei", "Jiaxin Shi", "Yanzhe Chen", "Rong Chen", "Haibo Chen"], "https://doi.org/10.1145/2815400.2815419", 18, "sosp", 2015]], "Heming Cui": [0, ["Paxos made transparent", ["Heming Cui", "Rui Gu", "Cheng Liu", "Tianyu Chen", "Junfeng Yang"], "https://doi.org/10.1145/2815400.2815427", 16, "sosp", 2015]], "Rui Gu": [0.0352767538279295, ["Paxos made transparent", ["Heming Cui", "Rui Gu", "Cheng Liu", "Tianyu Chen", "Junfeng Yang"], "https://doi.org/10.1145/2815400.2815427", 16, "sosp", 2015]], "Cheng Liu": [0, ["Paxos made transparent", ["Heming Cui", "Rui Gu", "Cheng Liu", "Tianyu Chen", "Junfeng Yang"], "https://doi.org/10.1145/2815400.2815427", 16, "sosp", 2015]], "Tianyu Chen": [0, ["Paxos made transparent", ["Heming Cui", "Rui Gu", "Cheng Liu", "Tianyu Chen", "Junfeng Yang"], "https://doi.org/10.1145/2815400.2815427", 16, "sosp", 2015]], "Junfeng Yang": [0.00013482506255968474, ["Paxos made transparent", ["Heming Cui", "Rui Gu", "Cheng Liu", "Tianyu Chen", "Junfeng Yang"], "https://doi.org/10.1145/2815400.2815427", 16, "sosp", 2015]], "Shoumik Palkar": [0, ["E2: a framework for NFV applications", ["Shoumik Palkar", "Chang Lan", "Sangjin Han", "Keon Jang", "Aurojit Panda", "Sylvia Ratnasamy", "Luigi Rizzo", "Scott Shenker"], "https://doi.org/10.1145/2815400.2815423", 16, "sosp", 2015]], "Chang Lan": [0, ["E2: a framework for NFV applications", ["Shoumik Palkar", "Chang Lan", "Sangjin Han", "Keon Jang", "Aurojit Panda", "Sylvia Ratnasamy", "Luigi Rizzo", "Scott Shenker"], "https://doi.org/10.1145/2815400.2815423", 16, "sosp", 2015]], "Sangjin Han": [0.8939447402954102, ["E2: a framework for NFV applications", ["Shoumik Palkar", "Chang Lan", "Sangjin Han", "Keon Jang", "Aurojit Panda", "Sylvia Ratnasamy", "Luigi Rizzo", "Scott Shenker"], "https://doi.org/10.1145/2815400.2815423", 16, "sosp", 2015]], "Keon Jang": [1, ["E2: a framework for NFV applications", ["Shoumik Palkar", "Chang Lan", "Sangjin Han", "Keon Jang", "Aurojit Panda", "Sylvia Ratnasamy", "Luigi Rizzo", "Scott Shenker"], "https://doi.org/10.1145/2815400.2815423", 16, "sosp", 2015]], "Aurojit Panda": [0, ["E2: a framework for NFV applications", ["Shoumik Palkar", "Chang Lan", "Sangjin Han", "Keon Jang", "Aurojit Panda", "Sylvia Ratnasamy", "Luigi Rizzo", "Scott Shenker"], "https://doi.org/10.1145/2815400.2815423", 16, "sosp", 2015]], "Sylvia Ratnasamy": [0, ["E2: a framework for NFV applications", ["Shoumik Palkar", "Chang Lan", "Sangjin Han", "Keon Jang", "Aurojit Panda", "Sylvia Ratnasamy", "Luigi Rizzo", "Scott Shenker"], "https://doi.org/10.1145/2815400.2815423", 16, "sosp", 2015]], "Luigi Rizzo": [0, ["E2: a framework for NFV applications", ["Shoumik Palkar", "Chang Lan", "Sangjin Han", "Keon Jang", "Aurojit Panda", "Sylvia Ratnasamy", "Luigi Rizzo", "Scott Shenker"], "https://doi.org/10.1145/2815400.2815423", 16, "sosp", 2015]], "Scott Shenker": [0, ["E2: a framework for NFV applications", ["Shoumik Palkar", "Chang Lan", "Sangjin Han", "Keon Jang", "Aurojit Panda", "Sylvia Ratnasamy", "Luigi Rizzo", "Scott Shenker"], "https://doi.org/10.1145/2815400.2815423", 16, "sosp", 2015]], "Jelle van den Hooff": [0, ["Vuvuzela: scalable private messaging resistant to traffic analysis", ["Jelle van den Hooff", "David Lazar", "Matei Zaharia", "Nickolai Zeldovich"], "https://doi.org/10.1145/2815400.2815417", 16, "sosp", 2015]], "David Lazar": [0, ["Vuvuzela: scalable private messaging resistant to traffic analysis", ["Jelle van den Hooff", "David Lazar", "Matei Zaharia", "Nickolai Zeldovich"], "https://doi.org/10.1145/2815400.2815417", 16, "sosp", 2015]], "Matei Zaharia": [0, ["Vuvuzela: scalable private messaging resistant to traffic analysis", ["Jelle van den Hooff", "David Lazar", "Matei Zaharia", "Nickolai Zeldovich"], "https://doi.org/10.1145/2815400.2815417", 16, "sosp", 2015]], "Veselin Raychev": [0, ["Parallelizing user-defined aggregations using symbolic execution", ["Veselin Raychev", "Madanlal Musuvathi", "Todd Mytkowicz"], "https://doi.org/10.1145/2815400.2815418", 15, "sosp", 2015]], "Madanlal Musuvathi": [0, ["Parallelizing user-defined aggregations using symbolic execution", ["Veselin Raychev", "Madanlal Musuvathi", "Todd Mytkowicz"], "https://doi.org/10.1145/2815400.2815418", 15, "sosp", 2015]], "Todd Mytkowicz": [0, ["Parallelizing user-defined aggregations using symbolic execution", ["Veselin Raychev", "Madanlal Musuvathi", "Todd Mytkowicz"], "https://doi.org/10.1145/2815400.2815418", 15, "sosp", 2015]], "Alexander Matveev": [0, ["Read-log-update: a lightweight synchronization mechanism for concurrent programming", ["Alexander Matveev", "Nir Shavit", "Pascal Felber", "Patrick Marlier"], "https://doi.org/10.1145/2815400.2815406", 16, "sosp", 2015]], "Nir Shavit": [0, ["Read-log-update: a lightweight synchronization mechanism for concurrent programming", ["Alexander Matveev", "Nir Shavit", "Pascal Felber", "Patrick Marlier"], "https://doi.org/10.1145/2815400.2815406", 16, "sosp", 2015]], "Pascal Felber": [0, ["Read-log-update: a lightweight synchronization mechanism for concurrent programming", ["Alexander Matveev", "Nir Shavit", "Pascal Felber", "Patrick Marlier"], "https://doi.org/10.1145/2815400.2815406", 16, "sosp", 2015]], "Patrick Marlier": [0, ["Read-log-update: a lightweight synchronization mechanism for concurrent programming", ["Alexander Matveev", "Nir Shavit", "Pascal Felber", "Patrick Marlier"], "https://doi.org/10.1145/2815400.2815406", 16, "sosp", 2015]], "Charlie Curtsinger": [0, ["Coz: finding code that counts with causal profiling", ["Charlie Curtsinger", "Emery D. Berger"], "https://doi.org/10.1145/2815400.2815409", 14, "sosp", 2015]], "Emery D. Berger": [0, ["Coz: finding code that counts with causal profiling", ["Charlie Curtsinger", "Emery D. Berger"], "https://doi.org/10.1145/2815400.2815409", 14, "sosp", 2015]], "Henry Hoffmann": [0, ["JouleGuard: energy guarantees for approximate applications", ["Henry Hoffmann"], "https://doi.org/10.1145/2815400.2815403", 17, "sosp", 2015]], "Ranveer Chandra": [0, ["Software defined batteries", ["Anirudh Badam", "Ranveer Chandra", "Jon Dutra", "Anthony Ferrese", "Steve Hodges", "Pan Hu", "Julia Meinershagen", "Thomas Moscibroda", "Bodhi Priyantha", "Evangelia D. Skiani"], "https://doi.org/10.1145/2815400.2815429", 15, "sosp", 2015]], "Jon Dutra": [0, ["Software defined batteries", ["Anirudh Badam", "Ranveer Chandra", "Jon Dutra", "Anthony Ferrese", "Steve Hodges", "Pan Hu", "Julia Meinershagen", "Thomas Moscibroda", "Bodhi Priyantha", "Evangelia D. Skiani"], "https://doi.org/10.1145/2815400.2815429", 15, "sosp", 2015]], "Anthony Ferrese": [0, ["Software defined batteries", ["Anirudh Badam", "Ranveer Chandra", "Jon Dutra", "Anthony Ferrese", "Steve Hodges", "Pan Hu", "Julia Meinershagen", "Thomas Moscibroda", "Bodhi Priyantha", "Evangelia D. Skiani"], "https://doi.org/10.1145/2815400.2815429", 15, "sosp", 2015]], "Steve Hodges": [0, ["Software defined batteries", ["Anirudh Badam", "Ranveer Chandra", "Jon Dutra", "Anthony Ferrese", "Steve Hodges", "Pan Hu", "Julia Meinershagen", "Thomas Moscibroda", "Bodhi Priyantha", "Evangelia D. Skiani"], "https://doi.org/10.1145/2815400.2815429", 15, "sosp", 2015]], "Pan Hu": [0, ["Software defined batteries", ["Anirudh Badam", "Ranveer Chandra", "Jon Dutra", "Anthony Ferrese", "Steve Hodges", "Pan Hu", "Julia Meinershagen", "Thomas Moscibroda", "Bodhi Priyantha", "Evangelia D. Skiani"], "https://doi.org/10.1145/2815400.2815429", 15, "sosp", 2015]], "Julia Meinershagen": [0, ["Software defined batteries", ["Anirudh Badam", "Ranveer Chandra", "Jon Dutra", "Anthony Ferrese", "Steve Hodges", "Pan Hu", "Julia Meinershagen", "Thomas Moscibroda", "Bodhi Priyantha", "Evangelia D. Skiani"], "https://doi.org/10.1145/2815400.2815429", 15, "sosp", 2015]], "Thomas Moscibroda": [0, ["Software defined batteries", ["Anirudh Badam", "Ranveer Chandra", "Jon Dutra", "Anthony Ferrese", "Steve Hodges", "Pan Hu", "Julia Meinershagen", "Thomas Moscibroda", "Bodhi Priyantha", "Evangelia D. Skiani"], "https://doi.org/10.1145/2815400.2815429", 15, "sosp", 2015]], "Bodhi Priyantha": [0, ["Software defined batteries", ["Anirudh Badam", "Ranveer Chandra", "Jon Dutra", "Anthony Ferrese", "Steve Hodges", "Pan Hu", "Julia Meinershagen", "Thomas Moscibroda", "Bodhi Priyantha", "Evangelia D. Skiani"], "https://doi.org/10.1145/2815400.2815429", 15, "sosp", 2015]], "Evangelia D. Skiani": [0, ["Software defined batteries", ["Anirudh Badam", "Ranveer Chandra", "Jon Dutra", "Anthony Ferrese", "Steve Hodges", "Pan Hu", "Julia Meinershagen", "Thomas Moscibroda", "Bodhi Priyantha", "Evangelia D. Skiani"], "https://doi.org/10.1145/2815400.2815429", 15, "sosp", 2015]], "Matthew Lentz": [0, ["Drowsy power management", ["Matthew Lentz", "James Litton", "Bobby Bhattacharjee"], "https://doi.org/10.1145/2815400.2815414", 15, "sosp", 2015]], "James Litton": [0, ["Drowsy power management", ["Matthew Lentz", "James Litton", "Bobby Bhattacharjee"], "https://doi.org/10.1145/2815400.2815414", 15, "sosp", 2015]], "Bobby Bhattacharjee": [0, ["Drowsy power management", ["Matthew Lentz", "James Litton", "Bobby Bhattacharjee"], "https://doi.org/10.1145/2815400.2815414", 15, "sosp", 2015]], "Marcos K. Aguilera": [0, ["Yesquel: scalable sql storage for web applications", ["Marcos K. Aguilera", "Joshua B. Leners", "Michael Walfish"], "https://doi.org/10.1145/2815400.2815413", 18, "sosp", 2015]], "Joshua B. Leners": [0, ["Yesquel: scalable sql storage for web applications", ["Marcos K. Aguilera", "Joshua B. Leners", "Michael Walfish"], "https://doi.org/10.1145/2815400.2815413", 18, "sosp", 2015]], "Michael Walfish": [0, ["Yesquel: scalable sql storage for web applications", ["Marcos K. Aguilera", "Joshua B. Leners", "Michael Walfish"], "https://doi.org/10.1145/2815400.2815413", 18, "sosp", 2015]], "Irene Zhang": [0, ["Building consistent transactions with inconsistent replication", ["Irene Zhang", "Naveen Kr. Sharma", "Adriana Szekeres", "Arvind Krishnamurthy", "Dan R. K. Ports"], "https://doi.org/10.1145/2815400.2815404", 16, "sosp", 2015]], "Naveen Kr. Sharma": [0, ["Building consistent transactions with inconsistent replication", ["Irene Zhang", "Naveen Kr. Sharma", "Adriana Szekeres", "Arvind Krishnamurthy", "Dan R. K. Ports"], "https://doi.org/10.1145/2815400.2815404", 16, "sosp", 2015]], "Adriana Szekeres": [0, ["Building consistent transactions with inconsistent replication", ["Irene Zhang", "Naveen Kr. Sharma", "Adriana Szekeres", "Arvind Krishnamurthy", "Dan R. K. Ports"], "https://doi.org/10.1145/2815400.2815404", 16, "sosp", 2015]], "Arvind Krishnamurthy": [0, ["Building consistent transactions with inconsistent replication", ["Irene Zhang", "Naveen Kr. Sharma", "Adriana Szekeres", "Arvind Krishnamurthy", "Dan R. K. Ports"], "https://doi.org/10.1145/2815400.2815404", 16, "sosp", 2015]], "Dan R. K. Ports": [0, ["Building consistent transactions with inconsistent replication", ["Irene Zhang", "Naveen Kr. Sharma", "Adriana Szekeres", "Arvind Krishnamurthy", "Dan R. K. Ports"], "https://doi.org/10.1145/2815400.2815404", 16, "sosp", 2015]], "Chao Xie": [0, ["High-performance ACID via modular concurrency control", ["Chao Xie", "Chunzhi Su", "Cody Littley", "Lorenzo Alvisi", "Manos Kapritsos", "Yang Wang"], "https://doi.org/10.1145/2815400.2815430", 16, "sosp", 2015]], "Chunzhi Su": [0, ["High-performance ACID via modular concurrency control", ["Chao Xie", "Chunzhi Su", "Cody Littley", "Lorenzo Alvisi", "Manos Kapritsos", "Yang Wang"], "https://doi.org/10.1145/2815400.2815430", 16, "sosp", 2015]], "Cody Littley": [0, ["High-performance ACID via modular concurrency control", ["Chao Xie", "Chunzhi Su", "Cody Littley", "Lorenzo Alvisi", "Manos Kapritsos", "Yang Wang"], "https://doi.org/10.1145/2815400.2815430", 16, "sosp", 2015]], "Lorenzo Alvisi": [0, ["High-performance ACID via modular concurrency control", ["Chao Xie", "Chunzhi Su", "Cody Littley", "Lorenzo Alvisi", "Manos Kapritsos", "Yang Wang"], "https://doi.org/10.1145/2815400.2815430", 16, "sosp", 2015]], "Yang Wang": [0.012746322434395552, ["High-performance ACID via modular concurrency control", ["Chao Xie", "Chunzhi Su", "Cody Littley", "Lorenzo Alvisi", "Manos Kapritsos", "Yang Wang"], "https://doi.org/10.1145/2815400.2815430", 16, "sosp", 2015]], "Haonan Lu": [0, ["Existential consistency: measuring and understanding consistency at Facebook", ["Haonan Lu", "Kaushik Veeraraghavan", "Philippe Ajoux", "Jim Hunt", "Yee Jiun Song", "Wendy Tobagus", "Sanjeev Kumar", "Wyatt Lloyd"], "https://doi.org/10.1145/2815400.2815426", 16, "sosp", 2015]], "Kaushik Veeraraghavan": [0, ["Existential consistency: measuring and understanding consistency at Facebook", ["Haonan Lu", "Kaushik Veeraraghavan", "Philippe Ajoux", "Jim Hunt", "Yee Jiun Song", "Wendy Tobagus", "Sanjeev Kumar", "Wyatt Lloyd"], "https://doi.org/10.1145/2815400.2815426", 16, "sosp", 2015]], "Philippe Ajoux": [0, ["Existential consistency: measuring and understanding consistency at Facebook", ["Haonan Lu", "Kaushik Veeraraghavan", "Philippe Ajoux", "Jim Hunt", "Yee Jiun Song", "Wendy Tobagus", "Sanjeev Kumar", "Wyatt Lloyd"], "https://doi.org/10.1145/2815400.2815426", 16, "sosp", 2015]], "Jim Hunt": [0, ["Existential consistency: measuring and understanding consistency at Facebook", ["Haonan Lu", "Kaushik Veeraraghavan", "Philippe Ajoux", "Jim Hunt", "Yee Jiun Song", "Wendy Tobagus", "Sanjeev Kumar", "Wyatt Lloyd"], "https://doi.org/10.1145/2815400.2815426", 16, "sosp", 2015]], "Yee Jiun Song": [0.0525188148021698, ["Existential consistency: measuring and understanding consistency at Facebook", ["Haonan Lu", "Kaushik Veeraraghavan", "Philippe Ajoux", "Jim Hunt", "Yee Jiun Song", "Wendy Tobagus", "Sanjeev Kumar", "Wyatt Lloyd"], "https://doi.org/10.1145/2815400.2815426", 16, "sosp", 2015]], "Wendy Tobagus": [0, ["Existential consistency: measuring and understanding consistency at Facebook", ["Haonan Lu", "Kaushik Veeraraghavan", "Philippe Ajoux", "Jim Hunt", "Yee Jiun Song", "Wendy Tobagus", "Sanjeev Kumar", "Wyatt Lloyd"], "https://doi.org/10.1145/2815400.2815426", 16, "sosp", 2015]], "Sanjeev Kumar": [0, ["Existential consistency: measuring and understanding consistency at Facebook", ["Haonan Lu", "Kaushik Veeraraghavan", "Philippe Ajoux", "Jim Hunt", "Yee Jiun Song", "Wendy Tobagus", "Sanjeev Kumar", "Wyatt Lloyd"], "https://doi.org/10.1145/2815400.2815426", 16, "sosp", 2015]], "Wyatt Lloyd": [0, ["Existential consistency: measuring and understanding consistency at Facebook", ["Haonan Lu", "Kaushik Veeraraghavan", "Philippe Ajoux", "Jim Hunt", "Yee Jiun Song", "Wendy Tobagus", "Sanjeev Kumar", "Wyatt Lloyd"], "https://doi.org/10.1145/2815400.2815426", 16, "sosp", 2015]], "Nadav Amit": [0, ["Virtual CPU validation", ["Nadav Amit", "Dan Tsafrir", "Assaf Schuster", "Ahmad Ayoub", "Eran Shlomo"], "https://doi.org/10.1145/2815400.2815420", 17, "sosp", 2015]], "Dan Tsafrir": [0, ["Virtual CPU validation", ["Nadav Amit", "Dan Tsafrir", "Assaf Schuster", "Ahmad Ayoub", "Eran Shlomo"], "https://doi.org/10.1145/2815400.2815420", 17, "sosp", 2015]], "Assaf Schuster": [0, ["Virtual CPU validation", ["Nadav Amit", "Dan Tsafrir", "Assaf Schuster", "Ahmad Ayoub", "Eran Shlomo"], "https://doi.org/10.1145/2815400.2815420", 17, "sosp", 2015]], "Ahmad Ayoub": [0, ["Virtual CPU validation", ["Nadav Amit", "Dan Tsafrir", "Assaf Schuster", "Ahmad Ayoub", "Eran Shlomo"], "https://doi.org/10.1145/2815400.2815420", 17, "sosp", 2015]], "Eran Shlomo": [0, ["Virtual CPU validation", ["Nadav Amit", "Dan Tsafrir", "Assaf Schuster", "Ahmad Ayoub", "Eran Shlomo"], "https://doi.org/10.1145/2815400.2815420", 17, "sosp", 2015]], "Chunqiang Tang": [0, ["Holistic configuration management at Facebook", ["Chunqiang Tang", "Thawan Kooburat", "Pradeep Venkatachalam", "Akshay Chander", "Zhe Wen", "Aravind Narayanan", "Patrick Dowell", "Robert Karl"], "https://doi.org/10.1145/2815400.2815401", 16, "sosp", 2015]], "Thawan Kooburat": [0, ["Holistic configuration management at Facebook", ["Chunqiang Tang", "Thawan Kooburat", "Pradeep Venkatachalam", "Akshay Chander", "Zhe Wen", "Aravind Narayanan", "Patrick Dowell", "Robert Karl"], "https://doi.org/10.1145/2815400.2815401", 16, "sosp", 2015]], "Pradeep Venkatachalam": [0, ["Holistic configuration management at Facebook", ["Chunqiang Tang", "Thawan Kooburat", "Pradeep Venkatachalam", "Akshay Chander", "Zhe Wen", "Aravind Narayanan", "Patrick Dowell", "Robert Karl"], "https://doi.org/10.1145/2815400.2815401", 16, "sosp", 2015]], "Akshay Chander": [0, ["Holistic configuration management at Facebook", ["Chunqiang Tang", "Thawan Kooburat", "Pradeep Venkatachalam", "Akshay Chander", "Zhe Wen", "Aravind Narayanan", "Patrick Dowell", "Robert Karl"], "https://doi.org/10.1145/2815400.2815401", 16, "sosp", 2015]], "Zhe Wen": [0, ["Holistic configuration management at Facebook", ["Chunqiang Tang", "Thawan Kooburat", "Pradeep Venkatachalam", "Akshay Chander", "Zhe Wen", "Aravind Narayanan", "Patrick Dowell", "Robert Karl"], "https://doi.org/10.1145/2815400.2815401", 16, "sosp", 2015]], "Aravind Narayanan": [0, ["Holistic configuration management at Facebook", ["Chunqiang Tang", "Thawan Kooburat", "Pradeep Venkatachalam", "Akshay Chander", "Zhe Wen", "Aravind Narayanan", "Patrick Dowell", "Robert Karl"], "https://doi.org/10.1145/2815400.2815401", 16, "sosp", 2015]], "Patrick Dowell": [0, ["Holistic configuration management at Facebook", ["Chunqiang Tang", "Thawan Kooburat", "Pradeep Venkatachalam", "Akshay Chander", "Zhe Wen", "Aravind Narayanan", "Patrick Dowell", "Robert Karl"], "https://doi.org/10.1145/2815400.2815401", 16, "sosp", 2015]], "Robert Karl": [0, ["Holistic configuration management at Facebook", ["Chunqiang Tang", "Thawan Kooburat", "Pradeep Venkatachalam", "Akshay Chander", "Zhe Wen", "Aravind Narayanan", "Patrick Dowell", "Robert Karl"], "https://doi.org/10.1145/2815400.2815401", 16, "sosp", 2015]], "Baris Kasikci": [0, ["Failure sketching: a technique for automated root cause diagnosis of in-production failures", ["Baris Kasikci", "Benjamin Schubert", "Cristiano Pereira", "Gilles Pokam", "George Candea"], "https://doi.org/10.1145/2815400.2815412", 17, "sosp", 2015]], "Benjamin Schubert": [0, ["Failure sketching: a technique for automated root cause diagnosis of in-production failures", ["Baris Kasikci", "Benjamin Schubert", "Cristiano Pereira", "Gilles Pokam", "George Candea"], "https://doi.org/10.1145/2815400.2815412", 17, "sosp", 2015]], "Cristiano Pereira": [0, ["Failure sketching: a technique for automated root cause diagnosis of in-production failures", ["Baris Kasikci", "Benjamin Schubert", "Cristiano Pereira", "Gilles Pokam", "George Candea"], "https://doi.org/10.1145/2815400.2815412", 17, "sosp", 2015]], "Gilles Pokam": [0, ["Failure sketching: a technique for automated root cause diagnosis of in-production failures", ["Baris Kasikci", "Benjamin Schubert", "Cristiano Pereira", "Gilles Pokam", "George Candea"], "https://doi.org/10.1145/2815400.2815412", 17, "sosp", 2015]], "George Candea": [0, ["Failure sketching: a technique for automated root cause diagnosis of in-production failures", ["Baris Kasikci", "Benjamin Schubert", "Cristiano Pereira", "Gilles Pokam", "George Candea"], "https://doi.org/10.1145/2815400.2815412", 17, "sosp", 2015]], "Changwoo Min": [0.9984653294086456, ["Cross-checking semantic correctness: the case of finding file system bugs", ["Changwoo Min", "Sanidhya Kashyap", "Byoungyoung Lee", "Chengyu Song", "Taesoo Kim"], "https://doi.org/10.1145/2815400.2815422", 17, "sosp", 2015]], "Sanidhya Kashyap": [0, ["Cross-checking semantic correctness: the case of finding file system bugs", ["Changwoo Min", "Sanidhya Kashyap", "Byoungyoung Lee", "Chengyu Song", "Taesoo Kim"], "https://doi.org/10.1145/2815400.2815422", 17, "sosp", 2015]], "Byoungyoung Lee": [0.9999998211860657, ["Cross-checking semantic correctness: the case of finding file system bugs", ["Changwoo Min", "Sanidhya Kashyap", "Byoungyoung Lee", "Chengyu Song", "Taesoo Kim"], "https://doi.org/10.1145/2815400.2815422", 17, "sosp", 2015]], "Chengyu Song": [0.0018954530241899192, ["Cross-checking semantic correctness: the case of finding file system bugs", ["Changwoo Min", "Sanidhya Kashyap", "Byoungyoung Lee", "Chengyu Song", "Taesoo Kim"], "https://doi.org/10.1145/2815400.2815422", 17, "sosp", 2015]], "Taesoo Kim": [0.9839984327554703, ["Cross-checking semantic correctness: the case of finding file system bugs", ["Changwoo Min", "Sanidhya Kashyap", "Byoungyoung Lee", "Chengyu Song", "Taesoo Kim"], "https://doi.org/10.1145/2815400.2815422", 17, "sosp", 2015]], "Jonathan Mace": [0, ["Pivot tracing: dynamic causal monitoring for distributed systems", ["Jonathan Mace", "Ryan Roelke", "Rodrigo Fonseca"], "https://doi.org/10.1145/2815400.2815415", 16, "sosp", 2015]], "Ryan Roelke": [0, ["Pivot tracing: dynamic causal monitoring for distributed systems", ["Jonathan Mace", "Ryan Roelke", "Rodrigo Fonseca"], "https://doi.org/10.1145/2815400.2815415", 16, "sosp", 2015]], "Rodrigo Fonseca": [0, ["Pivot tracing: dynamic causal monitoring for distributed systems", ["Jonathan Mace", "Ryan Roelke", "Rodrigo Fonseca"], "https://doi.org/10.1145/2815400.2815415", 16, "sosp", 2015]], "Lu Fang": [0, ["Interruptible tasks: treating memory pressure as interrupts for highly scalable data-parallel programs", ["Lu Fang", "Khanh Nguyen", "Guoqing Harry Xu", "Brian Demsky", "Shan Lu"], "https://doi.org/10.1145/2815400.2815407", 16, "sosp", 2015]], "Khanh Nguyen": [0, ["Interruptible tasks: treating memory pressure as interrupts for highly scalable data-parallel programs", ["Lu Fang", "Khanh Nguyen", "Guoqing Harry Xu", "Brian Demsky", "Shan Lu"], "https://doi.org/10.1145/2815400.2815407", 16, "sosp", 2015]], "Guoqing Harry Xu": [0, ["Interruptible tasks: treating memory pressure as interrupts for highly scalable data-parallel programs", ["Lu Fang", "Khanh Nguyen", "Guoqing Harry Xu", "Brian Demsky", "Shan Lu"], "https://doi.org/10.1145/2815400.2815407", 16, "sosp", 2015]], "Brian Demsky": [0, ["Interruptible tasks: treating memory pressure as interrupts for highly scalable data-parallel programs", ["Lu Fang", "Khanh Nguyen", "Guoqing Harry Xu", "Brian Demsky", "Shan Lu"], "https://doi.org/10.1145/2815400.2815407", 16, "sosp", 2015]], "Shan Lu": [0, ["Interruptible tasks: treating memory pressure as interrupts for highly scalable data-parallel programs", ["Lu Fang", "Khanh Nguyen", "Guoqing Harry Xu", "Brian Demsky", "Shan Lu"], "https://doi.org/10.1145/2815400.2815407", 16, "sosp", 2015]], "Amitabha Roy": [0, ["Chaos: scale-out graph processing from secondary storage", ["Amitabha Roy", "Laurent Bindschaedler", "Jasmina Malicevic", "Willy Zwaenepoel"], "https://doi.org/10.1145/2815400.2815408", 15, "sosp", 2015]], "Laurent Bindschaedler": [0, ["Chaos: scale-out graph processing from secondary storage", ["Amitabha Roy", "Laurent Bindschaedler", "Jasmina Malicevic", "Willy Zwaenepoel"], "https://doi.org/10.1145/2815400.2815408", 15, "sosp", 2015]], "Jasmina Malicevic": [0, ["Chaos: scale-out graph processing from secondary storage", ["Amitabha Roy", "Laurent Bindschaedler", "Jasmina Malicevic", "Willy Zwaenepoel"], "https://doi.org/10.1145/2815400.2815408", 15, "sosp", 2015]], "Willy Zwaenepoel": [0, ["Chaos: scale-out graph processing from secondary storage", ["Amitabha Roy", "Laurent Bindschaedler", "Jasmina Malicevic", "Willy Zwaenepoel"], "https://doi.org/10.1145/2815400.2815408", 15, "sosp", 2015]], "Carlos H. C. Teixeira": [0, ["Arabesque: a system for distributed graph mining", ["Carlos H. C. Teixeira", "Alexandre J. Fonseca", "Marco Serafini", "Georgos Siganos", "Mohammed J. Zaki", "Ashraf Aboulnaga"], "https://doi.org/10.1145/2815400.2815410", 16, "sosp", 2015]], "Alexandre J. Fonseca": [0, ["Arabesque: a system for distributed graph mining", ["Carlos H. C. Teixeira", "Alexandre J. Fonseca", "Marco Serafini", "Georgos Siganos", "Mohammed J. Zaki", "Ashraf Aboulnaga"], "https://doi.org/10.1145/2815400.2815410", 16, "sosp", 2015]], "Marco Serafini": [0, ["Arabesque: a system for distributed graph mining", ["Carlos H. C. Teixeira", "Alexandre J. Fonseca", "Marco Serafini", "Georgos Siganos", "Mohammed J. Zaki", "Ashraf Aboulnaga"], "https://doi.org/10.1145/2815400.2815410", 16, "sosp", 2015]], "Georgos Siganos": [0, ["Arabesque: a system for distributed graph mining", ["Carlos H. C. Teixeira", "Alexandre J. Fonseca", "Marco Serafini", "Georgos Siganos", "Mohammed J. Zaki", "Ashraf Aboulnaga"], "https://doi.org/10.1145/2815400.2815410", 16, "sosp", 2015]], "Mohammed J. Zaki": [0, ["Arabesque: a system for distributed graph mining", ["Carlos H. C. Teixeira", "Alexandre J. Fonseca", "Marco Serafini", "Georgos Siganos", "Mohammed J. Zaki", "Ashraf Aboulnaga"], "https://doi.org/10.1145/2815400.2815410", 16, "sosp", 2015]], "Ashraf Aboulnaga": [0, ["Arabesque: a system for distributed graph mining", ["Carlos H. C. Teixeira", "Alexandre J. Fonseca", "Marco Serafini", "Georgos Siganos", "Mohammed J. Zaki", "Ashraf Aboulnaga"], "https://doi.org/10.1145/2815400.2815410", 16, "sosp", 2015]], "Chia-che Tsai": [0, ["How to get more value from your file system directory cache", ["Chia-che Tsai", "Yang Zhan", "Jayashree Reddy", "Yizheng Jiao", "Tao Zhang", "Donald E. Porter"], "https://doi.org/10.1145/2815400.2815405", 16, "sosp", 2015]], "Yang Zhan": [0, ["How to get more value from your file system directory cache", ["Chia-che Tsai", "Yang Zhan", "Jayashree Reddy", "Yizheng Jiao", "Tao Zhang", "Donald E. Porter"], "https://doi.org/10.1145/2815400.2815405", 16, "sosp", 2015]], "Jayashree Reddy": [0, ["How to get more value from your file system directory cache", ["Chia-che Tsai", "Yang Zhan", "Jayashree Reddy", "Yizheng Jiao", "Tao Zhang", "Donald E. Porter"], "https://doi.org/10.1145/2815400.2815405", 16, "sosp", 2015]], "Yizheng Jiao": [0, ["How to get more value from your file system directory cache", ["Chia-che Tsai", "Yang Zhan", "Jayashree Reddy", "Yizheng Jiao", "Tao Zhang", "Donald E. Porter"], "https://doi.org/10.1145/2815400.2815405", 16, "sosp", 2015]], "Tao Zhang": [0, ["How to get more value from your file system directory cache", ["Chia-che Tsai", "Yang Zhan", "Jayashree Reddy", "Yizheng Jiao", "Tao Zhang", "Donald E. Porter"], "https://doi.org/10.1145/2815400.2815405", 16, "sosp", 2015]], "Donald E. Porter": [0, ["How to get more value from your file system directory cache", ["Chia-che Tsai", "Yang Zhan", "Jayashree Reddy", "Yizheng Jiao", "Tao Zhang", "Donald E. Porter"], "https://doi.org/10.1145/2815400.2815405", 16, "sosp", 2015]], "George Amvrosiadis": [0, ["Opportunistic storage maintenance", ["George Amvrosiadis", "Angela Demke Brown", "Ashvin Goel"], "https://doi.org/10.1145/2815400.2815424", 17, "sosp", 2015]], "Angela Demke Brown": [0, ["Opportunistic storage maintenance", ["George Amvrosiadis", "Angela Demke Brown", "Ashvin Goel"], "https://doi.org/10.1145/2815400.2815424", 17, "sosp", 2015]], "Ashvin Goel": [0, ["Opportunistic storage maintenance", ["George Amvrosiadis", "Angela Demke Brown", "Ashvin Goel"], "https://doi.org/10.1145/2815400.2815424", 17, "sosp", 2015]], "Suli Yang": [0.5, ["Split-level I/O scheduling", ["Suli Yang", "Tyler Harter", "Nishant Agrawal", "Salini Selvaraj Kowsalya", "Anand Krishnamurthy", "Samer Al-Kiswany", "Rini T. Kaushik", "Andrea C. Arpaci-Dusseau", "Remzi H. Arpaci-Dusseau"], "https://doi.org/10.1145/2815400.2815421", 16, "sosp", 2015]], "Tyler Harter": [0, ["Split-level I/O scheduling", ["Suli Yang", "Tyler Harter", "Nishant Agrawal", "Salini Selvaraj Kowsalya", "Anand Krishnamurthy", "Samer Al-Kiswany", "Rini T. Kaushik", "Andrea C. Arpaci-Dusseau", "Remzi H. Arpaci-Dusseau"], "https://doi.org/10.1145/2815400.2815421", 16, "sosp", 2015]], "Nishant Agrawal": [0, ["Split-level I/O scheduling", ["Suli Yang", "Tyler Harter", "Nishant Agrawal", "Salini Selvaraj Kowsalya", "Anand Krishnamurthy", "Samer Al-Kiswany", "Rini T. Kaushik", "Andrea C. Arpaci-Dusseau", "Remzi H. Arpaci-Dusseau"], "https://doi.org/10.1145/2815400.2815421", 16, "sosp", 2015]], "Salini Selvaraj Kowsalya": [0, ["Split-level I/O scheduling", ["Suli Yang", "Tyler Harter", "Nishant Agrawal", "Salini Selvaraj Kowsalya", "Anand Krishnamurthy", "Samer Al-Kiswany", "Rini T. Kaushik", "Andrea C. Arpaci-Dusseau", "Remzi H. Arpaci-Dusseau"], "https://doi.org/10.1145/2815400.2815421", 16, "sosp", 2015]], "Anand Krishnamurthy": [0, ["Split-level I/O scheduling", ["Suli Yang", "Tyler Harter", "Nishant Agrawal", "Salini Selvaraj Kowsalya", "Anand Krishnamurthy", "Samer Al-Kiswany", "Rini T. Kaushik", "Andrea C. Arpaci-Dusseau", "Remzi H. Arpaci-Dusseau"], "https://doi.org/10.1145/2815400.2815421", 16, "sosp", 2015]], "Samer Al-Kiswany": [0, ["Split-level I/O scheduling", ["Suli Yang", "Tyler Harter", "Nishant Agrawal", "Salini Selvaraj Kowsalya", "Anand Krishnamurthy", "Samer Al-Kiswany", "Rini T. Kaushik", "Andrea C. Arpaci-Dusseau", "Remzi H. Arpaci-Dusseau"], "https://doi.org/10.1145/2815400.2815421", 16, "sosp", 2015]], "Rini T. Kaushik": [0, ["Split-level I/O scheduling", ["Suli Yang", "Tyler Harter", "Nishant Agrawal", "Salini Selvaraj Kowsalya", "Anand Krishnamurthy", "Samer Al-Kiswany", "Rini T. Kaushik", "Andrea C. Arpaci-Dusseau", "Remzi H. Arpaci-Dusseau"], "https://doi.org/10.1145/2815400.2815421", 16, "sosp", 2015]], "Andrea C. Arpaci-Dusseau": [0, ["Split-level I/O scheduling", ["Suli Yang", "Tyler Harter", "Nishant Agrawal", "Salini Selvaraj Kowsalya", "Anand Krishnamurthy", "Samer Al-Kiswany", "Rini T. Kaushik", "Andrea C. Arpaci-Dusseau", "Remzi H. Arpaci-Dusseau"], "https://doi.org/10.1145/2815400.2815421", 16, "sosp", 2015]], "Remzi H. Arpaci-Dusseau": [0, ["Split-level I/O scheduling", ["Suli Yang", "Tyler Harter", "Nishant Agrawal", "Salini Selvaraj Kowsalya", "Anand Krishnamurthy", "Samer Al-Kiswany", "Rini T. Kaushik", "Andrea C. Arpaci-Dusseau", "Remzi H. Arpaci-Dusseau"], "https://doi.org/10.1145/2815400.2815421", 16, "sosp", 2015]]}
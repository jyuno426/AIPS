{"Stephanie Forrest": [["The case for evolvable software", ["Stephanie Forrest"], "https://doi.org/10.1145/1869459.1869539", "oopsla", 2010]], "Benjamin C. Pierce": [["Art, science, and fear", ["Benjamin C. Pierce"], "https://doi.org/10.1145/1869459.1869540", "oopsla", 2010]], "Kenneth O. Stanley": [["To achieve our highest goals, we must be willing to abandon them", ["Kenneth O. Stanley"], "https://doi.org/10.1145/1869459.1869541", "oopsla", 2010]], "Michael Roberson": [["Efficient modular glass box software model checking", ["Michael Roberson", "Chandrasekhar Boyapati"], "https://doi.org/10.1145/1869459.1869461", "oopsla", 2010]], "Chandrasekhar Boyapati": [["Efficient modular glass box software model checking", ["Michael Roberson", "Chandrasekhar Boyapati"], "https://doi.org/10.1145/1869459.1869461", "oopsla", 2010]], "Stefan Hanenberg": [["An experiment about static and dynamic type systems: doubts about the positive impact of static type systems on development time", ["Stefan Hanenberg"], "https://doi.org/10.1145/1869459.1869462", "oopsla", 2010], ["Faith, hope, and love: an essay on software science's neglect of human factors", ["Stefan Hanenberg"], "https://doi.org/10.1145/1869459.1869536", "oopsla", 2010]], "Shachar Itzhaky": [["A simple inductive synthesis methodology and its applications", ["Shachar Itzhaky", "Sumit Gulwani", "Neil Immerman", "Mooly Sagiv"], "https://doi.org/10.1145/1869459.1869463", "oopsla", 2010]], "Sumit Gulwani": [["A simple inductive synthesis methodology and its applications", ["Shachar Itzhaky", "Sumit Gulwani", "Neil Immerman", "Mooly Sagiv"], "https://doi.org/10.1145/1869459.1869463", "oopsla", 2010]], "Neil Immerman": [["A simple inductive synthesis methodology and its applications", ["Shachar Itzhaky", "Sumit Gulwani", "Neil Immerman", "Mooly Sagiv"], "https://doi.org/10.1145/1869459.1869463", "oopsla", 2010], ["What can the GC compute efficiently?: a language for heap assertions at GC time", ["Christoph Reichenbach", "Neil Immerman", "Yannis Smaragdakis", "Edward Aftandilian", "Samuel Z. Guyer"], "https://doi.org/10.1145/1869459.1869482", "oopsla", 2010]], "Mooly Sagiv": [["A simple inductive synthesis methodology and its applications", ["Shachar Itzhaky", "Sumit Gulwani", "Neil Immerman", "Mooly Sagiv"], "https://doi.org/10.1145/1869459.1869463", "oopsla", 2010], ["A dynamic evaluation of the precision of static heap abstractions", ["Percy Liang", "Omer Tripp", "Mayur Naik", "Mooly Sagiv"], "https://doi.org/10.1145/1869459.1869494", "oopsla", 2010]], "Julien Mercadal": [["A domain-specific approach to architecturing error handling in pervasive computing", ["Julien Mercadal", "Quentin Enard", "Charles Consel", "Nicolas Loriant"], "https://doi.org/10.1145/1869459.1869465", "oopsla", 2010]], "Quentin Enard": [["A domain-specific approach to architecturing error handling in pervasive computing", ["Julien Mercadal", "Quentin Enard", "Charles Consel", "Nicolas Loriant"], "https://doi.org/10.1145/1869459.1869465", "oopsla", 2010]], "Charles Consel": [["A domain-specific approach to architecturing error handling in pervasive computing", ["Julien Mercadal", "Quentin Enard", "Charles Consel", "Nicolas Loriant"], "https://doi.org/10.1145/1869459.1869465", "oopsla", 2010]], "Nicolas Loriant": [["A domain-specific approach to architecturing error handling in pervasive computing", ["Julien Mercadal", "Quentin Enard", "Charles Consel", "Nicolas Loriant"], "https://doi.org/10.1145/1869459.1869465", "oopsla", 2010]], "Wei Li": [["G-Finder: routing programming questions closer to the experts", ["Wei Li", "Charles Zhang", "Songlin Hu"], "https://doi.org/10.1145/1869459.1869466", "oopsla", 2010]], "Charles Zhang": [["G-Finder: routing programming questions closer to the experts", ["Wei Li", "Charles Zhang", "Songlin Hu"], "https://doi.org/10.1145/1869459.1869466", "oopsla", 2010]], "Songlin Hu": [["G-Finder: routing programming questions closer to the experts", ["Wei Li", "Charles Zhang", "Songlin Hu"], "https://doi.org/10.1145/1869459.1869466", "oopsla", 2010]], "Rashina Hoda": [["Agility in context", ["Rashina Hoda", "Philippe Kruchten", "James Noble", "Stuart Marshall"], "https://doi.org/10.1145/1869459.1869467", "oopsla", 2010]], "Philippe Kruchten": [["Agility in context", ["Rashina Hoda", "Philippe Kruchten", "James Noble", "Stuart Marshall"], "https://doi.org/10.1145/1869459.1869467", "oopsla", 2010]], "James Noble": [["Agility in context", ["Rashina Hoda", "Philippe Kruchten", "James Noble", "Stuart Marshall"], "https://doi.org/10.1145/1869459.1869467", "oopsla", 2010], ["Tribal ownership", ["Nicholas Robert Cameron", "James Noble", "Tobias Wrigstad"], "https://doi.org/10.1145/1869459.1869510", "oopsla", 2010]], "Stuart Marshall": [["Agility in context", ["Rashina Hoda", "Philippe Kruchten", "James Noble", "Stuart Marshall"], "https://doi.org/10.1145/1869459.1869467", "oopsla", 2010]], "Joshua S. Auerbach": [["Lime: a Java-compatible and synthesizable language for heterogeneous architectures", ["Joshua S. Auerbach", "David F. Bacon", "Perry Cheng", "Rodric M. Rabbah"], "https://doi.org/10.1145/1869459.1869469", "oopsla", 2010]], "David F. Bacon": [["Lime: a Java-compatible and synthesizable language for heterogeneous architectures", ["Joshua S. Auerbach", "David F. Bacon", "Perry Cheng", "Rodric M. Rabbah"], "https://doi.org/10.1145/1869459.1869469", "oopsla", 2010]], "Perry Cheng": [["Lime: a Java-compatible and synthesizable language for heterogeneous architectures", ["Joshua S. Auerbach", "David F. Bacon", "Perry Cheng", "Rodric M. Rabbah"], "https://doi.org/10.1145/1869459.1869469", "oopsla", 2010]], "Rodric M. Rabbah": [["Lime: a Java-compatible and synthesizable language for heterogeneous architectures", ["Joshua S. Auerbach", "David F. Bacon", "Perry Cheng", "Rodric M. Rabbah"], "https://doi.org/10.1145/1869459.1869469", "oopsla", 2010]], "Stephen Kou": [["From OO to FPGA: fitting round objects into square hardware?", ["Stephen Kou", "Jens Palsberg"], "https://doi.org/10.1145/1869459.1869470", "oopsla", 2010]], "Jens Palsberg": [["From OO to FPGA: fitting round objects into square hardware?", ["Stephen Kou", "Jens Palsberg"], "https://doi.org/10.1145/1869459.1869470", "oopsla", 2010]], "Kai Tian": [["An input-centric paradigm for program dynamic optimizations", ["Kai Tian", "Yunlian Jiang", "Eddy Z. Zhang", "Xipeng Shen"], "https://doi.org/10.1145/1869459.1869471", "oopsla", 2010]], "Yunlian Jiang": [["An input-centric paradigm for program dynamic optimizations", ["Kai Tian", "Yunlian Jiang", "Eddy Z. Zhang", "Xipeng Shen"], "https://doi.org/10.1145/1869459.1869471", "oopsla", 2010]], "Eddy Z. Zhang": [["An input-centric paradigm for program dynamic optimizations", ["Kai Tian", "Yunlian Jiang", "Eddy Z. Zhang", "Xipeng Shen"], "https://doi.org/10.1145/1869459.1869471", "oopsla", 2010]], "Xipeng Shen": [["An input-centric paradigm for program dynamic optimizations", ["Kai Tian", "Yunlian Jiang", "Eddy Z. Zhang", "Xipeng Shen"], "https://doi.org/10.1145/1869459.1869471", "oopsla", 2010]], "Benjamin P. Wood": [["Composable specifications for structured shared-memory communication", ["Benjamin P. Wood", "Adrian Sampson", "Luis Ceze", "Dan Grossman"], "https://doi.org/10.1145/1869459.1869473", "oopsla", 2010]], "Adrian Sampson": [["Composable specifications for structured shared-memory communication", ["Benjamin P. Wood", "Adrian Sampson", "Luis Ceze", "Dan Grossman"], "https://doi.org/10.1145/1869459.1869473", "oopsla", 2010]], "Luis Ceze": [["Composable specifications for structured shared-memory communication", ["Benjamin P. Wood", "Adrian Sampson", "Luis Ceze", "Dan Grossman"], "https://doi.org/10.1145/1869459.1869473", "oopsla", 2010]], "Dan Grossman": [["Composable specifications for structured shared-memory communication", ["Benjamin P. Wood", "Adrian Sampson", "Luis Ceze", "Dan Grossman"], "https://doi.org/10.1145/1869459.1869473", "oopsla", 2010], ["Supporting dynamic, third-party code customizations in JavaScript using aspects", ["Benjamin S. Lerner", "Herman Venter", "Dan Grossman"], "https://doi.org/10.1145/1869459.1869490", "oopsla", 2010]], "Yao Shi": [["Do I use the wrong definition?: DeFuse: definition-use invariants for detecting concurrency and sequential bugs", ["Yao Shi", "Soyeon Park", "Zuoning Yin", "Shan Lu", "Yuanyuan Zhou", "Wenguang Chen", "Weimin Zheng"], "https://doi.org/10.1145/1869459.1869474", "oopsla", 2010]], "Soyeon Park": [["Do I use the wrong definition?: DeFuse: definition-use invariants for detecting concurrency and sequential bugs", ["Yao Shi", "Soyeon Park", "Zuoning Yin", "Shan Lu", "Yuanyuan Zhou", "Wenguang Chen", "Weimin Zheng"], "https://doi.org/10.1145/1869459.1869474", "oopsla", 2010]], "Zuoning Yin": [["Do I use the wrong definition?: DeFuse: definition-use invariants for detecting concurrency and sequential bugs", ["Yao Shi", "Soyeon Park", "Zuoning Yin", "Shan Lu", "Yuanyuan Zhou", "Wenguang Chen", "Weimin Zheng"], "https://doi.org/10.1145/1869459.1869474", "oopsla", 2010]], "Shan Lu": [["Do I use the wrong definition?: DeFuse: definition-use invariants for detecting concurrency and sequential bugs", ["Yao Shi", "Soyeon Park", "Zuoning Yin", "Shan Lu", "Yuanyuan Zhou", "Wenguang Chen", "Weimin Zheng"], "https://doi.org/10.1145/1869459.1869474", "oopsla", 2010], ["Instrumentation and sampling strategies for cooperative concurrency bug isolation", ["Guoliang Jin", "Aditya V. Thakur", "Ben Liblit", "Shan Lu"], "https://doi.org/10.1145/1869459.1869481", "oopsla", 2010]], "Yuanyuan Zhou": [["Do I use the wrong definition?: DeFuse: definition-use invariants for detecting concurrency and sequential bugs", ["Yao Shi", "Soyeon Park", "Zuoning Yin", "Shan Lu", "Yuanyuan Zhou", "Wenguang Chen", "Weimin Zheng"], "https://doi.org/10.1145/1869459.1869474", "oopsla", 2010]], "Wenguang Chen": [["Do I use the wrong definition?: DeFuse: definition-use invariants for detecting concurrency and sequential bugs", ["Yao Shi", "Soyeon Park", "Zuoning Yin", "Shan Lu", "Yuanyuan Zhou", "Wenguang Chen", "Weimin Zheng"], "https://doi.org/10.1145/1869459.1869474", "oopsla", 2010]], "Weimin Zheng": [["Do I use the wrong definition?: DeFuse: definition-use invariants for detecting concurrency and sequential bugs", ["Yao Shi", "Soyeon Park", "Zuoning Yin", "Shan Lu", "Yuanyuan Zhou", "Wenguang Chen", "Weimin Zheng"], "https://doi.org/10.1145/1869459.1869474", "oopsla", 2010]], "Mark Gabel": [["Scalable and systematic detection of buggy inconsistencies in source code", ["Mark Gabel", "Junfeng Yang", "Yuan Yu", "Moises Goldszmidt", "Zhendong Su"], "https://doi.org/10.1145/1869459.1869475", "oopsla", 2010]], "Junfeng Yang": [["Scalable and systematic detection of buggy inconsistencies in source code", ["Mark Gabel", "Junfeng Yang", "Yuan Yu", "Moises Goldszmidt", "Zhendong Su"], "https://doi.org/10.1145/1869459.1869475", "oopsla", 2010]], "Yuan Yu": [["Scalable and systematic detection of buggy inconsistencies in source code", ["Mark Gabel", "Junfeng Yang", "Yuan Yu", "Moises Goldszmidt", "Zhendong Su"], "https://doi.org/10.1145/1869459.1869475", "oopsla", 2010]], "Moises Goldszmidt": [["Scalable and systematic detection of buggy inconsistencies in source code", ["Mark Gabel", "Junfeng Yang", "Yuan Yu", "Moises Goldszmidt", "Zhendong Su"], "https://doi.org/10.1145/1869459.1869475", "oopsla", 2010]], "Zhendong Su": [["Scalable and systematic detection of buggy inconsistencies in source code", ["Mark Gabel", "Junfeng Yang", "Yuan Yu", "Moises Goldszmidt", "Zhendong Su"], "https://doi.org/10.1145/1869459.1869475", "oopsla", 2010]], "Kazunori Ogata": [["A study of Java's non-Java memory", ["Kazunori Ogata", "Dai Mikurube", "Kiyokuni Kawachiya", "Scott Trent", "Tamiya Onodera"], "https://doi.org/10.1145/1869459.1869477", "oopsla", 2010]], "Dai Mikurube": [["A study of Java's non-Java memory", ["Kazunori Ogata", "Dai Mikurube", "Kiyokuni Kawachiya", "Scott Trent", "Tamiya Onodera"], "https://doi.org/10.1145/1869459.1869477", "oopsla", 2010]], "Kiyokuni Kawachiya": [["A study of Java's non-Java memory", ["Kazunori Ogata", "Dai Mikurube", "Kiyokuni Kawachiya", "Scott Trent", "Tamiya Onodera"], "https://doi.org/10.1145/1869459.1869477", "oopsla", 2010]], "Scott Trent": [["A study of Java's non-Java memory", ["Kazunori Ogata", "Dai Mikurube", "Kiyokuni Kawachiya", "Scott Trent", "Tamiya Onodera"], "https://doi.org/10.1145/1869459.1869477", "oopsla", 2010]], "Tamiya Onodera": [["A study of Java's non-Java memory", ["Kazunori Ogata", "Dai Mikurube", "Kiyokuni Kawachiya", "Scott Trent", "Tamiya Onodera"], "https://doi.org/10.1145/1869459.1869477", "oopsla", 2010]], "Ross McIlroy": [["Hera-JVM: a runtime system for heterogeneous multi-core architectures", ["Ross McIlroy", "Joe Sventek"], "https://doi.org/10.1145/1869459.1869478", "oopsla", 2010]], "Joe Sventek": [["Hera-JVM: a runtime system for heterogeneous multi-core architectures", ["Ross McIlroy", "Joe Sventek"], "https://doi.org/10.1145/1869459.1869478", "oopsla", 2010]], "Michal Wegiel": [["Cross-language, type-safe, and transparent object sharing for co-located managed runtimes", ["Michal Wegiel", "Chandra Krintz"], "https://doi.org/10.1145/1869459.1869479", "oopsla", 2010]], "Chandra Krintz": [["Cross-language, type-safe, and transparent object sharing for co-located managed runtimes", ["Michal Wegiel", "Chandra Krintz"], "https://doi.org/10.1145/1869459.1869479", "oopsla", 2010]], "Guoliang Jin": [["Instrumentation and sampling strategies for cooperative concurrency bug isolation", ["Guoliang Jin", "Aditya V. Thakur", "Ben Liblit", "Shan Lu"], "https://doi.org/10.1145/1869459.1869481", "oopsla", 2010]], "Aditya V. Thakur": [["Instrumentation and sampling strategies for cooperative concurrency bug isolation", ["Guoliang Jin", "Aditya V. Thakur", "Ben Liblit", "Shan Lu"], "https://doi.org/10.1145/1869459.1869481", "oopsla", 2010]], "Ben Liblit": [["Instrumentation and sampling strategies for cooperative concurrency bug isolation", ["Guoliang Jin", "Aditya V. Thakur", "Ben Liblit", "Shan Lu"], "https://doi.org/10.1145/1869459.1869481", "oopsla", 2010]], "Christoph Reichenbach": [["What can the GC compute efficiently?: a language for heap assertions at GC time", ["Christoph Reichenbach", "Neil Immerman", "Yannis Smaragdakis", "Edward Aftandilian", "Samuel Z. Guyer"], "https://doi.org/10.1145/1869459.1869482", "oopsla", 2010]], "Yannis Smaragdakis": [["What can the GC compute efficiently?: a language for heap assertions at GC time", ["Christoph Reichenbach", "Neil Immerman", "Yannis Smaragdakis", "Edward Aftandilian", "Samuel Z. Guyer"], "https://doi.org/10.1145/1869459.1869482", "oopsla", 2010]], "Edward Aftandilian": [["What can the GC compute efficiently?: a language for heap assertions at GC time", ["Christoph Reichenbach", "Neil Immerman", "Yannis Smaragdakis", "Edward Aftandilian", "Samuel Z. Guyer"], "https://doi.org/10.1145/1869459.1869482", "oopsla", 2010]], "Samuel Z. Guyer": [["What can the GC compute efficiently?: a language for heap assertions at GC time", ["Christoph Reichenbach", "Neil Immerman", "Yannis Smaragdakis", "Edward Aftandilian", "Samuel Z. Guyer"], "https://doi.org/10.1145/1869459.1869482", "oopsla", 2010]], "Rahul Purandare": [["Monitor optimization via stutter-equivalent loop transformation", ["Rahul Purandare", "Matthew B. Dwyer", "Sebastian G. Elbaum"], "https://doi.org/10.1145/1869459.1869483", "oopsla", 2010]], "Matthew B. Dwyer": [["Monitor optimization via stutter-equivalent loop transformation", ["Rahul Purandare", "Matthew B. Dwyer", "Sebastian G. Elbaum"], "https://doi.org/10.1145/1869459.1869483", "oopsla", 2010]], "Sebastian G. Elbaum": [["Monitor optimization via stutter-equivalent loop transformation", ["Rahul Purandare", "Matthew B. Dwyer", "Sebastian G. Elbaum"], "https://doi.org/10.1145/1869459.1869483", "oopsla", 2010]], "Max Schafer": [["Specifying and implementing refactorings", ["Max Schafer", "Oege de Moor"], "https://doi.org/10.1145/1869459.1869485", "oopsla", 2010]], "Oege de Moor": [["Specifying and implementing refactorings", ["Max Schafer", "Oege de Moor"], "https://doi.org/10.1145/1869459.1869485", "oopsla", 2010]], "Hoan Anh Nguyen": [["A graph-based approach to API usage adaptation", ["Hoan Anh Nguyen", "Tung Thanh Nguyen", "Gary Wilson Jr.", "Anh Tuan Nguyen", "Miryung Kim", "Tien N. Nguyen"], "https://doi.org/10.1145/1869459.1869486", "oopsla", 2010]], "Tung Thanh Nguyen": [["A graph-based approach to API usage adaptation", ["Hoan Anh Nguyen", "Tung Thanh Nguyen", "Gary Wilson Jr.", "Anh Tuan Nguyen", "Miryung Kim", "Tien N. Nguyen"], "https://doi.org/10.1145/1869459.1869486", "oopsla", 2010]], "Gary Wilson Jr.": [["A graph-based approach to API usage adaptation", ["Hoan Anh Nguyen", "Tung Thanh Nguyen", "Gary Wilson Jr.", "Anh Tuan Nguyen", "Miryung Kim", "Tien N. Nguyen"], "https://doi.org/10.1145/1869459.1869486", "oopsla", 2010]], "Anh Tuan Nguyen": [["A graph-based approach to API usage adaptation", ["Hoan Anh Nguyen", "Tung Thanh Nguyen", "Gary Wilson Jr.", "Anh Tuan Nguyen", "Miryung Kim", "Tien N. Nguyen"], "https://doi.org/10.1145/1869459.1869486", "oopsla", 2010]], "Miryung Kim": [["A graph-based approach to API usage adaptation", ["Hoan Anh Nguyen", "Tung Thanh Nguyen", "Gary Wilson Jr.", "Anh Tuan Nguyen", "Miryung Kim", "Tien N. Nguyen"], "https://doi.org/10.1145/1869459.1869486", "oopsla", 2010]], "Tien N. Nguyen": [["A graph-based approach to API usage adaptation", ["Hoan Anh Nguyen", "Tung Thanh Nguyen", "Gary Wilson Jr.", "Anh Tuan Nguyen", "Miryung Kim", "Tien N. Nguyen"], "https://doi.org/10.1145/1869459.1869486", "oopsla", 2010]], "Stephen Kell": [["Component adaptation and assembly using interface relations", ["Stephen Kell"], "https://doi.org/10.1145/1869459.1869487", "oopsla", 2010]], "Bruno C. d. S. Oliveira": [["Type classes as objects and implicits", ["Bruno C. d. S. Oliveira", "Adriaan Moors", "Martin Odersky"], "https://doi.org/10.1145/1869459.1869489", "oopsla", 2010]], "Adriaan Moors": [["Type classes as objects and implicits", ["Bruno C. d. S. Oliveira", "Adriaan Moors", "Martin Odersky"], "https://doi.org/10.1145/1869459.1869489", "oopsla", 2010], ["Language virtualization for heterogeneous parallel computing", ["Hassan Chafi", "Zach DeVito", "Adriaan Moors", "Tiark Rompf", "Arvind K. Sujeeth", "Pat Hanrahan", "Martin Odersky", "Kunle Olukotun"], "https://doi.org/10.1145/1869459.1869527", "oopsla", 2010]], "Martin Odersky": [["Type classes as objects and implicits", ["Bruno C. d. S. Oliveira", "Adriaan Moors", "Martin Odersky"], "https://doi.org/10.1145/1869459.1869489", "oopsla", 2010], ["Language virtualization for heterogeneous parallel computing", ["Hassan Chafi", "Zach DeVito", "Adriaan Moors", "Tiark Rompf", "Arvind K. Sujeeth", "Pat Hanrahan", "Martin Odersky", "Kunle Olukotun"], "https://doi.org/10.1145/1869459.1869527", "oopsla", 2010]], "Benjamin S. Lerner": [["Supporting dynamic, third-party code customizations in JavaScript using aspects", ["Benjamin S. Lerner", "Herman Venter", "Dan Grossman"], "https://doi.org/10.1145/1869459.1869490", "oopsla", 2010]], "Herman Venter": [["Supporting dynamic, third-party code customizations in JavaScript using aspects", ["Benjamin S. Lerner", "Herman Venter", "Dan Grossman"], "https://doi.org/10.1145/1869459.1869490", "oopsla", 2010], ["SPUR: a trace-based JIT compiler for CIL", ["Michael Bebenita", "Florian Brandner", "Manuel Fahndrich", "Francesco Logozzo", "Wolfram Schulte", "Nikolai Tillmann", "Herman Venter"], "https://doi.org/10.1145/1869459.1869517", "oopsla", 2010]], "Charlotte Herzeel": [["Dynamic parallelization of recursive code: part 1: managing control flow interactions with the continuator", ["Charlotte Herzeel", "Pascal Costanza"], "https://doi.org/10.1145/1869459.1869491", "oopsla", 2010]], "Pascal Costanza": [["Dynamic parallelization of recursive code: part 1: managing control flow interactions with the continuator", ["Charlotte Herzeel", "Pascal Costanza"], "https://doi.org/10.1145/1869459.1869491", "oopsla", 2010]], "Isil Dillig": [["Symbolic heap abstraction with demand-driven axiomatization of memory invariants", ["Isil Dillig", "Thomas Dillig", "Alex Aiken"], "https://doi.org/10.1145/1869459.1869493", "oopsla", 2010]], "Thomas Dillig": [["Symbolic heap abstraction with demand-driven axiomatization of memory invariants", ["Isil Dillig", "Thomas Dillig", "Alex Aiken"], "https://doi.org/10.1145/1869459.1869493", "oopsla", 2010]], "Alex Aiken": [["Symbolic heap abstraction with demand-driven axiomatization of memory invariants", ["Isil Dillig", "Thomas Dillig", "Alex Aiken"], "https://doi.org/10.1145/1869459.1869493", "oopsla", 2010]], "Percy Liang": [["A dynamic evaluation of the precision of static heap abstractions", ["Percy Liang", "Omer Tripp", "Mayur Naik", "Mooly Sagiv"], "https://doi.org/10.1145/1869459.1869494", "oopsla", 2010]], "Omer Tripp": [["A dynamic evaluation of the precision of static heap abstractions", ["Percy Liang", "Omer Tripp", "Mayur Naik", "Mooly Sagiv"], "https://doi.org/10.1145/1869459.1869494", "oopsla", 2010]], "Mayur Naik": [["A dynamic evaluation of the precision of static heap abstractions", ["Percy Liang", "Omer Tripp", "Mayur Naik", "Mooly Sagiv"], "https://doi.org/10.1145/1869459.1869494", "oopsla", 2010]], "Mario Mendez-Lojo": [["Parallel inclusion-based points-to analysis", ["Mario Mendez-Lojo", "Augustine Mathew", "Keshav Pingali"], "https://doi.org/10.1145/1869459.1869495", "oopsla", 2010]], "Augustine Mathew": [["Parallel inclusion-based points-to analysis", ["Mario Mendez-Lojo", "Augustine Mathew", "Keshav Pingali"], "https://doi.org/10.1145/1869459.1869495", "oopsla", 2010]], "Keshav Pingali": [["Parallel inclusion-based points-to analysis", ["Mario Mendez-Lojo", "Augustine Mathew", "Keshav Pingali"], "https://doi.org/10.1145/1869459.1869495", "oopsla", 2010]], "Lennart C. L. Kats": [["The spoofax language workbench: rules for declarative specification of languages and IDEs", ["Lennart C. L. Kats", "Eelco Visser"], "https://doi.org/10.1145/1869459.1869497", "oopsla", 2010], ["Pure and declarative syntax definition: paradise lost and regained", ["Lennart C. L. Kats", "Eelco Visser", "Guido Wachsmuth"], "https://doi.org/10.1145/1869459.1869535", "oopsla", 2010]], "Eelco Visser": [["The spoofax language workbench: rules for declarative specification of languages and IDEs", ["Lennart C. L. Kats", "Eelco Visser"], "https://doi.org/10.1145/1869459.1869497", "oopsla", 2010], ["Pure and declarative syntax definition: paradise lost and regained", ["Lennart C. L. Kats", "Eelco Visser", "Guido Wachsmuth"], "https://doi.org/10.1145/1869459.1869535", "oopsla", 2010]], "Marco Servetto": [["MetaFJig: a meta-circular composition language for Java-like classes", ["Marco Servetto", "Elena Zucca"], "https://doi.org/10.1145/1869459.1869498", "oopsla", 2010]], "Elena Zucca": [["MetaFJig: a meta-circular composition language for Java-like classes", ["Marco Servetto", "Elena Zucca"], "https://doi.org/10.1145/1869459.1869498", "oopsla", 2010]], "Karl Klose": [["Modular logic metaprogramming", ["Karl Klose", "Klaus Ostermann"], "https://doi.org/10.1145/1869459.1869499", "oopsla", 2010]], "Klaus Ostermann": [["Modular logic metaprogramming", ["Karl Klose", "Klaus Ostermann"], "https://doi.org/10.1145/1869459.1869499", "oopsla", 2010]], "Stephan van Staden": [["Reasoning about multiple related abstractions with MultiStar", ["Stephan van Staden", "Cristiano Calcagno"], "https://doi.org/10.1145/1869459.1869501", "oopsla", 2010]], "Cristiano Calcagno": [["Reasoning about multiple related abstractions with MultiStar", ["Stephan van Staden", "Cristiano Calcagno"], "https://doi.org/10.1145/1869459.1869501", "oopsla", 2010]], "Xin Qi": [["Homogeneous family sharing", ["Xin Qi", "Andrew C. Myers"], "https://doi.org/10.1145/1869459.1869502", "oopsla", 2010]], "Andrew C. Myers": [["Homogeneous family sharing", ["Xin Qi", "Andrew C. Myers"], "https://doi.org/10.1145/1869459.1869502", "oopsla", 2010]], "Shigeru Chiba": [["Mostly modular compilation of crosscutting concerns by contextual predicate dispatch", ["Shigeru Chiba", "Atsushi Igarashi", "Salikh Zakirov"], "https://doi.org/10.1145/1869459.1869503", "oopsla", 2010]], "Atsushi Igarashi": [["Mostly modular compilation of crosscutting concerns by contextual predicate dispatch", ["Shigeru Chiba", "Atsushi Igarashi", "Salikh Zakirov"], "https://doi.org/10.1145/1869459.1869503", "oopsla", 2010]], "Salikh Zakirov": [["Mostly modular compilation of crosscutting concerns by contextual predicate dispatch", ["Shigeru Chiba", "Atsushi Igarashi", "Salikh Zakirov"], "https://doi.org/10.1145/1869459.1869503", "oopsla", 2010]], "Casey Klein": [["Random testing for higher-order, stateful programs", ["Casey Klein", "Matthew Flatt", "Robert Bruce Findler"], "https://doi.org/10.1145/1869459.1869505", "oopsla", 2010]], "Matthew Flatt": [["Random testing for higher-order, stateful programs", ["Casey Klein", "Matthew Flatt", "Robert Bruce Findler"], "https://doi.org/10.1145/1869459.1869505", "oopsla", 2010], ["Back to the futures: incremental parallelization of existing sequential runtime systems", ["James Swaine", "Kevin Tew", "Peter A. Dinda", "Robert Bruce Findler", "Matthew Flatt"], "https://doi.org/10.1145/1869459.1869507", "oopsla", 2010]], "Robert Bruce Findler": [["Random testing for higher-order, stateful programs", ["Casey Klein", "Matthew Flatt", "Robert Bruce Findler"], "https://doi.org/10.1145/1869459.1869505", "oopsla", 2010], ["Back to the futures: incremental parallelization of existing sequential runtime systems", ["James Swaine", "Kevin Tew", "Peter A. Dinda", "Robert Bruce Findler", "Matthew Flatt"], "https://doi.org/10.1145/1869459.1869507", "oopsla", 2010]], "Jay A. McCarthy": [["The two-state solution: native and serializable continuations accord", ["Jay A. McCarthy"], "https://doi.org/10.1145/1869459.1869506", "oopsla", 2010]], "James Swaine": [["Back to the futures: incremental parallelization of existing sequential runtime systems", ["James Swaine", "Kevin Tew", "Peter A. Dinda", "Robert Bruce Findler", "Matthew Flatt"], "https://doi.org/10.1145/1869459.1869507", "oopsla", 2010]], "Kevin Tew": [["Back to the futures: incremental parallelization of existing sequential runtime systems", ["James Swaine", "Kevin Tew", "Peter A. Dinda", "Robert Bruce Findler", "Matthew Flatt"], "https://doi.org/10.1145/1869459.1869507", "oopsla", 2010]], "Peter A. Dinda": [["Back to the futures: incremental parallelization of existing sequential runtime systems", ["James Swaine", "Kevin Tew", "Peter A. Dinda", "Robert Bruce Findler", "Matthew Flatt"], "https://doi.org/10.1145/1869459.1869507", "oopsla", 2010]], "Yoav Zibin": [["Ownership and immutability in generic Java", ["Yoav Zibin", "Alex Potanin", "Paley Li", "Mahmood Ali", "Michael D. Ernst"], "https://doi.org/10.1145/1869459.1869509", "oopsla", 2010]], "Alex Potanin": [["Ownership and immutability in generic Java", ["Yoav Zibin", "Alex Potanin", "Paley Li", "Mahmood Ali", "Michael D. Ernst"], "https://doi.org/10.1145/1869459.1869509", "oopsla", 2010]], "Paley Li": [["Ownership and immutability in generic Java", ["Yoav Zibin", "Alex Potanin", "Paley Li", "Mahmood Ali", "Michael D. Ernst"], "https://doi.org/10.1145/1869459.1869509", "oopsla", 2010]], "Mahmood Ali": [["Ownership and immutability in generic Java", ["Yoav Zibin", "Alex Potanin", "Paley Li", "Mahmood Ali", "Michael D. Ernst"], "https://doi.org/10.1145/1869459.1869509", "oopsla", 2010]], "Michael D. Ernst": [["Ownership and immutability in generic Java", ["Yoav Zibin", "Alex Potanin", "Paley Li", "Mahmood Ali", "Michael D. Ernst"], "https://doi.org/10.1145/1869459.1869509", "oopsla", 2010]], "Nicholas Robert Cameron": [["Tribal ownership", ["Nicholas Robert Cameron", "James Noble", "Tobias Wrigstad"], "https://doi.org/10.1145/1869459.1869510", "oopsla", 2010]], "Tobias Wrigstad": [["Tribal ownership", ["Nicholas Robert Cameron", "James Noble", "Tobias Wrigstad"], "https://doi.org/10.1145/1869459.1869510", "oopsla", 2010]], "Nicholas D. Matsakis": [["A time-aware type system for data-race protection and guaranteed initialization", ["Nicholas D. Matsakis", "Thomas R. Gross"], "https://doi.org/10.1145/1869459.1869511", "oopsla", 2010]], "Thomas R. Gross": [["A time-aware type system for data-race protection and guaranteed initialization", ["Nicholas D. Matsakis", "Thomas R. Gross"], "https://doi.org/10.1145/1869459.1869511", "oopsla", 2010]], "Gautam Upadhyaya": [["Automatic atomic region identification in shared memory SPMD programs", ["Gautam Upadhyaya", "Samuel P. Midkiff", "Vijay S. Pai"], "https://doi.org/10.1145/1869459.1869513", "oopsla", 2010]], "Samuel P. Midkiff": [["Automatic atomic region identification in shared memory SPMD programs", ["Gautam Upadhyaya", "Samuel P. Midkiff", "Vijay S. Pai"], "https://doi.org/10.1145/1869459.1869513", "oopsla", 2010]], "Vijay S. Pai": [["Automatic atomic region identification in shared memory SPMD programs", ["Gautam Upadhyaya", "Samuel P. Midkiff", "Vijay S. Pai"], "https://doi.org/10.1145/1869459.1869513", "oopsla", 2010]], "Aditya Kulkarni": [["Task types for pervasive atomicity", ["Aditya Kulkarni", "Yu David Liu", "Scott F. Smith"], "https://doi.org/10.1145/1869459.1869514", "oopsla", 2010]], "Yu David Liu": [["Task types for pervasive atomicity", ["Aditya Kulkarni", "Yu David Liu", "Scott F. Smith"], "https://doi.org/10.1145/1869459.1869514", "oopsla", 2010]], "Scott F. Smith": [["Task types for pervasive atomicity", ["Aditya Kulkarni", "Yu David Liu", "Scott F. Smith"], "https://doi.org/10.1145/1869459.1869514", "oopsla", 2010]], "Sebastian Burckhardt": [["Concurrent programming with revisions and isolation types", ["Sebastian Burckhardt", "Alexandro Baldassin", "Daan Leijen"], "https://doi.org/10.1145/1869459.1869515", "oopsla", 2010]], "Alexandro Baldassin": [["Concurrent programming with revisions and isolation types", ["Sebastian Burckhardt", "Alexandro Baldassin", "Daan Leijen"], "https://doi.org/10.1145/1869459.1869515", "oopsla", 2010]], "Daan Leijen": [["Concurrent programming with revisions and isolation types", ["Sebastian Burckhardt", "Alexandro Baldassin", "Daan Leijen"], "https://doi.org/10.1145/1869459.1869515", "oopsla", 2010]], "Michael Bebenita": [["SPUR: a trace-based JIT compiler for CIL", ["Michael Bebenita", "Florian Brandner", "Manuel Fahndrich", "Francesco Logozzo", "Wolfram Schulte", "Nikolai Tillmann", "Herman Venter"], "https://doi.org/10.1145/1869459.1869517", "oopsla", 2010]], "Florian Brandner": [["SPUR: a trace-based JIT compiler for CIL", ["Michael Bebenita", "Florian Brandner", "Manuel Fahndrich", "Francesco Logozzo", "Wolfram Schulte", "Nikolai Tillmann", "Herman Venter"], "https://doi.org/10.1145/1869459.1869517", "oopsla", 2010]], "Manuel Fahndrich": [["SPUR: a trace-based JIT compiler for CIL", ["Michael Bebenita", "Florian Brandner", "Manuel Fahndrich", "Francesco Logozzo", "Wolfram Schulte", "Nikolai Tillmann", "Herman Venter"], "https://doi.org/10.1145/1869459.1869517", "oopsla", 2010]], "Francesco Logozzo": [["SPUR: a trace-based JIT compiler for CIL", ["Michael Bebenita", "Florian Brandner", "Manuel Fahndrich", "Francesco Logozzo", "Wolfram Schulte", "Nikolai Tillmann", "Herman Venter"], "https://doi.org/10.1145/1869459.1869517", "oopsla", 2010]], "Wolfram Schulte": [["SPUR: a trace-based JIT compiler for CIL", ["Michael Bebenita", "Florian Brandner", "Manuel Fahndrich", "Francesco Logozzo", "Wolfram Schulte", "Nikolai Tillmann", "Herman Venter"], "https://doi.org/10.1145/1869459.1869517", "oopsla", 2010]], "Nikolai Tillmann": [["SPUR: a trace-based JIT compiler for CIL", ["Michael Bebenita", "Florian Brandner", "Manuel Fahndrich", "Francesco Logozzo", "Wolfram Schulte", "Nikolai Tillmann", "Herman Venter"], "https://doi.org/10.1145/1869459.1869517", "oopsla", 2010]], "Puneet Kapur": [["Refactoring references for library migration", ["Puneet Kapur", "Bradley Cossette", "Robert J. Walker"], "https://doi.org/10.1145/1869459.1869518", "oopsla", 2010]], "Bradley Cossette": [["Refactoring references for library migration", ["Puneet Kapur", "Bradley Cossette", "Robert J. Walker"], "https://doi.org/10.1145/1869459.1869518", "oopsla", 2010]], "Robert J. Walker": [["Refactoring references for library migration", ["Puneet Kapur", "Bradley Cossette", "Robert J. Walker"], "https://doi.org/10.1145/1869459.1869518", "oopsla", 2010]], "Erik R. Altman": [["Performance analysis of idle programs", ["Erik R. Altman", "Matthew Arnold", "Stephen Fink", "Nick Mitchell"], "https://doi.org/10.1145/1869459.1869519", "oopsla", 2010]], "Matthew Arnold": [["Performance analysis of idle programs", ["Erik R. Altman", "Matthew Arnold", "Stephen Fink", "Nick Mitchell"], "https://doi.org/10.1145/1869459.1869519", "oopsla", 2010]], "Stephen Fink": [["Performance analysis of idle programs", ["Erik R. Altman", "Matthew Arnold", "Stephen Fink", "Nick Mitchell"], "https://doi.org/10.1145/1869459.1869519", "oopsla", 2010]], "Nick Mitchell": [["Performance analysis of idle programs", ["Erik R. Altman", "Matthew Arnold", "Stephen Fink", "Nick Mitchell"], "https://doi.org/10.1145/1869459.1869519", "oopsla", 2010]], "Samuel Davis": [["Registration-based language abstractions", ["Samuel Davis", "Gregor Kiczales"], "https://doi.org/10.1145/1869459.1869521", "oopsla", 2010]], "Gregor Kiczales": [["Registration-based language abstractions", ["Samuel Davis", "Gregor Kiczales"], "https://doi.org/10.1145/1869459.1869521", "oopsla", 2010]], "Toon Verwaest": [["Pinocchio: bringing reflection to life with first-class interpreters", ["Toon Verwaest", "Camillo Bruni", "David Gurtner", "Adrian Lienhard", "Oscar Nierstrasz"], "https://doi.org/10.1145/1869459.1869522", "oopsla", 2010]], "Camillo Bruni": [["Pinocchio: bringing reflection to life with first-class interpreters", ["Toon Verwaest", "Camillo Bruni", "David Gurtner", "Adrian Lienhard", "Oscar Nierstrasz"], "https://doi.org/10.1145/1869459.1869522", "oopsla", 2010]], "David Gurtner": [["Pinocchio: bringing reflection to life with first-class interpreters", ["Toon Verwaest", "Camillo Bruni", "David Gurtner", "Adrian Lienhard", "Oscar Nierstrasz"], "https://doi.org/10.1145/1869459.1869522", "oopsla", 2010]], "Adrian Lienhard": [["Pinocchio: bringing reflection to life with first-class interpreters", ["Toon Verwaest", "Camillo Bruni", "David Gurtner", "Adrian Lienhard", "Oscar Nierstrasz"], "https://doi.org/10.1145/1869459.1869522", "oopsla", 2010]], "Oscar Nierstrasz": [["Pinocchio: bringing reflection to life with first-class interpreters", ["Toon Verwaest", "Camillo Bruni", "David Gurtner", "Adrian Lienhard", "Oscar Nierstrasz"], "https://doi.org/10.1145/1869459.1869522", "oopsla", 2010]], "Hridesh Rajan": [["Concurrency by modularity: design patterns, a case in point", ["Hridesh Rajan", "Steven M. Kautz", "Wayne Rowcliffe"], "https://doi.org/10.1145/1869459.1869523", "oopsla", 2010]], "Steven M. Kautz": [["Concurrency by modularity: design patterns, a case in point", ["Hridesh Rajan", "Steven M. Kautz", "Wayne Rowcliffe"], "https://doi.org/10.1145/1869459.1869523", "oopsla", 2010]], "Wayne Rowcliffe": [["Concurrency by modularity: design patterns, a case in point", ["Hridesh Rajan", "Steven M. Kautz", "Wayne Rowcliffe"], "https://doi.org/10.1145/1869459.1869523", "oopsla", 2010]], "Martin C. Rinard": [["Patterns and statistical analysis for understanding reduced resource computing", ["Martin C. Rinard", "Henry Hoffmann", "Sasa Misailovic", "Stelios Sidiroglou"], "https://doi.org/10.1145/1869459.1869525", "oopsla", 2010]], "Henry Hoffmann": [["Patterns and statistical analysis for understanding reduced resource computing", ["Martin C. Rinard", "Henry Hoffmann", "Sasa Misailovic", "Stelios Sidiroglou"], "https://doi.org/10.1145/1869459.1869525", "oopsla", 2010]], "Sasa Misailovic": [["Patterns and statistical analysis for understanding reduced resource computing", ["Martin C. Rinard", "Henry Hoffmann", "Sasa Misailovic", "Stelios Sidiroglou"], "https://doi.org/10.1145/1869459.1869525", "oopsla", 2010]], "Stelios Sidiroglou": [["Patterns and statistical analysis for understanding reduced resource computing", ["Martin C. Rinard", "Henry Hoffmann", "Sasa Misailovic", "Stelios Sidiroglou"], "https://doi.org/10.1145/1869459.1869525", "oopsla", 2010]], "Andrew Sorensen": [["Programming with time: cyber-physical programming with impromptu", ["Andrew Sorensen", "Henry J. Gardner"], "https://doi.org/10.1145/1869459.1869526", "oopsla", 2010]], "Henry J. Gardner": [["Programming with time: cyber-physical programming with impromptu", ["Andrew Sorensen", "Henry J. Gardner"], "https://doi.org/10.1145/1869459.1869526", "oopsla", 2010]], "Hassan Chafi": [["Language virtualization for heterogeneous parallel computing", ["Hassan Chafi", "Zach DeVito", "Adriaan Moors", "Tiark Rompf", "Arvind K. Sujeeth", "Pat Hanrahan", "Martin Odersky", "Kunle Olukotun"], "https://doi.org/10.1145/1869459.1869527", "oopsla", 2010]], "Zach DeVito": [["Language virtualization for heterogeneous parallel computing", ["Hassan Chafi", "Zach DeVito", "Adriaan Moors", "Tiark Rompf", "Arvind K. Sujeeth", "Pat Hanrahan", "Martin Odersky", "Kunle Olukotun"], "https://doi.org/10.1145/1869459.1869527", "oopsla", 2010]], "Tiark Rompf": [["Language virtualization for heterogeneous parallel computing", ["Hassan Chafi", "Zach DeVito", "Adriaan Moors", "Tiark Rompf", "Arvind K. Sujeeth", "Pat Hanrahan", "Martin Odersky", "Kunle Olukotun"], "https://doi.org/10.1145/1869459.1869527", "oopsla", 2010]], "Arvind K. Sujeeth": [["Language virtualization for heterogeneous parallel computing", ["Hassan Chafi", "Zach DeVito", "Adriaan Moors", "Tiark Rompf", "Arvind K. Sujeeth", "Pat Hanrahan", "Martin Odersky", "Kunle Olukotun"], "https://doi.org/10.1145/1869459.1869527", "oopsla", 2010]], "Pat Hanrahan": [["Language virtualization for heterogeneous parallel computing", ["Hassan Chafi", "Zach DeVito", "Adriaan Moors", "Tiark Rompf", "Arvind K. Sujeeth", "Pat Hanrahan", "Martin Odersky", "Kunle Olukotun"], "https://doi.org/10.1145/1869459.1869527", "oopsla", 2010]], "Kunle Olukotun": [["Language virtualization for heterogeneous parallel computing", ["Hassan Chafi", "Zach DeVito", "Adriaan Moors", "Tiark Rompf", "Arvind K. Sujeeth", "Pat Hanrahan", "Martin Odersky", "Kunle Olukotun"], "https://doi.org/10.1145/1869459.1869527", "oopsla", 2010]], "Harold Ossher": [["Flexible modeling tools for pre-requirements analysis: conceptual architecture and research challenges", ["Harold Ossher", "Rachel K. E. Bellamy", "Ian Simmonds", "David Amid", "Ateret Anaby-Tavor", "Matthew Callery", "Michael Desmond", "Jacqueline de Vries", "Amit Fisher", "Sophia Krasikov"], "https://doi.org/10.1145/1869459.1869529", "oopsla", 2010]], "Rachel K. E. Bellamy": [["Flexible modeling tools for pre-requirements analysis: conceptual architecture and research challenges", ["Harold Ossher", "Rachel K. E. Bellamy", "Ian Simmonds", "David Amid", "Ateret Anaby-Tavor", "Matthew Callery", "Michael Desmond", "Jacqueline de Vries", "Amit Fisher", "Sophia Krasikov"], "https://doi.org/10.1145/1869459.1869529", "oopsla", 2010]], "Ian Simmonds": [["Flexible modeling tools for pre-requirements analysis: conceptual architecture and research challenges", ["Harold Ossher", "Rachel K. E. Bellamy", "Ian Simmonds", "David Amid", "Ateret Anaby-Tavor", "Matthew Callery", "Michael Desmond", "Jacqueline de Vries", "Amit Fisher", "Sophia Krasikov"], "https://doi.org/10.1145/1869459.1869529", "oopsla", 2010]], "David Amid": [["Flexible modeling tools for pre-requirements analysis: conceptual architecture and research challenges", ["Harold Ossher", "Rachel K. E. Bellamy", "Ian Simmonds", "David Amid", "Ateret Anaby-Tavor", "Matthew Callery", "Michael Desmond", "Jacqueline de Vries", "Amit Fisher", "Sophia Krasikov"], "https://doi.org/10.1145/1869459.1869529", "oopsla", 2010]], "Ateret Anaby-Tavor": [["Flexible modeling tools for pre-requirements analysis: conceptual architecture and research challenges", ["Harold Ossher", "Rachel K. E. Bellamy", "Ian Simmonds", "David Amid", "Ateret Anaby-Tavor", "Matthew Callery", "Michael Desmond", "Jacqueline de Vries", "Amit Fisher", "Sophia Krasikov"], "https://doi.org/10.1145/1869459.1869529", "oopsla", 2010]], "Matthew Callery": [["Flexible modeling tools for pre-requirements analysis: conceptual architecture and research challenges", ["Harold Ossher", "Rachel K. E. Bellamy", "Ian Simmonds", "David Amid", "Ateret Anaby-Tavor", "Matthew Callery", "Michael Desmond", "Jacqueline de Vries", "Amit Fisher", "Sophia Krasikov"], "https://doi.org/10.1145/1869459.1869529", "oopsla", 2010]], "Michael Desmond": [["Flexible modeling tools for pre-requirements analysis: conceptual architecture and research challenges", ["Harold Ossher", "Rachel K. E. Bellamy", "Ian Simmonds", "David Amid", "Ateret Anaby-Tavor", "Matthew Callery", "Michael Desmond", "Jacqueline de Vries", "Amit Fisher", "Sophia Krasikov"], "https://doi.org/10.1145/1869459.1869529", "oopsla", 2010]], "Jacqueline de Vries": [["Flexible modeling tools for pre-requirements analysis: conceptual architecture and research challenges", ["Harold Ossher", "Rachel K. E. Bellamy", "Ian Simmonds", "David Amid", "Ateret Anaby-Tavor", "Matthew Callery", "Michael Desmond", "Jacqueline de Vries", "Amit Fisher", "Sophia Krasikov"], "https://doi.org/10.1145/1869459.1869529", "oopsla", 2010]], "Amit Fisher": [["Flexible modeling tools for pre-requirements analysis: conceptual architecture and research challenges", ["Harold Ossher", "Rachel K. E. Bellamy", "Ian Simmonds", "David Amid", "Ateret Anaby-Tavor", "Matthew Callery", "Michael Desmond", "Jacqueline de Vries", "Amit Fisher", "Sophia Krasikov"], "https://doi.org/10.1145/1869459.1869529", "oopsla", 2010]], "Sophia Krasikov": [["Flexible modeling tools for pre-requirements analysis: conceptual architecture and research challenges", ["Harold Ossher", "Rachel K. E. Bellamy", "Ian Simmonds", "David Amid", "Ateret Anaby-Tavor", "Matthew Callery", "Michael Desmond", "Jacqueline de Vries", "Amit Fisher", "Sophia Krasikov"], "https://doi.org/10.1145/1869459.1869529", "oopsla", 2010]], "Tudor Dumitras": [["To upgrade or not to upgrade: impact of online upgrades across multiple administrative domains", ["Tudor Dumitras", "Priya Narasimhan", "Eli Tilevich"], "https://doi.org/10.1145/1869459.1869530", "oopsla", 2010]], "Priya Narasimhan": [["To upgrade or not to upgrade: impact of online upgrades across multiple administrative domains", ["Tudor Dumitras", "Priya Narasimhan", "Eli Tilevich"], "https://doi.org/10.1145/1869459.1869530", "oopsla", 2010]], "Eli Tilevich": [["To upgrade or not to upgrade: impact of online upgrades across multiple administrative domains", ["Tudor Dumitras", "Priya Narasimhan", "Eli Tilevich"], "https://doi.org/10.1145/1869459.1869530", "oopsla", 2010]], "Kenneth C. Arnold": [["Managing ambiguity in programming by finding unambiguous examples", ["Kenneth C. Arnold", "Henry Lieberman"], "https://doi.org/10.1145/1869459.1869531", "oopsla", 2010]], "Henry Lieberman": [["Managing ambiguity in programming by finding unambiguous examples", ["Kenneth C. Arnold", "Henry Lieberman"], "https://doi.org/10.1145/1869459.1869531", "oopsla", 2010]], "Richard P. Gabriel": [["Better science through art", ["Richard P. Gabriel", "Kevin J. Sullivan"], "https://doi.org/10.1145/1869459.1869533", "oopsla", 2010]], "Kevin J. Sullivan": [["Better science through art", ["Richard P. Gabriel", "Kevin J. Sullivan"], "https://doi.org/10.1145/1869459.1869533", "oopsla", 2010]], "Jenny Quillien": [["Rubber ducks, nightmares, and unsaturated predicates: proto-scientific schemata are good for agile", ["Jenny Quillien", "Dave West"], "https://doi.org/10.1145/1869459.1869534", "oopsla", 2010]], "Dave West": [["Rubber ducks, nightmares, and unsaturated predicates: proto-scientific schemata are good for agile", ["Jenny Quillien", "Dave West"], "https://doi.org/10.1145/1869459.1869534", "oopsla", 2010]], "Guido Wachsmuth": [["Pure and declarative syntax definition: paradise lost and regained", ["Lennart C. L. Kats", "Eelco Visser", "Guido Wachsmuth"], "https://doi.org/10.1145/1869459.1869535", "oopsla", 2010]], "Paul Adamczyk": [["The Tower of Babel did not fail", ["Paul Adamczyk", "Munawar Hafiz"], "https://doi.org/10.1145/1869459.1869537", "oopsla", 2010]], "Munawar Hafiz": [["The Tower of Babel did not fail", ["Paul Adamczyk", "Munawar Hafiz"], "https://doi.org/10.1145/1869459.1869537", "oopsla", 2010]]}
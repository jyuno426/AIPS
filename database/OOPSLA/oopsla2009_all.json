{"Leo A. Meyerovich": [["Flapjax: a programming language for Ajax applications", ["Leo A. Meyerovich", "Arjun Guha", "Jacob P. Baskin", "Gregory H. Cooper", "Michael Greenberg", "Aleks Bromfield", "Shriram Krishnamurthi"], "https://doi.org/10.1145/1640089.1640091", "oopsla", 2009]], "Arjun Guha": [["Flapjax: a programming language for Ajax applications", ["Leo A. Meyerovich", "Arjun Guha", "Jacob P. Baskin", "Gregory H. Cooper", "Michael Greenberg", "Aleks Bromfield", "Shriram Krishnamurthi"], "https://doi.org/10.1145/1640089.1640091", "oopsla", 2009]], "Jacob P. Baskin": [["Flapjax: a programming language for Ajax applications", ["Leo A. Meyerovich", "Arjun Guha", "Jacob P. Baskin", "Gregory H. Cooper", "Michael Greenberg", "Aleks Bromfield", "Shriram Krishnamurthi"], "https://doi.org/10.1145/1640089.1640091", "oopsla", 2009]], "Gregory H. Cooper": [["Flapjax: a programming language for Ajax applications", ["Leo A. Meyerovich", "Arjun Guha", "Jacob P. Baskin", "Gregory H. Cooper", "Michael Greenberg", "Aleks Bromfield", "Shriram Krishnamurthi"], "https://doi.org/10.1145/1640089.1640091", "oopsla", 2009]], "Michael Greenberg": [["Flapjax: a programming language for Ajax applications", ["Leo A. Meyerovich", "Arjun Guha", "Jacob P. Baskin", "Gregory H. Cooper", "Michael Greenberg", "Aleks Bromfield", "Shriram Krishnamurthi"], "https://doi.org/10.1145/1640089.1640091", "oopsla", 2009]], "Aleks Bromfield": [["Flapjax: a programming language for Ajax applications", ["Leo A. Meyerovich", "Arjun Guha", "Jacob P. Baskin", "Gregory H. Cooper", "Michael Greenberg", "Aleks Bromfield", "Shriram Krishnamurthi"], "https://doi.org/10.1145/1640089.1640091", "oopsla", 2009]], "Shriram Krishnamurthi": [["Flapjax: a programming language for Ajax applications", ["Leo A. Meyerovich", "Arjun Guha", "Jacob P. Baskin", "Gregory H. Cooper", "Michael Greenberg", "Aleks Bromfield", "Shriram Krishnamurthi"], "https://doi.org/10.1145/1640089.1640091", "oopsla", 2009]], "Donna Malayeri": [["CZ: multiple inheritance without diamonds", ["Donna Malayeri", "Jonathan Aldrich"], "https://doi.org/10.1145/1640089.1640092", "oopsla", 2009]], "Jonathan Aldrich": [["CZ: multiple inheritance without diamonds", ["Donna Malayeri", "Jonathan Aldrich"], "https://doi.org/10.1145/1640089.1640092", "oopsla", 2009], ["Static extraction and conformance analysis of hierarchical runtime architectural structure using annotations", ["Marwan Abi-Antoun", "Jonathan Aldrich"], "https://doi.org/10.1145/1640089.1640113", "oopsla", 2009]], "Roland Ducournau": [["Empirical assessment of object-oriented implementations with multiple inheritance and static typing", ["Roland Ducournau", "Floreal Morandat", "Jean Privat"], "https://doi.org/10.1145/1640089.1640093", "oopsla", 2009]], "Floreal Morandat": [["Empirical assessment of object-oriented implementations with multiple inheritance and static typing", ["Roland Ducournau", "Floreal Morandat", "Jean Privat"], "https://doi.org/10.1145/1640089.1640093", "oopsla", 2009]], "Jean Privat": [["Empirical assessment of object-oriented implementations with multiple inheritance and static typing", ["Roland Ducournau", "Floreal Morandat", "Jean Privat"], "https://doi.org/10.1145/1640089.1640093", "oopsla", 2009]], "Roberto Lublinerman": [["Parallel programming with object assemblies", ["Roberto Lublinerman", "Swarat Chaudhuri", "Pavol Cerny"], "https://doi.org/10.1145/1640089.1640095", "oopsla", 2009]], "Swarat Chaudhuri": [["Parallel programming with object assemblies", ["Roberto Lublinerman", "Swarat Chaudhuri", "Pavol Cerny"], "https://doi.org/10.1145/1640089.1640095", "oopsla", 2009]], "Pavol Cerny": [["Parallel programming with object assemblies", ["Roberto Lublinerman", "Swarat Chaudhuri", "Pavol Cerny"], "https://doi.org/10.1145/1640089.1640095", "oopsla", 2009]], "Emery D. Berger": [["Grace: safe multithreaded programming for C/C++", ["Emery D. Berger", "Ting Yang", "Tongping Liu", "Gene Novark"], "https://doi.org/10.1145/1640089.1640096", "oopsla", 2009]], "Ting Yang": [["Grace: safe multithreaded programming for C/C++", ["Emery D. Berger", "Ting Yang", "Tongping Liu", "Gene Novark"], "https://doi.org/10.1145/1640089.1640096", "oopsla", 2009]], "Tongping Liu": [["Grace: safe multithreaded programming for C/C++", ["Emery D. Berger", "Ting Yang", "Tongping Liu", "Gene Novark"], "https://doi.org/10.1145/1640089.1640096", "oopsla", 2009]], "Gene Novark": [["Grace: safe multithreaded programming for C/C++", ["Emery D. Berger", "Ting Yang", "Tongping Liu", "Gene Novark"], "https://doi.org/10.1145/1640089.1640096", "oopsla", 2009]], "Robert L. Bocchino Jr.": [["A type and effect system for deterministic parallel Java", ["Robert L. Bocchino Jr.", "Vikram S. Adve", "Danny Dig", "Sarita V. Adve", "Stephen Heumann", "Rakesh Komuravelli", "Jeffrey Overbey", "Patrick Simmons", "Hyojin Sung", "Mohsen Vakilian"], "https://doi.org/10.1145/1640089.1640097", "oopsla", 2009]], "Vikram S. Adve": [["A type and effect system for deterministic parallel Java", ["Robert L. Bocchino Jr.", "Vikram S. Adve", "Danny Dig", "Sarita V. Adve", "Stephen Heumann", "Rakesh Komuravelli", "Jeffrey Overbey", "Patrick Simmons", "Hyojin Sung", "Mohsen Vakilian"], "https://doi.org/10.1145/1640089.1640097", "oopsla", 2009]], "Danny Dig": [["A type and effect system for deterministic parallel Java", ["Robert L. Bocchino Jr.", "Vikram S. Adve", "Danny Dig", "Sarita V. Adve", "Stephen Heumann", "Rakesh Komuravelli", "Jeffrey Overbey", "Patrick Simmons", "Hyojin Sung", "Mohsen Vakilian"], "https://doi.org/10.1145/1640089.1640097", "oopsla", 2009]], "Sarita V. Adve": [["A type and effect system for deterministic parallel Java", ["Robert L. Bocchino Jr.", "Vikram S. Adve", "Danny Dig", "Sarita V. Adve", "Stephen Heumann", "Rakesh Komuravelli", "Jeffrey Overbey", "Patrick Simmons", "Hyojin Sung", "Mohsen Vakilian"], "https://doi.org/10.1145/1640089.1640097", "oopsla", 2009]], "Stephen Heumann": [["A type and effect system for deterministic parallel Java", ["Robert L. Bocchino Jr.", "Vikram S. Adve", "Danny Dig", "Sarita V. Adve", "Stephen Heumann", "Rakesh Komuravelli", "Jeffrey Overbey", "Patrick Simmons", "Hyojin Sung", "Mohsen Vakilian"], "https://doi.org/10.1145/1640089.1640097", "oopsla", 2009]], "Rakesh Komuravelli": [["A type and effect system for deterministic parallel Java", ["Robert L. Bocchino Jr.", "Vikram S. Adve", "Danny Dig", "Sarita V. Adve", "Stephen Heumann", "Rakesh Komuravelli", "Jeffrey Overbey", "Patrick Simmons", "Hyojin Sung", "Mohsen Vakilian"], "https://doi.org/10.1145/1640089.1640097", "oopsla", 2009]], "Jeffrey Overbey": [["A type and effect system for deterministic parallel Java", ["Robert L. Bocchino Jr.", "Vikram S. Adve", "Danny Dig", "Sarita V. Adve", "Stephen Heumann", "Rakesh Komuravelli", "Jeffrey Overbey", "Patrick Simmons", "Hyojin Sung", "Mohsen Vakilian"], "https://doi.org/10.1145/1640089.1640097", "oopsla", 2009]], "Patrick Simmons": [["A type and effect system for deterministic parallel Java", ["Robert L. Bocchino Jr.", "Vikram S. Adve", "Danny Dig", "Sarita V. Adve", "Stephen Heumann", "Rakesh Komuravelli", "Jeffrey Overbey", "Patrick Simmons", "Hyojin Sung", "Mohsen Vakilian"], "https://doi.org/10.1145/1640089.1640097", "oopsla", 2009]], "Hyojin Sung": [["A type and effect system for deterministic parallel Java", ["Robert L. Bocchino Jr.", "Vikram S. Adve", "Danny Dig", "Sarita V. Adve", "Stephen Heumann", "Rakesh Komuravelli", "Jeffrey Overbey", "Patrick Simmons", "Hyojin Sung", "Mohsen Vakilian"], "https://doi.org/10.1145/1640089.1640097", "oopsla", 2009]], "Mohsen Vakilian": [["A type and effect system for deterministic parallel Java", ["Robert L. Bocchino Jr.", "Vikram S. Adve", "Danny Dig", "Sarita V. Adve", "Stephen Heumann", "Rakesh Komuravelli", "Jeffrey Overbey", "Patrick Simmons", "Hyojin Sung", "Mohsen Vakilian"], "https://doi.org/10.1145/1640089.1640097", "oopsla", 2009]], "Bard Bloom": [["Thorn: robust, concurrent, extensible scripting on the JVM", ["Bard Bloom", "John Field", "Nathaniel Nystrom", "Johan Ostlund", "Gregor Richards", "Rok Strnisa", "Jan Vitek", "Tobias Wrigstad"], "https://doi.org/10.1145/1640089.1640098", "oopsla", 2009]], "John Field": [["Thorn: robust, concurrent, extensible scripting on the JVM", ["Bard Bloom", "John Field", "Nathaniel Nystrom", "Johan Ostlund", "Gregor Richards", "Rok Strnisa", "Jan Vitek", "Tobias Wrigstad"], "https://doi.org/10.1145/1640089.1640098", "oopsla", 2009]], "Nathaniel Nystrom": [["Thorn: robust, concurrent, extensible scripting on the JVM", ["Bard Bloom", "John Field", "Nathaniel Nystrom", "Johan Ostlund", "Gregor Richards", "Rok Strnisa", "Jan Vitek", "Tobias Wrigstad"], "https://doi.org/10.1145/1640089.1640098", "oopsla", 2009]], "Johan Ostlund": [["Thorn: robust, concurrent, extensible scripting on the JVM", ["Bard Bloom", "John Field", "Nathaniel Nystrom", "Johan Ostlund", "Gregor Richards", "Rok Strnisa", "Jan Vitek", "Tobias Wrigstad"], "https://doi.org/10.1145/1640089.1640098", "oopsla", 2009]], "Gregor Richards": [["Thorn: robust, concurrent, extensible scripting on the JVM", ["Bard Bloom", "John Field", "Nathaniel Nystrom", "Johan Ostlund", "Gregor Richards", "Rok Strnisa", "Jan Vitek", "Tobias Wrigstad"], "https://doi.org/10.1145/1640089.1640098", "oopsla", 2009]], "Rok Strnisa": [["Thorn: robust, concurrent, extensible scripting on the JVM", ["Bard Bloom", "John Field", "Nathaniel Nystrom", "Johan Ostlund", "Gregor Richards", "Rok Strnisa", "Jan Vitek", "Tobias Wrigstad"], "https://doi.org/10.1145/1640089.1640098", "oopsla", 2009]], "Jan Vitek": [["Thorn: robust, concurrent, extensible scripting on the JVM", ["Bard Bloom", "John Field", "Nathaniel Nystrom", "Johan Ostlund", "Gregor Richards", "Rok Strnisa", "Jan Vitek", "Tobias Wrigstad"], "https://doi.org/10.1145/1640089.1640098", "oopsla", 2009]], "Tobias Wrigstad": [["Thorn: robust, concurrent, extensible scripting on the JVM", ["Bard Bloom", "John Field", "Nathaniel Nystrom", "Johan Ostlund", "Gregor Richards", "Rok Strnisa", "Jan Vitek", "Tobias Wrigstad"], "https://doi.org/10.1145/1640089.1640098", "oopsla", 2009]], "Hiroshi Inoue": [["How a Java VM can get more from a hardware performance monitor", ["Hiroshi Inoue", "Toshio Nakatani"], "https://doi.org/10.1145/1640089.1640100", "oopsla", 2009]], "Toshio Nakatani": [["How a Java VM can get more from a hardware performance monitor", ["Hiroshi Inoue", "Toshio Nakatani"], "https://doi.org/10.1145/1640089.1640100", "oopsla", 2009]], "Jungwoo Ha": [["A concurrent dynamic analysis framework for multicore hardware", ["Jungwoo Ha", "Matthew Arnold", "Stephen M. Blackburn", "Kathryn S. McKinley"], "https://doi.org/10.1145/1640089.1640101", "oopsla", 2009]], "Matthew Arnold": [["A concurrent dynamic analysis framework for multicore hardware", ["Jungwoo Ha", "Matthew Arnold", "Stephen M. Blackburn", "Kathryn S. McKinley"], "https://doi.org/10.1145/1640089.1640101", "oopsla", 2009]], "Stephen M. Blackburn": [["A concurrent dynamic analysis framework for multicore hardware", ["Jungwoo Ha", "Matthew Arnold", "Stephen M. Blackburn", "Kathryn S. McKinley"], "https://doi.org/10.1145/1640089.1640101", "oopsla", 2009]], "Kathryn S. McKinley": [["A concurrent dynamic analysis framework for multicore hardware", ["Jungwoo Ha", "Matthew Arnold", "Stephen M. Blackburn", "Kathryn S. McKinley"], "https://doi.org/10.1145/1640089.1640101", "oopsla", 2009], ["Debug all your code: portable mixed-environment debugging", ["Byeongcheol Lee", "Martin Hirzel", "Robert Grimm", "Kathryn S. McKinley"], "https://doi.org/10.1145/1640089.1640105", "oopsla", 2009]], "Todd Mytkowicz": [["Inferred call path profiling", ["Todd Mytkowicz", "Devin Coughlin", "Amer Diwan"], "https://doi.org/10.1145/1640089.1640102", "oopsla", 2009]], "Devin Coughlin": [["Inferred call path profiling", ["Todd Mytkowicz", "Devin Coughlin", "Amer Diwan"], "https://doi.org/10.1145/1640089.1640102", "oopsla", 2009]], "Amer Diwan": [["Inferred call path profiling", ["Todd Mytkowicz", "Devin Coughlin", "Amer Diwan"], "https://doi.org/10.1145/1640089.1640102", "oopsla", 2009], ["Optimizing programs with intended semantics", ["Daniel von Dincklage", "Amer Diwan"], "https://doi.org/10.1145/1640089.1640120", "oopsla", 2009]], "Philippe Charles": [["Accelerating the creation of customized, language-Specific IDEs in Eclipse", ["Philippe Charles", "Robert M. Fuhrer", "Stanley M. Sutton Jr.", "Evelyn Duesterwald", "Jurgen J. Vinju"], "https://doi.org/10.1145/1640089.1640104", "oopsla", 2009]], "Robert M. Fuhrer": [["Accelerating the creation of customized, language-Specific IDEs in Eclipse", ["Philippe Charles", "Robert M. Fuhrer", "Stanley M. Sutton Jr.", "Evelyn Duesterwald", "Jurgen J. Vinju"], "https://doi.org/10.1145/1640089.1640104", "oopsla", 2009]], "Stanley M. Sutton Jr.": [["Accelerating the creation of customized, language-Specific IDEs in Eclipse", ["Philippe Charles", "Robert M. Fuhrer", "Stanley M. Sutton Jr.", "Evelyn Duesterwald", "Jurgen J. Vinju"], "https://doi.org/10.1145/1640089.1640104", "oopsla", 2009]], "Evelyn Duesterwald": [["Accelerating the creation of customized, language-Specific IDEs in Eclipse", ["Philippe Charles", "Robert M. Fuhrer", "Stanley M. Sutton Jr.", "Evelyn Duesterwald", "Jurgen J. Vinju"], "https://doi.org/10.1145/1640089.1640104", "oopsla", 2009]], "Jurgen J. Vinju": [["Accelerating the creation of customized, language-Specific IDEs in Eclipse", ["Philippe Charles", "Robert M. Fuhrer", "Stanley M. Sutton Jr.", "Evelyn Duesterwald", "Jurgen J. Vinju"], "https://doi.org/10.1145/1640089.1640104", "oopsla", 2009]], "Byeongcheol Lee": [["Debug all your code: portable mixed-environment debugging", ["Byeongcheol Lee", "Martin Hirzel", "Robert Grimm", "Kathryn S. McKinley"], "https://doi.org/10.1145/1640089.1640105", "oopsla", 2009]], "Martin Hirzel": [["Debug all your code: portable mixed-environment debugging", ["Byeongcheol Lee", "Martin Hirzel", "Robert Grimm", "Kathryn S. McKinley"], "https://doi.org/10.1145/1640089.1640105", "oopsla", 2009]], "Robert Grimm": [["Debug all your code: portable mixed-environment debugging", ["Byeongcheol Lee", "Martin Hirzel", "Robert Grimm", "Kathryn S. McKinley"], "https://doi.org/10.1145/1640089.1640105", "oopsla", 2009]], "Daan Leijen": [["The design of a task parallel library", ["Daan Leijen", "Wolfram Schulte", "Sebastian Burckhardt"], "https://doi.org/10.1145/1640089.1640106", "oopsla", 2009]], "Wolfram Schulte": [["The design of a task parallel library", ["Daan Leijen", "Wolfram Schulte", "Sebastian Burckhardt"], "https://doi.org/10.1145/1640089.1640106", "oopsla", 2009]], "Sebastian Burckhardt": [["The design of a task parallel library", ["Daan Leijen", "Wolfram Schulte", "Sebastian Burckhardt"], "https://doi.org/10.1145/1640089.1640106", "oopsla", 2009]], "Martin Bravenboer": [["Strictly declarative specification of sophisticated points-to analyses", ["Martin Bravenboer", "Yannis Smaragdakis"], "https://doi.org/10.1145/1640089.1640108", "oopsla", 2009]], "Yannis Smaragdakis": [["Strictly declarative specification of sophisticated points-to analyses", ["Martin Bravenboer", "Yannis Smaragdakis"], "https://doi.org/10.1145/1640089.1640108", "oopsla", 2009]], "Chieri Saito": [["Self type constructors", ["Chieri Saito", "Atsushi Igarashi"], "https://doi.org/10.1145/1640089.1640109", "oopsla", 2009]], "Atsushi Igarashi": [["Self type constructors", ["Chieri Saito", "Atsushi Igarashi"], "https://doi.org/10.1145/1640089.1640109", "oopsla", 2009]], "Michael Furr": [["Profile-guided static typing for dynamic scripting languages", ["Michael Furr", "Jong-hoon David An", "Jeffrey S. Foster"], "https://doi.org/10.1145/1640089.1640110", "oopsla", 2009]], "Jong-hoon David An": [["Profile-guided static typing for dynamic scripting languages", ["Michael Furr", "Jong-hoon David An", "Jeffrey S. Foster"], "https://doi.org/10.1145/1640089.1640110", "oopsla", 2009]], "Jeffrey S. Foster": [["Profile-guided static typing for dynamic scripting languages", ["Michael Furr", "Jong-hoon David An", "Jeffrey S. Foster"], "https://doi.org/10.1145/1640089.1640110", "oopsla", 2009]], "Myoungkyu Song": [["Enhancing source-level programming tools with an awareness of transparent program transformations", ["Myoungkyu Song", "Eli Tilevich"], "https://doi.org/10.1145/1640089.1640112", "oopsla", 2009]], "Eli Tilevich": [["Enhancing source-level programming tools with an awareness of transparent program transformations", ["Myoungkyu Song", "Eli Tilevich"], "https://doi.org/10.1145/1640089.1640112", "oopsla", 2009]], "Marwan Abi-Antoun": [["Static extraction and conformance analysis of hierarchical runtime architectural structure using annotations", ["Marwan Abi-Antoun", "Jonathan Aldrich"], "https://doi.org/10.1145/1640089.1640113", "oopsla", 2009]], "Mangala Gowri Nanda": [["Demystifying model transformations: an approach based on automated rule inference", ["Mangala Gowri Nanda", "Senthil Mani", "Vibha Singhal Sinha", "Saurabh Sinha"], "https://doi.org/10.1145/1640089.1640114", "oopsla", 2009]], "Senthil Mani": [["Demystifying model transformations: an approach based on automated rule inference", ["Mangala Gowri Nanda", "Senthil Mani", "Vibha Singhal Sinha", "Saurabh Sinha"], "https://doi.org/10.1145/1640089.1640114", "oopsla", 2009]], "Vibha Singhal Sinha": [["Demystifying model transformations: an approach based on automated rule inference", ["Mangala Gowri Nanda", "Senthil Mani", "Vibha Singhal Sinha", "Saurabh Sinha"], "https://doi.org/10.1145/1640089.1640114", "oopsla", 2009]], "Saurabh Sinha": [["Demystifying model transformations: an approach based on automated rule inference", ["Mangala Gowri Nanda", "Senthil Mani", "Vibha Singhal Sinha", "Saurabh Sinha"], "https://doi.org/10.1145/1640089.1640114", "oopsla", 2009]], "Yi Zhao": [["Allocation wall: a limiting factor of Java applications on emerging multi-core platforms", ["Yi Zhao", "Jin Shi", "Kai Zheng", "Haichuan Wang", "Haibo Lin", "Ling Shao"], "https://doi.org/10.1145/1640089.1640116", "oopsla", 2009]], "Jin Shi": [["Allocation wall: a limiting factor of Java applications on emerging multi-core platforms", ["Yi Zhao", "Jin Shi", "Kai Zheng", "Haichuan Wang", "Haibo Lin", "Ling Shao"], "https://doi.org/10.1145/1640089.1640116", "oopsla", 2009]], "Kai Zheng": [["Allocation wall: a limiting factor of Java applications on emerging multi-core platforms", ["Yi Zhao", "Jin Shi", "Kai Zheng", "Haichuan Wang", "Haibo Lin", "Ling Shao"], "https://doi.org/10.1145/1640089.1640116", "oopsla", 2009]], "Haichuan Wang": [["Allocation wall: a limiting factor of Java applications on emerging multi-core platforms", ["Yi Zhao", "Jin Shi", "Kai Zheng", "Haichuan Wang", "Haibo Lin", "Ling Shao"], "https://doi.org/10.1145/1640089.1640116", "oopsla", 2009]], "Haibo Lin": [["Allocation wall: a limiting factor of Java applications on emerging multi-core platforms", ["Yi Zhao", "Jin Shi", "Kai Zheng", "Haichuan Wang", "Haibo Lin", "Ling Shao"], "https://doi.org/10.1145/1640089.1640116", "oopsla", 2009]], "Ling Shao": [["Allocation wall: a limiting factor of Java applications on emerging multi-core platforms", ["Yi Zhao", "Jin Shi", "Kai Zheng", "Haichuan Wang", "Haibo Lin", "Ling Shao"], "https://doi.org/10.1145/1640089.1640116", "oopsla", 2009]], "Takeshi Ogasawara": [["NUMA-aware memory manager with dominant-thread-based copying GC", ["Takeshi Ogasawara"], "https://doi.org/10.1145/1640089.1640117", "oopsla", 2009]], "Frederic Pluquet": [["Executing code in the past: efficient in-memory object graph versioning", ["Frederic Pluquet", "Stefan Langerman", "Roel Wuyts"], "https://doi.org/10.1145/1640089.1640118", "oopsla", 2009]], "Stefan Langerman": [["Executing code in the past: efficient in-memory object graph versioning", ["Frederic Pluquet", "Stefan Langerman", "Roel Wuyts"], "https://doi.org/10.1145/1640089.1640118", "oopsla", 2009]], "Roel Wuyts": [["Executing code in the past: efficient in-memory object graph versioning", ["Frederic Pluquet", "Stefan Langerman", "Roel Wuyts"], "https://doi.org/10.1145/1640089.1640118", "oopsla", 2009]], "Daniel von Dincklage": [["Optimizing programs with intended semantics", ["Daniel von Dincklage", "Amer Diwan"], "https://doi.org/10.1145/1640089.1640120", "oopsla", 2009]], "Dan Tsafrir": [["Minimizing dependencies within generic classes for faster and smaller programs", ["Dan Tsafrir", "Robert W. Wisniewski", "David F. Bacon", "Bjarne Stroustrup"], "https://doi.org/10.1145/1640089.1640121", "oopsla", 2009]], "Robert W. Wisniewski": [["Minimizing dependencies within generic classes for faster and smaller programs", ["Dan Tsafrir", "Robert W. Wisniewski", "David F. Bacon", "Bjarne Stroustrup"], "https://doi.org/10.1145/1640089.1640121", "oopsla", 2009]], "David F. Bacon": [["Minimizing dependencies within generic classes for faster and smaller programs", ["Dan Tsafrir", "Robert W. Wisniewski", "David F. Bacon", "Bjarne Stroustrup"], "https://doi.org/10.1145/1640089.1640121", "oopsla", 2009]], "Bjarne Stroustrup": [["Minimizing dependencies within generic classes for faster and smaller programs", ["Dan Tsafrir", "Robert W. Wisniewski", "David F. Bacon", "Bjarne Stroustrup"], "https://doi.org/10.1145/1640089.1640121", "oopsla", 2009]], "Lennart C. L. Kats": [["Providing rapid feedback in generated modular language environments: adding error recovery to scannerless generalized-LR parsing", ["Lennart C. L. Kats", "Maartje de Jonge", "Emma Nilsson-Nyman", "Eelco Visser"], "https://doi.org/10.1145/1640089.1640122", "oopsla", 2009]], "Maartje de Jonge": [["Providing rapid feedback in generated modular language environments: adding error recovery to scannerless generalized-LR parsing", ["Lennart C. L. Kats", "Maartje de Jonge", "Emma Nilsson-Nyman", "Eelco Visser"], "https://doi.org/10.1145/1640089.1640122", "oopsla", 2009]], "Emma Nilsson-Nyman": [["Providing rapid feedback in generated modular language environments: adding error recovery to scannerless generalized-LR parsing", ["Lennart C. L. Kats", "Maartje de Jonge", "Emma Nilsson-Nyman", "Eelco Visser"], "https://doi.org/10.1145/1640089.1640122", "oopsla", 2009]], "Eelco Visser": [["Providing rapid feedback in generated modular language environments: adding error recovery to scannerless generalized-LR parsing", ["Lennart C. L. Kats", "Maartje de Jonge", "Emma Nilsson-Nyman", "Eelco Visser"], "https://doi.org/10.1145/1640089.1640122", "oopsla", 2009]], "Dirk Riehle": [["Design pattern density defined", ["Dirk Riehle"], "https://doi.org/10.1145/1640089.1640125", "oopsla", 2009]], "Thomas Mullen": [["Writing code for other people: cognitive psychology and the fundamentals of good software design principles", ["Thomas Mullen"], "https://doi.org/10.1145/1640089.1640126", "oopsla", 2009]], "Jeffrey L. Overbey": [["Regrowing a language: refactoring tools allow programming languages to evolve", ["Jeffrey L. Overbey", "Ralph E. Johnson"], "https://doi.org/10.1145/1640089.1640127", "oopsla", 2009]], "Ralph E. Johnson": [["Regrowing a language: refactoring tools allow programming languages to evolve", ["Jeffrey L. Overbey", "Ralph E. Johnson"], "https://doi.org/10.1145/1640089.1640127", "oopsla", 2009]], "Roman Knoll": [["pi: a pattern language", ["Roman Knoll", "Mira Mezini"], "https://doi.org/10.1145/1640089.1640128", "oopsla", 2009]], "Mira Mezini": [["pi: a pattern language", ["Roman Knoll", "Mira Mezini"], "https://doi.org/10.1145/1640089.1640128", "oopsla", 2009]], "Mark Mahoney": [["Software evolution and the moving picture metaphor", ["Mark Mahoney"], "https://doi.org/10.1145/1640089.1640130", "oopsla", 2009]], "Jenny Quillien": [["Agile anthropology and Alexander's architecture: an essay in three voices", ["Jenny Quillien", "Pam Rostal", "Dave West"], "https://doi.org/10.1145/1640089.1640131", "oopsla", 2009]], "Pam Rostal": [["Agile anthropology and Alexander's architecture: an essay in three voices", ["Jenny Quillien", "Pam Rostal", "Dave West"], "https://doi.org/10.1145/1640089.1640131", "oopsla", 2009]], "Dave West": [["Agile anthropology and Alexander's architecture: an essay in three voices", ["Jenny Quillien", "Pam Rostal", "Dave West"], "https://doi.org/10.1145/1640089.1640131", "oopsla", 2009]], "Elisa L. A. Baniassad": [["An exploration of program as language", ["Elisa L. A. Baniassad", "Clayton G. Myers"], "https://doi.org/10.1145/1640089.1640132", "oopsla", 2009]], "Clayton G. Myers": [["An exploration of program as language", ["Elisa L. A. Baniassad", "Clayton G. Myers"], "https://doi.org/10.1145/1640089.1640132", "oopsla", 2009]], "William R. Cook": [["On understanding data abstraction, revisited", ["William R. Cook"], "https://doi.org/10.1145/1640089.1640133", "oopsla", 2009]]}
{"DeLesley Hutchins": [0, ["Eliminating distinctions of class: using prototypes to model virtual classes", ["DeLesley Hutchins"], "https://doi.org/10.1145/1167473.1167475", 20, "oopsla", 2006]], "Nathaniel Nystrom": [0, ["J&: nested intersection for scalable software composition", ["Nathaniel Nystrom", "Xin Qi", "Andrew C. Myers"], "https://doi.org/10.1145/1167473.1167476", 16, "oopsla", 2006]], "Xin Qi": [0, ["J&: nested intersection for scalable software composition", ["Nathaniel Nystrom", "Xin Qi", "Andrew C. Myers"], "https://doi.org/10.1145/1167473.1167476", 16, "oopsla", 2006]], "Andrew C. Myers": [0, ["J&: nested intersection for scalable software composition", ["Nathaniel Nystrom", "Xin Qi", "Andrew C. Myers"], "https://doi.org/10.1145/1167473.1167476", 16, "oopsla", 2006]], "Alessandro Warth": [0, ["Statically scoped object adaptation with expanders", ["Alessandro Warth", "Milan Stanojevic", "Todd D. Millstein"], "https://doi.org/10.1145/1167473.1167477", 20, "oopsla", 2006]], "Milan Stanojevic": [0, ["Statically scoped object adaptation with expanders", ["Alessandro Warth", "Milan Stanojevic", "Todd D. Millstein"], "https://doi.org/10.1145/1167473.1167477", 20, "oopsla", 2006]], "Todd D. Millstein": [0, ["Statically scoped object adaptation with expanders", ["Alessandro Warth", "Milan Stanojevic", "Todd D. Millstein"], "https://doi.org/10.1145/1167473.1167477", 20, "oopsla", 2006], ["A framework for implementing pluggable type systems", ["Chris Andreae", "James Noble", "Shane Markstrum", "Todd D. Millstein"], "https://doi.org/10.1145/1167473.1167479", 18, "oopsla", 2006]], "Chris Andreae": [0, ["A framework for implementing pluggable type systems", ["Chris Andreae", "James Noble", "Shane Markstrum", "Todd D. Millstein"], "https://doi.org/10.1145/1167473.1167479", 18, "oopsla", 2006]], "James Noble": [0, ["A framework for implementing pluggable type systems", ["Chris Andreae", "James Noble", "Shane Markstrum", "Todd D. Millstein"], "https://doi.org/10.1145/1167473.1167479", 18, "oopsla", 2006], ["Generic ownership for generic Java", ["Alex Potanin", "James Noble", "Dave Clarke", "Robert Biddle"], "https://doi.org/10.1145/1167473.1167500", 14, "oopsla", 2006], ["Understanding the shape of Java software", ["Gareth Baxter", "Marcus R. Frean", "James Noble", "Mark Rickerby", "Hayden Smith", "Matt Visser", "Hayden Melton", "Ewan D. Tempero"], "https://doi.org/10.1145/1167473.1167507", 16, "oopsla", 2006]], "Shane Markstrum": [0, ["A framework for implementing pluggable type systems", ["Chris Andreae", "James Noble", "Shane Markstrum", "Todd D. Millstein"], "https://doi.org/10.1145/1167473.1167479", 18, "oopsla", 2006]], "George Fairbanks": [0, ["Design fragments make using frameworks easier", ["George Fairbanks", "David Garlan", "William L. Scherlis"], "https://doi.org/10.1145/1167473.1167480", 14, "oopsla", 2006]], "David Garlan": [0, ["Design fragments make using frameworks easier", ["George Fairbanks", "David Garlan", "William L. Scherlis"], "https://doi.org/10.1145/1167473.1167480", 14, "oopsla", 2006]], "William L. Scherlis": [0, ["Design fragments make using frameworks easier", ["George Fairbanks", "David Garlan", "William L. Scherlis"], "https://doi.org/10.1145/1167473.1167480", 14, "oopsla", 2006]], "Tal Cohen": [0, ["JTL: the Java tools language", ["Tal Cohen", "Joseph Gil", "Itay Maman"], "https://doi.org/10.1145/1167473.1167481", 20, "oopsla", 2006]], "Joseph Gil": [7.10791958624668e-09, ["JTL: the Java tools language", ["Tal Cohen", "Joseph Gil", "Itay Maman"], "https://doi.org/10.1145/1167473.1167481", 20, "oopsla", 2006]], "Itay Maman": [0, ["JTL: the Java tools language", ["Tal Cohen", "Joseph Gil", "Itay Maman"], "https://doi.org/10.1145/1167473.1167481", 20, "oopsla", 2006]], "Christoph Bockisch": [0, ["Adapting virtual machine techniques for seamless aspect support", ["Christoph Bockisch", "Matthew Arnold", "Tom Dinkelaker", "Mira Mezini"], "https://doi.org/10.1145/1167473.1167483", 16, "oopsla", 2006], ["Efficient control flow quantification", ["Christoph Bockisch", "Sebastian Kanthak", "Michael Haupt", "Matthew Arnold", "Mira Mezini"], "https://doi.org/10.1145/1167473.1167484", 14, "oopsla", 2006]], "Matthew Arnold": [0, ["Adapting virtual machine techniques for seamless aspect support", ["Christoph Bockisch", "Matthew Arnold", "Tom Dinkelaker", "Mira Mezini"], "https://doi.org/10.1145/1167473.1167483", 16, "oopsla", 2006], ["Efficient control flow quantification", ["Christoph Bockisch", "Sebastian Kanthak", "Michael Haupt", "Matthew Arnold", "Mira Mezini"], "https://doi.org/10.1145/1167473.1167484", 14, "oopsla", 2006]], "Tom Dinkelaker": [0, ["Adapting virtual machine techniques for seamless aspect support", ["Christoph Bockisch", "Matthew Arnold", "Tom Dinkelaker", "Mira Mezini"], "https://doi.org/10.1145/1167473.1167483", 16, "oopsla", 2006]], "Mira Mezini": [0, ["Adapting virtual machine techniques for seamless aspect support", ["Christoph Bockisch", "Matthew Arnold", "Tom Dinkelaker", "Mira Mezini"], "https://doi.org/10.1145/1167473.1167483", 16, "oopsla", 2006], ["Efficient control flow quantification", ["Christoph Bockisch", "Sebastian Kanthak", "Michael Haupt", "Matthew Arnold", "Mira Mezini"], "https://doi.org/10.1145/1167473.1167484", 14, "oopsla", 2006]], "Sebastian Kanthak": [0, ["Efficient control flow quantification", ["Christoph Bockisch", "Sebastian Kanthak", "Michael Haupt", "Matthew Arnold", "Mira Mezini"], "https://doi.org/10.1145/1167473.1167484", 14, "oopsla", 2006]], "Michael Haupt": [0, ["Efficient control flow quantification", ["Christoph Bockisch", "Sebastian Kanthak", "Michael Haupt", "Matthew Arnold", "Mira Mezini"], "https://doi.org/10.1145/1167473.1167484", 14, "oopsla", 2006]], "Patrick Th. Eugster": [0, ["Uniform proxies for Java", ["Patrick Th. Eugster"], "https://doi.org/10.1145/1167473.1167485", 14, "oopsla", 2006]], "Jonas Maebe": [0, ["Javana: a system for building customized Java program analysis tools", ["Jonas Maebe", "Dries Buytaert", "Lieven Eeckhout", "Koen De Bosschere"], "https://doi.org/10.1145/1167473.1167487", 16, "oopsla", 2006]], "Dries Buytaert": [0, ["Javana: a system for building customized Java program analysis tools", ["Jonas Maebe", "Dries Buytaert", "Lieven Eeckhout", "Koen De Bosschere"], "https://doi.org/10.1145/1167473.1167487", 16, "oopsla", 2006]], "Lieven Eeckhout": [0, ["Javana: a system for building customized Java program analysis tools", ["Jonas Maebe", "Dries Buytaert", "Lieven Eeckhout", "Koen De Bosschere"], "https://doi.org/10.1145/1167473.1167487", 16, "oopsla", 2006]], "Koen De Bosschere": [0, ["Javana: a system for building customized Java program analysis tools", ["Jonas Maebe", "Dries Buytaert", "Lieven Eeckhout", "Koen De Bosschere"], "https://doi.org/10.1145/1167473.1167487", 16, "oopsla", 2006]], "Stephen M. Blackburn": [0, ["The DaCapo benchmarks: java benchmarking development and analysis", ["Stephen M. Blackburn", "Robin Garner", "Chris Hoffmann", "Asjad M. Khan", "Kathryn S. McKinley", "Rotem Bentzur", "Amer Diwan", "Daniel Feinberg", "Daniel Frampton", "Samuel Z. Guyer", "Martin Hirzel", "Antony L. Hosking", "Maria Jump", "Han Bok Lee", "J. Eliot B. Moss", "Aashish Phansalkar", "Darko Stefanovic", "Thomas VanDrunen", "Daniel von Dincklage", "Ben Wiedermann"], "https://doi.org/10.1145/1167473.1167488", 22, "oopsla", 2006]], "Robin Garner": [0, ["The DaCapo benchmarks: java benchmarking development and analysis", ["Stephen M. Blackburn", "Robin Garner", "Chris Hoffmann", "Asjad M. Khan", "Kathryn S. McKinley", "Rotem Bentzur", "Amer Diwan", "Daniel Feinberg", "Daniel Frampton", "Samuel Z. Guyer", "Martin Hirzel", "Antony L. Hosking", "Maria Jump", "Han Bok Lee", "J. Eliot B. Moss", "Aashish Phansalkar", "Darko Stefanovic", "Thomas VanDrunen", "Daniel von Dincklage", "Ben Wiedermann"], "https://doi.org/10.1145/1167473.1167488", 22, "oopsla", 2006]], "Chris Hoffmann": [0, ["The DaCapo benchmarks: java benchmarking development and analysis", ["Stephen M. Blackburn", "Robin Garner", "Chris Hoffmann", "Asjad M. Khan", "Kathryn S. McKinley", "Rotem Bentzur", "Amer Diwan", "Daniel Feinberg", "Daniel Frampton", "Samuel Z. Guyer", "Martin Hirzel", "Antony L. Hosking", "Maria Jump", "Han Bok Lee", "J. Eliot B. Moss", "Aashish Phansalkar", "Darko Stefanovic", "Thomas VanDrunen", "Daniel von Dincklage", "Ben Wiedermann"], "https://doi.org/10.1145/1167473.1167488", 22, "oopsla", 2006]], "Asjad M. Khan": [0, ["The DaCapo benchmarks: java benchmarking development and analysis", ["Stephen M. Blackburn", "Robin Garner", "Chris Hoffmann", "Asjad M. Khan", "Kathryn S. McKinley", "Rotem Bentzur", "Amer Diwan", "Daniel Feinberg", "Daniel Frampton", "Samuel Z. Guyer", "Martin Hirzel", "Antony L. Hosking", "Maria Jump", "Han Bok Lee", "J. Eliot B. Moss", "Aashish Phansalkar", "Darko Stefanovic", "Thomas VanDrunen", "Daniel von Dincklage", "Ben Wiedermann"], "https://doi.org/10.1145/1167473.1167488", 22, "oopsla", 2006]], "Kathryn S. McKinley": [0, ["The DaCapo benchmarks: java benchmarking development and analysis", ["Stephen M. Blackburn", "Robin Garner", "Chris Hoffmann", "Asjad M. Khan", "Kathryn S. McKinley", "Rotem Bentzur", "Amer Diwan", "Daniel Feinberg", "Daniel Frampton", "Samuel Z. Guyer", "Martin Hirzel", "Antony L. Hosking", "Maria Jump", "Han Bok Lee", "J. Eliot B. Moss", "Aashish Phansalkar", "Darko Stefanovic", "Thomas VanDrunen", "Daniel von Dincklage", "Ben Wiedermann"], "https://doi.org/10.1145/1167473.1167488", 22, "oopsla", 2006]], "Rotem Bentzur": [0, ["The DaCapo benchmarks: java benchmarking development and analysis", ["Stephen M. Blackburn", "Robin Garner", "Chris Hoffmann", "Asjad M. Khan", "Kathryn S. McKinley", "Rotem Bentzur", "Amer Diwan", "Daniel Feinberg", "Daniel Frampton", "Samuel Z. Guyer", "Martin Hirzel", "Antony L. Hosking", "Maria Jump", "Han Bok Lee", "J. Eliot B. Moss", "Aashish Phansalkar", "Darko Stefanovic", "Thomas VanDrunen", "Daniel von Dincklage", "Ben Wiedermann"], "https://doi.org/10.1145/1167473.1167488", 22, "oopsla", 2006]], "Amer Diwan": [0, ["The DaCapo benchmarks: java benchmarking development and analysis", ["Stephen M. Blackburn", "Robin Garner", "Chris Hoffmann", "Asjad M. Khan", "Kathryn S. McKinley", "Rotem Bentzur", "Amer Diwan", "Daniel Feinberg", "Daniel Frampton", "Samuel Z. Guyer", "Martin Hirzel", "Antony L. Hosking", "Maria Jump", "Han Bok Lee", "J. Eliot B. Moss", "Aashish Phansalkar", "Darko Stefanovic", "Thomas VanDrunen", "Daniel von Dincklage", "Ben Wiedermann"], "https://doi.org/10.1145/1167473.1167488", 22, "oopsla", 2006]], "Daniel Feinberg": [0, ["The DaCapo benchmarks: java benchmarking development and analysis", ["Stephen M. Blackburn", "Robin Garner", "Chris Hoffmann", "Asjad M. Khan", "Kathryn S. McKinley", "Rotem Bentzur", "Amer Diwan", "Daniel Feinberg", "Daniel Frampton", "Samuel Z. Guyer", "Martin Hirzel", "Antony L. Hosking", "Maria Jump", "Han Bok Lee", "J. Eliot B. Moss", "Aashish Phansalkar", "Darko Stefanovic", "Thomas VanDrunen", "Daniel von Dincklage", "Ben Wiedermann"], "https://doi.org/10.1145/1167473.1167488", 22, "oopsla", 2006]], "Daniel Frampton": [0, ["The DaCapo benchmarks: java benchmarking development and analysis", ["Stephen M. Blackburn", "Robin Garner", "Chris Hoffmann", "Asjad M. Khan", "Kathryn S. McKinley", "Rotem Bentzur", "Amer Diwan", "Daniel Feinberg", "Daniel Frampton", "Samuel Z. Guyer", "Martin Hirzel", "Antony L. Hosking", "Maria Jump", "Han Bok Lee", "J. Eliot B. Moss", "Aashish Phansalkar", "Darko Stefanovic", "Thomas VanDrunen", "Daniel von Dincklage", "Ben Wiedermann"], "https://doi.org/10.1145/1167473.1167488", 22, "oopsla", 2006]], "Samuel Z. Guyer": [0, ["The DaCapo benchmarks: java benchmarking development and analysis", ["Stephen M. Blackburn", "Robin Garner", "Chris Hoffmann", "Asjad M. Khan", "Kathryn S. McKinley", "Rotem Bentzur", "Amer Diwan", "Daniel Feinberg", "Daniel Frampton", "Samuel Z. Guyer", "Martin Hirzel", "Antony L. Hosking", "Maria Jump", "Han Bok Lee", "J. Eliot B. Moss", "Aashish Phansalkar", "Darko Stefanovic", "Thomas VanDrunen", "Daniel von Dincklage", "Ben Wiedermann"], "https://doi.org/10.1145/1167473.1167488", 22, "oopsla", 2006]], "Martin Hirzel": [0, ["The DaCapo benchmarks: java benchmarking development and analysis", ["Stephen M. Blackburn", "Robin Garner", "Chris Hoffmann", "Asjad M. Khan", "Kathryn S. McKinley", "Rotem Bentzur", "Amer Diwan", "Daniel Feinberg", "Daniel Frampton", "Samuel Z. Guyer", "Martin Hirzel", "Antony L. Hosking", "Maria Jump", "Han Bok Lee", "J. Eliot B. Moss", "Aashish Phansalkar", "Darko Stefanovic", "Thomas VanDrunen", "Daniel von Dincklage", "Ben Wiedermann"], "https://doi.org/10.1145/1167473.1167488", 22, "oopsla", 2006]], "Antony L. Hosking": [0, ["The DaCapo benchmarks: java benchmarking development and analysis", ["Stephen M. Blackburn", "Robin Garner", "Chris Hoffmann", "Asjad M. Khan", "Kathryn S. McKinley", "Rotem Bentzur", "Amer Diwan", "Daniel Feinberg", "Daniel Frampton", "Samuel Z. Guyer", "Martin Hirzel", "Antony L. Hosking", "Maria Jump", "Han Bok Lee", "J. Eliot B. Moss", "Aashish Phansalkar", "Darko Stefanovic", "Thomas VanDrunen", "Daniel von Dincklage", "Ben Wiedermann"], "https://doi.org/10.1145/1167473.1167488", 22, "oopsla", 2006]], "Maria Jump": [0, ["The DaCapo benchmarks: java benchmarking development and analysis", ["Stephen M. Blackburn", "Robin Garner", "Chris Hoffmann", "Asjad M. Khan", "Kathryn S. McKinley", "Rotem Bentzur", "Amer Diwan", "Daniel Feinberg", "Daniel Frampton", "Samuel Z. Guyer", "Martin Hirzel", "Antony L. Hosking", "Maria Jump", "Han Bok Lee", "J. Eliot B. Moss", "Aashish Phansalkar", "Darko Stefanovic", "Thomas VanDrunen", "Daniel von Dincklage", "Ben Wiedermann"], "https://doi.org/10.1145/1167473.1167488", 22, "oopsla", 2006]], "Han Bok Lee": [0.640080451965332, ["The DaCapo benchmarks: java benchmarking development and analysis", ["Stephen M. Blackburn", "Robin Garner", "Chris Hoffmann", "Asjad M. Khan", "Kathryn S. McKinley", "Rotem Bentzur", "Amer Diwan", "Daniel Feinberg", "Daniel Frampton", "Samuel Z. Guyer", "Martin Hirzel", "Antony L. Hosking", "Maria Jump", "Han Bok Lee", "J. Eliot B. Moss", "Aashish Phansalkar", "Darko Stefanovic", "Thomas VanDrunen", "Daniel von Dincklage", "Ben Wiedermann"], "https://doi.org/10.1145/1167473.1167488", 22, "oopsla", 2006]], "J. Eliot B. Moss": [0, ["The DaCapo benchmarks: java benchmarking development and analysis", ["Stephen M. Blackburn", "Robin Garner", "Chris Hoffmann", "Asjad M. Khan", "Kathryn S. McKinley", "Rotem Bentzur", "Amer Diwan", "Daniel Feinberg", "Daniel Frampton", "Samuel Z. Guyer", "Martin Hirzel", "Antony L. Hosking", "Maria Jump", "Han Bok Lee", "J. Eliot B. Moss", "Aashish Phansalkar", "Darko Stefanovic", "Thomas VanDrunen", "Daniel von Dincklage", "Ben Wiedermann"], "https://doi.org/10.1145/1167473.1167488", 22, "oopsla", 2006]], "Aashish Phansalkar": [0, ["The DaCapo benchmarks: java benchmarking development and analysis", ["Stephen M. Blackburn", "Robin Garner", "Chris Hoffmann", "Asjad M. Khan", "Kathryn S. McKinley", "Rotem Bentzur", "Amer Diwan", "Daniel Feinberg", "Daniel Frampton", "Samuel Z. Guyer", "Martin Hirzel", "Antony L. Hosking", "Maria Jump", "Han Bok Lee", "J. Eliot B. Moss", "Aashish Phansalkar", "Darko Stefanovic", "Thomas VanDrunen", "Daniel von Dincklage", "Ben Wiedermann"], "https://doi.org/10.1145/1167473.1167488", 22, "oopsla", 2006]], "Darko Stefanovic": [0, ["The DaCapo benchmarks: java benchmarking development and analysis", ["Stephen M. Blackburn", "Robin Garner", "Chris Hoffmann", "Asjad M. Khan", "Kathryn S. McKinley", "Rotem Bentzur", "Amer Diwan", "Daniel Feinberg", "Daniel Frampton", "Samuel Z. Guyer", "Martin Hirzel", "Antony L. Hosking", "Maria Jump", "Han Bok Lee", "J. Eliot B. Moss", "Aashish Phansalkar", "Darko Stefanovic", "Thomas VanDrunen", "Daniel von Dincklage", "Ben Wiedermann"], "https://doi.org/10.1145/1167473.1167488", 22, "oopsla", 2006]], "Thomas VanDrunen": [0, ["The DaCapo benchmarks: java benchmarking development and analysis", ["Stephen M. Blackburn", "Robin Garner", "Chris Hoffmann", "Asjad M. Khan", "Kathryn S. McKinley", "Rotem Bentzur", "Amer Diwan", "Daniel Feinberg", "Daniel Frampton", "Samuel Z. Guyer", "Martin Hirzel", "Antony L. Hosking", "Maria Jump", "Han Bok Lee", "J. Eliot B. Moss", "Aashish Phansalkar", "Darko Stefanovic", "Thomas VanDrunen", "Daniel von Dincklage", "Ben Wiedermann"], "https://doi.org/10.1145/1167473.1167488", 22, "oopsla", 2006]], "Daniel von Dincklage": [0, ["The DaCapo benchmarks: java benchmarking development and analysis", ["Stephen M. Blackburn", "Robin Garner", "Chris Hoffmann", "Asjad M. Khan", "Kathryn S. McKinley", "Rotem Bentzur", "Amer Diwan", "Daniel Feinberg", "Daniel Frampton", "Samuel Z. Guyer", "Martin Hirzel", "Antony L. Hosking", "Maria Jump", "Han Bok Lee", "J. Eliot B. Moss", "Aashish Phansalkar", "Darko Stefanovic", "Thomas VanDrunen", "Daniel von Dincklage", "Ben Wiedermann"], "https://doi.org/10.1145/1167473.1167488", 22, "oopsla", 2006]], "Ben Wiedermann": [0, ["The DaCapo benchmarks: java benchmarking development and analysis", ["Stephen M. Blackburn", "Robin Garner", "Chris Hoffmann", "Asjad M. Khan", "Kathryn S. McKinley", "Rotem Bentzur", "Amer Diwan", "Daniel Feinberg", "Daniel Frampton", "Samuel Z. Guyer", "Martin Hirzel", "Antony L. Hosking", "Maria Jump", "Han Bok Lee", "J. Eliot B. Moss", "Aashish Phansalkar", "Darko Stefanovic", "Thomas VanDrunen", "Daniel von Dincklage", "Ben Wiedermann"], "https://doi.org/10.1145/1167473.1167488", 22, "oopsla", 2006]], "Ben L. Titzer": [0, ["Virgil: objects on the head of a pin", ["Ben L. Titzer"], "https://doi.org/10.1145/1167473.1167489", 18, "oopsla", 2006]], "Martin Bravenboer": [0, ["Declarative, formal, and extensible syntax definition for aspectJ", ["Martin Bravenboer", "Eric Tanter", "Eelco Visser"], "https://doi.org/10.1145/1167473.1167491", 20, "oopsla", 2006]], "Eric Tanter": [0, ["Declarative, formal, and extensible syntax definition for aspectJ", ["Martin Bravenboer", "Eric Tanter", "Eelco Visser"], "https://doi.org/10.1145/1167473.1167491", 20, "oopsla", 2006]], "Eelco Visser": [0, ["Declarative, formal, and extensible syntax definition for aspectJ", ["Martin Bravenboer", "Eric Tanter", "Eelco Visser"], "https://doi.org/10.1145/1167473.1167491", 20, "oopsla", 2006]], "John Cavazos": [0, ["Method-specific dynamic compilation using logistic regression", ["John Cavazos", "Michael F. P. OBoyle"], "https://doi.org/10.1145/1167473.1167492", 12, "oopsla", 2006]], "Michael F. P. OBoyle": [0, ["Method-specific dynamic compilation using logistic regression", ["John Cavazos", "Michael F. P. OBoyle"], "https://doi.org/10.1145/1167473.1167492", 12, "oopsla", 2006]], "Kazunori Ogata": [0, ["Replay compilation: improving debuggability of a just-in-time compiler", ["Kazunori Ogata", "Tamiya Onodera", "Kiyokuni Kawachiya", "Hideaki Komatsu", "Toshio Nakatani"], "https://doi.org/10.1145/1167473.1167493", 12, "oopsla", 2006]], "Tamiya Onodera": [0, ["Replay compilation: improving debuggability of a just-in-time compiler", ["Kazunori Ogata", "Tamiya Onodera", "Kiyokuni Kawachiya", "Hideaki Komatsu", "Toshio Nakatani"], "https://doi.org/10.1145/1167473.1167493", 12, "oopsla", 2006]], "Kiyokuni Kawachiya": [0, ["Replay compilation: improving debuggability of a just-in-time compiler", ["Kazunori Ogata", "Tamiya Onodera", "Kiyokuni Kawachiya", "Hideaki Komatsu", "Toshio Nakatani"], "https://doi.org/10.1145/1167473.1167493", 12, "oopsla", 2006]], "Hideaki Komatsu": [0, ["Replay compilation: improving debuggability of a just-in-time compiler", ["Kazunori Ogata", "Tamiya Onodera", "Kiyokuni Kawachiya", "Hideaki Komatsu", "Toshio Nakatani"], "https://doi.org/10.1145/1167473.1167493", 12, "oopsla", 2006]], "Toshio Nakatani": [0, ["Replay compilation: improving debuggability of a just-in-time compiler", ["Kazunori Ogata", "Tamiya Onodera", "Kiyokuni Kawachiya", "Hideaki Komatsu", "Toshio Nakatani"], "https://doi.org/10.1145/1167473.1167493", 12, "oopsla", 2006]], "Maurice Herlihy": [0, ["A flexible framework for implementing software transactional memory", ["Maurice Herlihy", "Victor Luchangco", "Mark Moir"], "https://doi.org/10.1145/1167473.1167495", 10, "oopsla", 2006]], "Victor Luchangco": [0, ["A flexible framework for implementing software transactional memory", ["Maurice Herlihy", "Victor Luchangco", "Mark Moir"], "https://doi.org/10.1145/1167473.1167495", 10, "oopsla", 2006]], "Mark Moir": [0, ["A flexible framework for implementing software transactional memory", ["Maurice Herlihy", "Victor Luchangco", "Mark Moir"], "https://doi.org/10.1145/1167473.1167495", 10, "oopsla", 2006]], "Kenneth Russell": [0, ["Eliminating synchronization-related atomic operations with biased locking and bulk rebiasing", ["Kenneth Russell", "David Detlefs"], "https://doi.org/10.1145/1167473.1167496", 10, "oopsla", 2006]], "David Detlefs": [0, ["Eliminating synchronization-related atomic operations with biased locking and bulk rebiasing", ["Kenneth Russell", "David Detlefs"], "https://doi.org/10.1145/1167473.1167496", 10, "oopsla", 2006]], "Wei-Ngan Chin": [0, ["A flow-based approach for variant parametric types", ["Wei-Ngan Chin", "Florin Craciun", "Siau-Cheng Khoo", "Corneliu Popeea"], "https://doi.org/10.1145/1167473.1167498", 18, "oopsla", 2006]], "Florin Craciun": [0, ["A flow-based approach for variant parametric types", ["Wei-Ngan Chin", "Florin Craciun", "Siau-Cheng Khoo", "Corneliu Popeea"], "https://doi.org/10.1145/1167473.1167498", 18, "oopsla", 2006]], "Siau-Cheng Khoo": [0, ["A flow-based approach for variant parametric types", ["Wei-Ngan Chin", "Florin Craciun", "Siau-Cheng Khoo", "Corneliu Popeea"], "https://doi.org/10.1145/1167473.1167498", 18, "oopsla", 2006]], "Corneliu Popeea": [0, ["A flow-based approach for variant parametric types", ["Wei-Ngan Chin", "Florin Craciun", "Siau-Cheng Khoo", "Corneliu Popeea"], "https://doi.org/10.1145/1167473.1167498", 18, "oopsla", 2006]], "Douglas P. Gregor": [0, ["Concepts: linguistic support for generic programming in C++", ["Douglas P. Gregor", "Jaakko Jarvi", "Jeremy G. Siek", "Bjarne Stroustrup", "Gabriel Dos Reis", "Andrew Lumsdaine"], "https://doi.org/10.1145/1167473.1167499", 20, "oopsla", 2006]], "Jaakko Jarvi": [0, ["Concepts: linguistic support for generic programming in C++", ["Douglas P. Gregor", "Jaakko Jarvi", "Jeremy G. Siek", "Bjarne Stroustrup", "Gabriel Dos Reis", "Andrew Lumsdaine"], "https://doi.org/10.1145/1167473.1167499", 20, "oopsla", 2006]], "Jeremy G. Siek": [0, ["Concepts: linguistic support for generic programming in C++", ["Douglas P. Gregor", "Jaakko Jarvi", "Jeremy G. Siek", "Bjarne Stroustrup", "Gabriel Dos Reis", "Andrew Lumsdaine"], "https://doi.org/10.1145/1167473.1167499", 20, "oopsla", 2006]], "Bjarne Stroustrup": [0, ["Concepts: linguistic support for generic programming in C++", ["Douglas P. Gregor", "Jaakko Jarvi", "Jeremy G. Siek", "Bjarne Stroustrup", "Gabriel Dos Reis", "Andrew Lumsdaine"], "https://doi.org/10.1145/1167473.1167499", 20, "oopsla", 2006]], "Gabriel Dos Reis": [0, ["Concepts: linguistic support for generic programming in C++", ["Douglas P. Gregor", "Jaakko Jarvi", "Jeremy G. Siek", "Bjarne Stroustrup", "Gabriel Dos Reis", "Andrew Lumsdaine"], "https://doi.org/10.1145/1167473.1167499", 20, "oopsla", 2006]], "Andrew Lumsdaine": [0, ["Concepts: linguistic support for generic programming in C++", ["Douglas P. Gregor", "Jaakko Jarvi", "Jeremy G. Siek", "Bjarne Stroustrup", "Gabriel Dos Reis", "Andrew Lumsdaine"], "https://doi.org/10.1145/1167473.1167499", 20, "oopsla", 2006]], "Alex Potanin": [0, ["Generic ownership for generic Java", ["Alex Potanin", "James Noble", "Dave Clarke", "Robert Biddle"], "https://doi.org/10.1145/1167473.1167500", 14, "oopsla", 2006]], "Dave Clarke": [0, ["Generic ownership for generic Java", ["Alex Potanin", "James Noble", "Dave Clarke", "Robert Biddle"], "https://doi.org/10.1145/1167473.1167500", 14, "oopsla", 2006]], "Robert Biddle": [0, ["Generic ownership for generic Java", ["Alex Potanin", "James Noble", "Dave Clarke", "Robert Biddle"], "https://doi.org/10.1145/1167473.1167500", 14, "oopsla", 2006]], "Yu David Liu": [0, ["A formal framework for component deployment", ["Yu David Liu", "Scott F. Smith"], "https://doi.org/10.1145/1167473.1167502", 20, "oopsla", 2006]], "Scott F. Smith": [0, ["A formal framework for component deployment", ["Yu David Liu", "Scott F. Smith"], "https://doi.org/10.1145/1167473.1167502", 20, "oopsla", 2006]], "Daniel Wasserrab": [0, ["An operational semantics and type safety prooffor multiple inheritance in C++", ["Daniel Wasserrab", "Tobias Nipkow", "Gregor Snelting", "Frank Tip"], "https://doi.org/10.1145/1167473.1167503", 18, "oopsla", 2006]], "Tobias Nipkow": [0, ["An operational semantics and type safety prooffor multiple inheritance in C++", ["Daniel Wasserrab", "Tobias Nipkow", "Gregor Snelting", "Frank Tip"], "https://doi.org/10.1145/1167473.1167503", 18, "oopsla", 2006]], "Gregor Snelting": [0, ["An operational semantics and type safety prooffor multiple inheritance in C++", ["Daniel Wasserrab", "Tobias Nipkow", "Gregor Snelting", "Frank Tip"], "https://doi.org/10.1145/1167473.1167503", 18, "oopsla", 2006]], "Frank Tip": [0, ["An operational semantics and type safety prooffor multiple inheritance in C++", ["Daniel Wasserrab", "Tobias Nipkow", "Gregor Snelting", "Frank Tip"], "https://doi.org/10.1145/1167473.1167503", 18, "oopsla", 2006]], "Paul T. Darga": [0, ["Efficient software model checking of data structure properties", ["Paul T. Darga", "Chandrasekhar Boyapati"], "https://doi.org/10.1145/1167473.1167504", 20, "oopsla", 2006]], "Chandrasekhar Boyapati": [0, ["Efficient software model checking of data structure properties", ["Paul T. Darga", "Chandrasekhar Boyapati"], "https://doi.org/10.1145/1167473.1167504", 20, "oopsla", 2006]], "Lo Kwun Kit": [0, ["Isolating and relating concerns in requirements using latent semantic analysis", ["Lo Kwun Kit", "Chan Kwun Man", "Elisa L. A. Baniassad"], "https://doi.org/10.1145/1167473.1167506", 14, "oopsla", 2006]], "Chan Kwun Man": [0, ["Isolating and relating concerns in requirements using latent semantic analysis", ["Lo Kwun Kit", "Chan Kwun Man", "Elisa L. A. Baniassad"], "https://doi.org/10.1145/1167473.1167506", 14, "oopsla", 2006]], "Elisa L. A. Baniassad": [0, ["Isolating and relating concerns in requirements using latent semantic analysis", ["Lo Kwun Kit", "Chan Kwun Man", "Elisa L. A. Baniassad"], "https://doi.org/10.1145/1167473.1167506", 14, "oopsla", 2006]], "Gareth Baxter": [0, ["Understanding the shape of Java software", ["Gareth Baxter", "Marcus R. Frean", "James Noble", "Mark Rickerby", "Hayden Smith", "Matt Visser", "Hayden Melton", "Ewan D. Tempero"], "https://doi.org/10.1145/1167473.1167507", 16, "oopsla", 2006]], "Marcus R. Frean": [0, ["Understanding the shape of Java software", ["Gareth Baxter", "Marcus R. Frean", "James Noble", "Mark Rickerby", "Hayden Smith", "Matt Visser", "Hayden Melton", "Ewan D. Tempero"], "https://doi.org/10.1145/1167473.1167507", 16, "oopsla", 2006]], "Mark Rickerby": [0, ["Understanding the shape of Java software", ["Gareth Baxter", "Marcus R. Frean", "James Noble", "Mark Rickerby", "Hayden Smith", "Matt Visser", "Hayden Melton", "Ewan D. Tempero"], "https://doi.org/10.1145/1167473.1167507", 16, "oopsla", 2006]], "Hayden Smith": [0, ["Understanding the shape of Java software", ["Gareth Baxter", "Marcus R. Frean", "James Noble", "Mark Rickerby", "Hayden Smith", "Matt Visser", "Hayden Melton", "Ewan D. Tempero"], "https://doi.org/10.1145/1167473.1167507", 16, "oopsla", 2006]], "Matt Visser": [0, ["Understanding the shape of Java software", ["Gareth Baxter", "Marcus R. Frean", "James Noble", "Mark Rickerby", "Hayden Smith", "Matt Visser", "Hayden Melton", "Ewan D. Tempero"], "https://doi.org/10.1145/1167473.1167507", 16, "oopsla", 2006]], "Hayden Melton": [0, ["Understanding the shape of Java software", ["Gareth Baxter", "Marcus R. Frean", "James Noble", "Mark Rickerby", "Hayden Smith", "Matt Visser", "Hayden Melton", "Ewan D. Tempero"], "https://doi.org/10.1145/1167473.1167507", 16, "oopsla", 2006]], "Ewan D. Tempero": [0, ["Understanding the shape of Java software", ["Gareth Baxter", "Marcus R. Frean", "James Noble", "Mark Rickerby", "Hayden Smith", "Matt Visser", "Hayden Melton", "Ewan D. Tempero"], "https://doi.org/10.1145/1167473.1167507", 16, "oopsla", 2006]], "Naiyana Sahavechaphan": [0, ["XSnippet: mining For sample code", ["Naiyana Sahavechaphan", "Kajal T. Claypool"], "https://doi.org/10.1145/1167473.1167508", 18, "oopsla", 2006]], "Kajal T. Claypool": [0, ["XSnippet: mining For sample code", ["Naiyana Sahavechaphan", "Kajal T. Claypool"], "https://doi.org/10.1145/1167473.1167508", 18, "oopsla", 2006]], "Richard P. Gabriel": [0, ["Conscientious software", ["Richard P. Gabriel", "Ron Goldman"], "https://doi.org/10.1145/1167473.1167510", 18, "oopsla", 2006]], "Ron Goldman": [0, ["Conscientious software", ["Richard P. Gabriel", "Ron Goldman"], "https://doi.org/10.1145/1167473.1167510", 18, "oopsla", 2006]], "Charles Simonyi": [0, ["Intentional software", ["Charles Simonyi", "Magnus Christerson", "Shane Clifford"], "https://doi.org/10.1145/1167473.1167511", 14, "oopsla", 2006]], "Magnus Christerson": [0, ["Intentional software", ["Charles Simonyi", "Magnus Christerson", "Shane Clifford"], "https://doi.org/10.1145/1167473.1167511", 14, "oopsla", 2006]], "Shane Clifford": [0, ["Intentional software", ["Charles Simonyi", "Magnus Christerson", "Shane Clifford"], "https://doi.org/10.1145/1167473.1167511", 14, "oopsla", 2006]], "Jim Waldo": [0, ["On system design", ["Jim Waldo"], "https://doi.org/10.1145/1167473.1167513", 14, "oopsla", 2006]], "Friedrich Steimann": [0, ["The paradoxical success of aspect-oriented programming", ["Friedrich Steimann"], "https://doi.org/10.1145/1167473.1167514", 17, "oopsla", 2006]]}
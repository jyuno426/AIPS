{"Asger Feldthaus": [["Checking correctness of TypeScript interfaces for JavaScript libraries", ["Asger Feldthaus", "Anders Moller"], "https://doi.org/10.1145/2660193.2660215", "oopsla", 2014]], "Anders Moller": [["Checking correctness of TypeScript interfaces for JavaScript libraries", ["Asger Feldthaus", "Anders Moller"], "https://doi.org/10.1145/2660193.2660215", "oopsla", 2014], ["Determinacy in static analysis for jQuery", ["Esben Andreasen", "Anders Moller"], "https://doi.org/10.1145/2660193.2660214", "oopsla", 2014]], "Esben Andreasen": [["Determinacy in static analysis for jQuery", ["Esben Andreasen", "Anders Moller"], "https://doi.org/10.1145/2660193.2660214", "oopsla", 2014]], "Michael Pradel": [["EventBreak: analyzing the responsiveness of user interfaces through performance-guided test generation", ["Michael Pradel", "Parker Schuh", "George C. Necula", "Koushik Sen"], "https://doi.org/10.1145/2660193.2660233", "oopsla", 2014]], "Parker Schuh": [["EventBreak: analyzing the responsiveness of user interfaces through performance-guided test generation", ["Michael Pradel", "Parker Schuh", "George C. Necula", "Koushik Sen"], "https://doi.org/10.1145/2660193.2660233", "oopsla", 2014]], "George C. Necula": [["EventBreak: analyzing the responsiveness of user interfaces through performance-guided test generation", ["Michael Pradel", "Parker Schuh", "George C. Necula", "Koushik Sen"], "https://doi.org/10.1145/2660193.2660233", "oopsla", 2014]], "Koushik Sen": [["EventBreak: analyzing the responsiveness of user interfaces through performance-guided test generation", ["Michael Pradel", "Parker Schuh", "George C. Necula", "Koushik Sen"], "https://doi.org/10.1145/2660193.2660233", "oopsla", 2014]], "Chun-Hung Hsiao": [["Using web corpus statistics for program analysis", ["Chun-Hung Hsiao", "Michael J. Cafarella", "Satish Narayanasamy"], "https://doi.org/10.1145/2660193.2660226", "oopsla", 2014]], "Michael J. Cafarella": [["Using web corpus statistics for program analysis", ["Chun-Hung Hsiao", "Michael J. Cafarella", "Satish Narayanasamy"], "https://doi.org/10.1145/2660193.2660226", "oopsla", 2014]], "Satish Narayanasamy": [["Using web corpus statistics for program analysis", ["Chun-Hung Hsiao", "Michael J. Cafarella", "Satish Narayanasamy"], "https://doi.org/10.1145/2660193.2660226", "oopsla", 2014]], "Earl T. Barr": [["Tardis: affordable time-travel debugging in managed runtimes", ["Earl T. Barr", "Mark Marron"], "https://doi.org/10.1145/2660193.2660209", "oopsla", 2014]], "Mark Marron": [["Tardis: affordable time-travel debugging in managed runtimes", ["Earl T. Barr", "Mark Marron"], "https://doi.org/10.1145/2660193.2660209", "oopsla", 2014]], "Jonathan Bell": [["Phosphor: illuminating dynamic data flow in commodity jvms", ["Jonathan Bell", "Gail E. Kaiser"], "https://doi.org/10.1145/2660193.2660212", "oopsla", 2014]], "Gail E. Kaiser": [["Phosphor: illuminating dynamic data flow in commodity jvms", ["Jonathan Bell", "Gail E. Kaiser"], "https://doi.org/10.1145/2660193.2660212", "oopsla", 2014]], "Luis Pina": [["Rubah: DSU for Java on a stock JVM", ["Luis Pina", "Luis Veiga", "Michael W. Hicks"], "https://doi.org/10.1145/2660193.2660220", "oopsla", 2014]], "Luis Veiga": [["Rubah: DSU for Java on a stock JVM", ["Luis Pina", "Luis Veiga", "Michael W. Hicks"], "https://doi.org/10.1145/2660193.2660220", "oopsla", 2014]], "Michael W. Hicks": [["Rubah: DSU for Java on a stock JVM", ["Luis Pina", "Luis Veiga", "Michael W. Hicks"], "https://doi.org/10.1145/2660193.2660220", "oopsla", 2014]], "Rifat Shahriyar": [["Fast conservative garbage collection", ["Rifat Shahriyar", "Stephen M. Blackburn", "Kathryn S. McKinley"], "https://doi.org/10.1145/2660193.2660198", "oopsla", 2014]], "Stephen M. Blackburn": [["Fast conservative garbage collection", ["Rifat Shahriyar", "Stephen M. Blackburn", "Kathryn S. McKinley"], "https://doi.org/10.1145/2660193.2660198", "oopsla", 2014]], "Kathryn S. McKinley": [["Fast conservative garbage collection", ["Rifat Shahriyar", "Stephen M. Blackburn", "Kathryn S. McKinley"], "https://doi.org/10.1145/2660193.2660198", "oopsla", 2014]], "Eric Holk": [["Region-based memory management for GPU programming languages: enabling rich data structures on a spartan host", ["Eric Holk", "Ryan Newton", "Jeremy G. Siek", "Andrew Lumsdaine"], "https://doi.org/10.1145/2660193.2660244", "oopsla", 2014]], "Ryan Newton": [["Region-based memory management for GPU programming languages: enabling rich data structures on a spartan host", ["Eric Holk", "Ryan Newton", "Jeremy G. Siek", "Andrew Lumsdaine"], "https://doi.org/10.1145/2660193.2660244", "oopsla", 2014]], "Jeremy G. Siek": [["Region-based memory management for GPU programming languages: enabling rich data structures on a spartan host", ["Eric Holk", "Ryan Newton", "Jeremy G. Siek", "Andrew Lumsdaine"], "https://doi.org/10.1145/2660193.2660244", "oopsla", 2014]], "Andrew Lumsdaine": [["Region-based memory management for GPU programming languages: enabling rich data structures on a spartan host", ["Eric Holk", "Ryan Newton", "Jeremy G. Siek", "Andrew Lumsdaine"], "https://doi.org/10.1145/2660193.2660244", "oopsla", 2014]], "Richard Uhler": [["Smten with satisfiability-based search", ["Richard Uhler", "Nirav Dave"], "https://doi.org/10.1145/2660193.2660208", "oopsla", 2014]], "Nirav Dave": [["Smten with satisfiability-based search", ["Richard Uhler", "Nirav Dave"], "https://doi.org/10.1145/2660193.2660208", "oopsla", 2014]], "Jeffrey Bosboom": [["StreamJIT: a commensal compiler for high-performance stream programming", ["Jeffrey Bosboom", "Sumanaruban Rajadurai", "Weng-Fai Wong", "Saman P. Amarasinghe"], "https://doi.org/10.1145/2660193.2660236", "oopsla", 2014]], "Sumanaruban Rajadurai": [["StreamJIT: a commensal compiler for high-performance stream programming", ["Jeffrey Bosboom", "Sumanaruban Rajadurai", "Weng-Fai Wong", "Saman P. Amarasinghe"], "https://doi.org/10.1145/2660193.2660236", "oopsla", 2014]], "Weng-Fai Wong": [["StreamJIT: a commensal compiler for high-performance stream programming", ["Jeffrey Bosboom", "Sumanaruban Rajadurai", "Weng-Fai Wong", "Saman P. Amarasinghe"], "https://doi.org/10.1145/2660193.2660236", "oopsla", 2014]], "Saman P. Amarasinghe": [["StreamJIT: a commensal compiler for high-performance stream programming", ["Jeffrey Bosboom", "Sumanaruban Rajadurai", "Weng-Fai Wong", "Saman P. Amarasinghe"], "https://doi.org/10.1145/2660193.2660236", "oopsla", 2014]], "Emma Tosch": [["SurveyMan: programming and automatically debugging surveys", ["Emma Tosch", "Emery D. Berger"], "https://doi.org/10.1145/2660193.2660206", "oopsla", 2014]], "Emery D. Berger": [["SurveyMan: programming and automatically debugging surveys", ["Emma Tosch", "Emery D. Berger"], "https://doi.org/10.1145/2660193.2660206", "oopsla", 2014], ["CheckCell: data debugging for spreadsheets", ["Daniel W. Barowy", "Dimitar Gochev", "Emery D. Berger"], "https://doi.org/10.1145/2660193.2660207", "oopsla", 2014]], "Thomas Bartenstein": [["Rate types for stream programs", ["Thomas Bartenstein", "Yu David Liu"], "https://doi.org/10.1145/2660193.2660225", "oopsla", 2014]], "Yu David Liu": [["Rate types for stream programs", ["Thomas Bartenstein", "Yu David Liu"], "https://doi.org/10.1145/2660193.2660225", "oopsla", 2014], ["Understanding energy behaviors of thread management constructs", ["Gustavo Pinto", "Fernando Castor", "Yu David Liu"], "https://doi.org/10.1145/2660193.2660235", "oopsla", 2014]], "Nada Amin": [["Foundations of path-dependent types", ["Nada Amin", "Tiark Rompf", "Martin Odersky"], "https://doi.org/10.1145/2660193.2660216", "oopsla", 2014]], "Tiark Rompf": [["Foundations of path-dependent types", ["Nada Amin", "Tiark Rompf", "Martin Odersky"], "https://doi.org/10.1145/2660193.2660216", "oopsla", 2014], ["Staged parser combinators for efficient data processing", ["Manohar Jonnalagedda", "Thierry Coppey", "Sandro Stucki", "Tiark Rompf", "Martin Odersky"], "https://doi.org/10.1145/2660193.2660241", "oopsla", 2014]], "Martin Odersky": [["Foundations of path-dependent types", ["Nada Amin", "Tiark Rompf", "Martin Odersky"], "https://doi.org/10.1145/2660193.2660216", "oopsla", 2014], ["Late data layout: unifying data representation transformations", ["Vlad Ureche", "Eugene Burmako", "Martin Odersky"], "https://doi.org/10.1145/2660193.2660197", "oopsla", 2014], ["Staged parser combinators for efficient data processing", ["Manohar Jonnalagedda", "Thierry Coppey", "Sandro Stucki", "Tiark Rompf", "Martin Odersky"], "https://doi.org/10.1145/2660193.2660241", "oopsla", 2014]], "Esteban Allende": [["Confined gradual typing", ["Esteban Allende", "Johan Fabry", "Ronald Garcia", "Eric Tanter"], "https://doi.org/10.1145/2660193.2660222", "oopsla", 2014]], "Johan Fabry": [["Confined gradual typing", ["Esteban Allende", "Johan Fabry", "Ronald Garcia", "Eric Tanter"], "https://doi.org/10.1145/2660193.2660222", "oopsla", 2014]], "Ronald Garcia": [["Confined gradual typing", ["Esteban Allende", "Johan Fabry", "Ronald Garcia", "Eric Tanter"], "https://doi.org/10.1145/2660193.2660222", "oopsla", 2014]], "Eric Tanter": [["Confined gradual typing", ["Esteban Allende", "Johan Fabry", "Ronald Garcia", "Eric Tanter"], "https://doi.org/10.1145/2660193.2660222", "oopsla", 2014]], "John Altidor": [["Refactoring Java generics by inferring wildcards, in practice", ["John Altidor", "Yannis Smaragdakis"], "https://doi.org/10.1145/2660193.2660203", "oopsla", 2014]], "Yannis Smaragdakis": [["Refactoring Java generics by inferring wildcards, in practice", ["John Altidor", "Yannis Smaragdakis"], "https://doi.org/10.1145/2660193.2660203", "oopsla", 2014]], "Florian David": [["Continuously measuring critical section pressure with the free-lunch profiler", ["Florian David", "Gael Thomas", "Julia Lawall", "Gilles Muller"], "https://doi.org/10.1145/2660193.2660210", "oopsla", 2014]], "Gael Thomas": [["Continuously measuring critical section pressure with the free-lunch profiler", ["Florian David", "Gael Thomas", "Julia Lawall", "Gilles Muller"], "https://doi.org/10.1145/2660193.2660210", "oopsla", 2014]], "Julia Lawall": [["Continuously measuring critical section pressure with the free-lunch profiler", ["Florian David", "Gael Thomas", "Julia Lawall", "Gilles Muller"], "https://doi.org/10.1145/2660193.2660210", "oopsla", 2014]], "Gilles Muller": [["Continuously measuring critical section pressure with the free-lunch profiler", ["Florian David", "Gael Thomas", "Julia Lawall", "Gilles Muller"], "https://doi.org/10.1145/2660193.2660210", "oopsla", 2014]], "Sasa Misailovic": [["Chisel: reliability- and accuracy-aware optimization of approximate computational kernels", ["Sasa Misailovic", "Michael Carbin", "Sara Achour", "Zichao Qi", "Martin C. Rinard"], "https://doi.org/10.1145/2660193.2660231", "oopsla", 2014]], "Michael Carbin": [["Chisel: reliability- and accuracy-aware optimization of approximate computational kernels", ["Sasa Misailovic", "Michael Carbin", "Sara Achour", "Zichao Qi", "Martin C. Rinard"], "https://doi.org/10.1145/2660193.2660231", "oopsla", 2014]], "Sara Achour": [["Chisel: reliability- and accuracy-aware optimization of approximate computational kernels", ["Sasa Misailovic", "Michael Carbin", "Sara Achour", "Zichao Qi", "Martin C. Rinard"], "https://doi.org/10.1145/2660193.2660231", "oopsla", 2014]], "Zichao Qi": [["Chisel: reliability- and accuracy-aware optimization of approximate computational kernels", ["Sasa Misailovic", "Michael Carbin", "Sara Achour", "Zichao Qi", "Martin C. Rinard"], "https://doi.org/10.1145/2660193.2660231", "oopsla", 2014]], "Martin C. Rinard": [["Chisel: reliability- and accuracy-aware optimization of approximate computational kernels", ["Sasa Misailovic", "Michael Carbin", "Sara Achour", "Zichao Qi", "Martin C. Rinard"], "https://doi.org/10.1145/2660193.2660231", "oopsla", 2014]], "Melanie Kambadur": [["An experimental survey of energy management across the stack", ["Melanie Kambadur", "Martha A. Kim"], "https://doi.org/10.1145/2660193.2660196", "oopsla", 2014]], "Martha A. Kim": [["An experimental survey of energy management across the stack", ["Melanie Kambadur", "Martha A. Kim"], "https://doi.org/10.1145/2660193.2660196", "oopsla", 2014]], "Gustavo Pinto": [["Understanding energy behaviors of thread management constructs", ["Gustavo Pinto", "Fernando Castor", "Yu David Liu"], "https://doi.org/10.1145/2660193.2660235", "oopsla", 2014]], "Fernando Castor": [["Understanding energy behaviors of thread management constructs", ["Gustavo Pinto", "Fernando Castor", "Yu David Liu"], "https://doi.org/10.1145/2660193.2660235", "oopsla", 2014]], "Joscha Drechsler": [["Distributed REScala: an update algorithm for distributed reactive programming", ["Joscha Drechsler", "Guido Salvaneschi", "Ragnar Mogk", "Mira Mezini"], "https://doi.org/10.1145/2660193.2660240", "oopsla", 2014]], "Guido Salvaneschi": [["Distributed REScala: an update algorithm for distributed reactive programming", ["Joscha Drechsler", "Guido Salvaneschi", "Ragnar Mogk", "Mira Mezini"], "https://doi.org/10.1145/2660193.2660240", "oopsla", 2014], ["i3QL: language-integrated live data views", ["Ralf Mitschke", "Sebastian Erdweg", "Mirko Kohler", "Mira Mezini", "Guido Salvaneschi"], "https://doi.org/10.1145/2660193.2660242", "oopsla", 2014]], "Ragnar Mogk": [["Distributed REScala: an update algorithm for distributed reactive programming", ["Joscha Drechsler", "Guido Salvaneschi", "Ragnar Mogk", "Mira Mezini"], "https://doi.org/10.1145/2660193.2660240", "oopsla", 2014]], "Mira Mezini": [["Distributed REScala: an update algorithm for distributed reactive programming", ["Joscha Drechsler", "Guido Salvaneschi", "Ragnar Mogk", "Mira Mezini"], "https://doi.org/10.1145/2660193.2660240", "oopsla", 2014], ["i3QL: language-integrated live data views", ["Ralf Mitschke", "Sebastian Erdweg", "Mirko Kohler", "Mira Mezini", "Guido Salvaneschi"], "https://doi.org/10.1145/2660193.2660242", "oopsla", 2014]], "Tillmann Rendel": [["From object algebras to attribute grammars", ["Tillmann Rendel", "Jonathan Immanuel Brachthauser", "Klaus Ostermann"], "https://doi.org/10.1145/2660193.2660237", "oopsla", 2014]], "Jonathan Immanuel Brachthauser": [["From object algebras to attribute grammars", ["Tillmann Rendel", "Jonathan Immanuel Brachthauser", "Klaus Ostermann"], "https://doi.org/10.1145/2660193.2660237", "oopsla", 2014]], "Klaus Ostermann": [["From object algebras to attribute grammars", ["Tillmann Rendel", "Jonathan Immanuel Brachthauser", "Klaus Ostermann"], "https://doi.org/10.1145/2660193.2660237", "oopsla", 2014]], "Vlad Ureche": [["Late data layout: unifying data representation transformations", ["Vlad Ureche", "Eugene Burmako", "Martin Odersky"], "https://doi.org/10.1145/2660193.2660197", "oopsla", 2014]], "Eugene Burmako": [["Late data layout: unifying data representation transformations", ["Vlad Ureche", "Eugene Burmako", "Martin Odersky"], "https://doi.org/10.1145/2660193.2660197", "oopsla", 2014]], "Ralf Mitschke": [["i3QL: language-integrated live data views", ["Ralf Mitschke", "Sebastian Erdweg", "Mirko Kohler", "Mira Mezini", "Guido Salvaneschi"], "https://doi.org/10.1145/2660193.2660242", "oopsla", 2014]], "Sebastian Erdweg": [["i3QL: language-integrated live data views", ["Ralf Mitschke", "Sebastian Erdweg", "Mirko Kohler", "Mira Mezini", "Guido Salvaneschi"], "https://doi.org/10.1145/2660193.2660242", "oopsla", 2014]], "Mirko Kohler": [["i3QL: language-integrated live data views", ["Ralf Mitschke", "Sebastian Erdweg", "Mirko Kohler", "Mira Mezini", "Guido Salvaneschi"], "https://doi.org/10.1145/2660193.2660242", "oopsla", 2014]], "Dhruva R. Chakrabarti": [["Atlas: leveraging locks for non-volatile memory consistency", ["Dhruva R. Chakrabarti", "Hans-Juergen Boehm", "Kumud Bhandari"], "https://doi.org/10.1145/2660193.2660224", "oopsla", 2014]], "Hans-Juergen Boehm": [["Atlas: leveraging locks for non-volatile memory consistency", ["Dhruva R. Chakrabarti", "Hans-Juergen Boehm", "Kumud Bhandari"], "https://doi.org/10.1145/2660193.2660224", "oopsla", 2014]], "Kumud Bhandari": [["Atlas: leveraging locks for non-volatile memory consistency", ["Dhruva R. Chakrabarti", "Hans-Juergen Boehm", "Kumud Bhandari"], "https://doi.org/10.1145/2660193.2660224", "oopsla", 2014]], "Guy L. Steele Jr.": [["Fast splittable pseudorandom number generators", ["Guy L. Steele Jr.", "Doug Lea", "Christine H. Flood"], "https://doi.org/10.1145/2660193.2660195", "oopsla", 2014]], "Doug Lea": [["Fast splittable pseudorandom number generators", ["Guy L. Steele Jr.", "Doug Lea", "Christine H. Flood"], "https://doi.org/10.1145/2660193.2660195", "oopsla", 2014]], "Christine H. Flood": [["Fast splittable pseudorandom number generators", ["Guy L. Steele Jr.", "Doug Lea", "Christine H. Flood"], "https://doi.org/10.1145/2660193.2660195", "oopsla", 2014]], "Malavika Samak": [["Multithreaded test synthesis for deadlock detection", ["Malavika Samak", "Murali Krishna Ramanathan"], "https://doi.org/10.1145/2660193.2660238", "oopsla", 2014]], "Murali Krishna Ramanathan": [["Multithreaded test synthesis for deadlock detection", ["Malavika Samak", "Murali Krishna Ramanathan"], "https://doi.org/10.1145/2660193.2660238", "oopsla", 2014]], "Tom Bergan": [["Symbolic execution of multithreaded programs from arbitrary program contexts", ["Tom Bergan", "Dan Grossman", "Luis Ceze"], "https://doi.org/10.1145/2660193.2660200", "oopsla", 2014]], "Dan Grossman": [["Symbolic execution of multithreaded programs from arbitrary program contexts", ["Tom Bergan", "Dan Grossman", "Luis Ceze"], "https://doi.org/10.1145/2660193.2660200", "oopsla", 2014]], "Luis Ceze": [["Symbolic execution of multithreaded programs from arbitrary program contexts", ["Tom Bergan", "Dan Grossman", "Luis Ceze"], "https://doi.org/10.1145/2660193.2660200", "oopsla", 2014], ["Alembic: automatic locality extraction via migration", ["Brandon Holt", "Preston Briggs", "Luis Ceze", "Mark Oskin"], "https://doi.org/10.1145/2660193.2660194", "oopsla", 2014]], "Daniel W. Barowy": [["CheckCell: data debugging for spreadsheets", ["Daniel W. Barowy", "Dimitar Gochev", "Emery D. Berger"], "https://doi.org/10.1145/2660193.2660207", "oopsla", 2014]], "Dimitar Gochev": [["CheckCell: data debugging for spreadsheets", ["Daniel W. Barowy", "Dimitar Gochev", "Emery D. Berger"], "https://doi.org/10.1145/2660193.2660207", "oopsla", 2014]], "Zvonimir Pavlinovic": [["Finding minimum type error sources", ["Zvonimir Pavlinovic", "Tim King", "Thomas Wies"], "https://doi.org/10.1145/2660193.2660230", "oopsla", 2014]], "Tim King": [["Finding minimum type error sources", ["Zvonimir Pavlinovic", "Tim King", "Thomas Wies"], "https://doi.org/10.1145/2660193.2660230", "oopsla", 2014]], "Thomas Wies": [["Finding minimum type error sources", ["Zvonimir Pavlinovic", "Tim King", "Thomas Wies"], "https://doi.org/10.1145/2660193.2660230", "oopsla", 2014]], "Peng Liu": [["Flint: fixing linearizability violations", ["Peng Liu", "Omer Tripp", "Xiangyu Zhang"], "https://doi.org/10.1145/2660193.2660217", "oopsla", 2014]], "Omer Tripp": [["Flint: fixing linearizability violations", ["Peng Liu", "Omer Tripp", "Xiangyu Zhang"], "https://doi.org/10.1145/2660193.2660217", "oopsla", 2014]], "Xiangyu Zhang": [["Flint: fixing linearizability violations", ["Peng Liu", "Omer Tripp", "Xiangyu Zhang"], "https://doi.org/10.1145/2660193.2660217", "oopsla", 2014]], "Linhai Song": [["Statistical debugging for real-world performance problems", ["Linhai Song", "Shan Lu"], "https://doi.org/10.1145/2660193.2660234", "oopsla", 2014]], "Shan Lu": [["Statistical debugging for real-world performance problems", ["Linhai Song", "Shan Lu"], "https://doi.org/10.1145/2660193.2660234", "oopsla", 2014]], "Terence Parr": [["Adaptive LL(*) parsing: the power of dynamic analysis", ["Terence Parr", "Sam Harwell", "Kathleen Fisher"], "https://doi.org/10.1145/2660193.2660202", "oopsla", 2014]], "Sam Harwell": [["Adaptive LL(*) parsing: the power of dynamic analysis", ["Terence Parr", "Sam Harwell", "Kathleen Fisher"], "https://doi.org/10.1145/2660193.2660202", "oopsla", 2014]], "Kathleen Fisher": [["Adaptive LL(*) parsing: the power of dynamic analysis", ["Terence Parr", "Sam Harwell", "Kathleen Fisher"], "https://doi.org/10.1145/2660193.2660202", "oopsla", 2014]], "Milos Gligoric": [["Automated migration of build scripts using dynamic analysis and search-based refactoring", ["Milos Gligoric", "Wolfram Schulte", "Chandra Prasad", "Danny van Velzen", "Iman Narasamdya", "Benjamin Livshits"], "https://doi.org/10.1145/2660193.2660239", "oopsla", 2014]], "Wolfram Schulte": [["Automated migration of build scripts using dynamic analysis and search-based refactoring", ["Milos Gligoric", "Wolfram Schulte", "Chandra Prasad", "Danny van Velzen", "Iman Narasamdya", "Benjamin Livshits"], "https://doi.org/10.1145/2660193.2660239", "oopsla", 2014]], "Chandra Prasad": [["Automated migration of build scripts using dynamic analysis and search-based refactoring", ["Milos Gligoric", "Wolfram Schulte", "Chandra Prasad", "Danny van Velzen", "Iman Narasamdya", "Benjamin Livshits"], "https://doi.org/10.1145/2660193.2660239", "oopsla", 2014]], "Danny van Velzen": [["Automated migration of build scripts using dynamic analysis and search-based refactoring", ["Milos Gligoric", "Wolfram Schulte", "Chandra Prasad", "Danny van Velzen", "Iman Narasamdya", "Benjamin Livshits"], "https://doi.org/10.1145/2660193.2660239", "oopsla", 2014]], "Iman Narasamdya": [["Automated migration of build scripts using dynamic analysis and search-based refactoring", ["Milos Gligoric", "Wolfram Schulte", "Chandra Prasad", "Danny van Velzen", "Iman Narasamdya", "Benjamin Livshits"], "https://doi.org/10.1145/2660193.2660239", "oopsla", 2014]], "Benjamin Livshits": [["Automated migration of build scripts using dynamic analysis and search-based refactoring", ["Milos Gligoric", "Wolfram Schulte", "Chandra Prasad", "Danny van Velzen", "Iman Narasamdya", "Benjamin Livshits"], "https://doi.org/10.1145/2660193.2660239", "oopsla", 2014]], "Vineet Kumar": [["MIX10: compiling MATLAB to X10 for high performance", ["Vineet Kumar", "Laurie J. Hendren"], "https://doi.org/10.1145/2660193.2660218", "oopsla", 2014]], "Laurie J. Hendren": [["MIX10: compiling MATLAB to X10 for high performance", ["Vineet Kumar", "Laurie J. Hendren"], "https://doi.org/10.1145/2660193.2660218", "oopsla", 2014]], "Manohar Jonnalagedda": [["Staged parser combinators for efficient data processing", ["Manohar Jonnalagedda", "Thierry Coppey", "Sandro Stucki", "Tiark Rompf", "Martin Odersky"], "https://doi.org/10.1145/2660193.2660241", "oopsla", 2014]], "Thierry Coppey": [["Staged parser combinators for efficient data processing", ["Manohar Jonnalagedda", "Thierry Coppey", "Sandro Stucki", "Tiark Rompf", "Martin Odersky"], "https://doi.org/10.1145/2660193.2660241", "oopsla", 2014]], "Sandro Stucki": [["Staged parser combinators for efficient data processing", ["Manohar Jonnalagedda", "Thierry Coppey", "Sandro Stucki", "Tiark Rompf", "Martin Odersky"], "https://doi.org/10.1145/2660193.2660241", "oopsla", 2014]], "Nicolas Rosner": [["Bounded exhaustive test input generation from hybrid invariants", ["Nicolas Rosner", "Valeria S. Bengolea", "Pablo Ponzio", "Shadi Abdul Khalek", "Nazareno Aguirre", "Marcelo F. Frias", "Sarfraz Khurshid"], "https://doi.org/10.1145/2660193.2660232", "oopsla", 2014]], "Valeria S. Bengolea": [["Bounded exhaustive test input generation from hybrid invariants", ["Nicolas Rosner", "Valeria S. Bengolea", "Pablo Ponzio", "Shadi Abdul Khalek", "Nazareno Aguirre", "Marcelo F. Frias", "Sarfraz Khurshid"], "https://doi.org/10.1145/2660193.2660232", "oopsla", 2014]], "Pablo Ponzio": [["Bounded exhaustive test input generation from hybrid invariants", ["Nicolas Rosner", "Valeria S. Bengolea", "Pablo Ponzio", "Shadi Abdul Khalek", "Nazareno Aguirre", "Marcelo F. Frias", "Sarfraz Khurshid"], "https://doi.org/10.1145/2660193.2660232", "oopsla", 2014]], "Shadi Abdul Khalek": [["Bounded exhaustive test input generation from hybrid invariants", ["Nicolas Rosner", "Valeria S. Bengolea", "Pablo Ponzio", "Shadi Abdul Khalek", "Nazareno Aguirre", "Marcelo F. Frias", "Sarfraz Khurshid"], "https://doi.org/10.1145/2660193.2660232", "oopsla", 2014]], "Nazareno Aguirre": [["Bounded exhaustive test input generation from hybrid invariants", ["Nicolas Rosner", "Valeria S. Bengolea", "Pablo Ponzio", "Shadi Abdul Khalek", "Nazareno Aguirre", "Marcelo F. Frias", "Sarfraz Khurshid"], "https://doi.org/10.1145/2660193.2660232", "oopsla", 2014]], "Marcelo F. Frias": [["Bounded exhaustive test input generation from hybrid invariants", ["Nicolas Rosner", "Valeria S. Bengolea", "Pablo Ponzio", "Shadi Abdul Khalek", "Nazareno Aguirre", "Marcelo F. Frias", "Sarfraz Khurshid"], "https://doi.org/10.1145/2660193.2660232", "oopsla", 2014]], "Sarfraz Khurshid": [["Bounded exhaustive test input generation from hybrid invariants", ["Nicolas Rosner", "Valeria S. Bengolea", "Pablo Ponzio", "Shadi Abdul Khalek", "Nazareno Aguirre", "Marcelo F. Frias", "Sarfraz Khurshid"], "https://doi.org/10.1145/2660193.2660232", "oopsla", 2014]], "Peng Wang": [["Compiler verification meets cross-language linking via data abstraction", ["Peng Wang", "Santiago Cuellar", "Adam Chlipala"], "https://doi.org/10.1145/2660193.2660201", "oopsla", 2014]], "Santiago Cuellar": [["Compiler verification meets cross-language linking via data abstraction", ["Peng Wang", "Santiago Cuellar", "Adam Chlipala"], "https://doi.org/10.1145/2660193.2660201", "oopsla", 2014]], "Adam Chlipala": [["Compiler verification meets cross-language linking via data abstraction", ["Peng Wang", "Santiago Cuellar", "Adam Chlipala"], "https://doi.org/10.1145/2660193.2660201", "oopsla", 2014]], "Aaron Turon": [["GPS: navigating weak memory with ghosts, protocols, and separation", ["Aaron Turon", "Viktor Vafeiadis", "Derek Dreyer"], "https://doi.org/10.1145/2660193.2660243", "oopsla", 2014]], "Viktor Vafeiadis": [["GPS: navigating weak memory with ghosts, protocols, and separation", ["Aaron Turon", "Viktor Vafeiadis", "Derek Dreyer"], "https://doi.org/10.1145/2660193.2660243", "oopsla", 2014]], "Derek Dreyer": [["GPS: navigating weak memory with ghosts, protocols, and separation", ["Aaron Turon", "Viktor Vafeiadis", "Derek Dreyer"], "https://doi.org/10.1145/2660193.2660243", "oopsla", 2014]], "Ankush Desai": [["Natural proofs for asynchronous programs using almost-synchronous reductions", ["Ankush Desai", "Pranav Garg", "P. Madhusudan"], "https://doi.org/10.1145/2660193.2660211", "oopsla", 2014]], "Pranav Garg": [["Natural proofs for asynchronous programs using almost-synchronous reductions", ["Ankush Desai", "Pranav Garg", "P. Madhusudan"], "https://doi.org/10.1145/2660193.2660211", "oopsla", 2014]], "P. Madhusudan": [["Natural proofs for asynchronous programs using almost-synchronous reductions", ["Ankush Desai", "Pranav Garg", "P. Madhusudan"], "https://doi.org/10.1145/2660193.2660211", "oopsla", 2014]], "Wei Zhang": [["Accelerating iterators in optimizing AST interpreters", ["Wei Zhang", "Per Larsen", "Stefan Brunthaler", "Michael Franz"], "https://doi.org/10.1145/2660193.2660223", "oopsla", 2014]], "Per Larsen": [["Accelerating iterators in optimizing AST interpreters", ["Wei Zhang", "Per Larsen", "Stefan Brunthaler", "Michael Franz"], "https://doi.org/10.1145/2660193.2660223", "oopsla", 2014]], "Stefan Brunthaler": [["Accelerating iterators in optimizing AST interpreters", ["Wei Zhang", "Per Larsen", "Stefan Brunthaler", "Michael Franz"], "https://doi.org/10.1145/2660193.2660223", "oopsla", 2014]], "Michael Franz": [["Accelerating iterators in optimizing AST interpreters", ["Wei Zhang", "Per Larsen", "Stefan Brunthaler", "Michael Franz"], "https://doi.org/10.1145/2660193.2660223", "oopsla", 2014]], "Zhijia Zhao": [["Call sequence prediction through probabilistic calling automata", ["Zhijia Zhao", "Bo Wu", "Mingzhou Zhou", "Yufei Ding", "Jianhua Sun", "Xipeng Shen", "Youfeng Wu"], "https://doi.org/10.1145/2660193.2660221", "oopsla", 2014]], "Bo Wu": [["Call sequence prediction through probabilistic calling automata", ["Zhijia Zhao", "Bo Wu", "Mingzhou Zhou", "Yufei Ding", "Jianhua Sun", "Xipeng Shen", "Youfeng Wu"], "https://doi.org/10.1145/2660193.2660221", "oopsla", 2014]], "Mingzhou Zhou": [["Call sequence prediction through probabilistic calling automata", ["Zhijia Zhao", "Bo Wu", "Mingzhou Zhou", "Yufei Ding", "Jianhua Sun", "Xipeng Shen", "Youfeng Wu"], "https://doi.org/10.1145/2660193.2660221", "oopsla", 2014], ["Space-efficient multi-versioning for input-adaptive feedback-driven program optimizations", ["Mingzhou Zhou", "Xipeng Shen", "Yaoqing Gao", "Graham Yiu"], "https://doi.org/10.1145/2660193.2660229", "oopsla", 2014]], "Yufei Ding": [["Call sequence prediction through probabilistic calling automata", ["Zhijia Zhao", "Bo Wu", "Mingzhou Zhou", "Yufei Ding", "Jianhua Sun", "Xipeng Shen", "Youfeng Wu"], "https://doi.org/10.1145/2660193.2660221", "oopsla", 2014]], "Jianhua Sun": [["Call sequence prediction through probabilistic calling automata", ["Zhijia Zhao", "Bo Wu", "Mingzhou Zhou", "Yufei Ding", "Jianhua Sun", "Xipeng Shen", "Youfeng Wu"], "https://doi.org/10.1145/2660193.2660221", "oopsla", 2014]], "Xipeng Shen": [["Call sequence prediction through probabilistic calling automata", ["Zhijia Zhao", "Bo Wu", "Mingzhou Zhou", "Yufei Ding", "Jianhua Sun", "Xipeng Shen", "Youfeng Wu"], "https://doi.org/10.1145/2660193.2660221", "oopsla", 2014], ["Space-efficient multi-versioning for input-adaptive feedback-driven program optimizations", ["Mingzhou Zhou", "Xipeng Shen", "Yaoqing Gao", "Graham Yiu"], "https://doi.org/10.1145/2660193.2660229", "oopsla", 2014]], "Youfeng Wu": [["Call sequence prediction through probabilistic calling automata", ["Zhijia Zhao", "Bo Wu", "Mingzhou Zhou", "Yufei Ding", "Jianhua Sun", "Xipeng Shen", "Youfeng Wu"], "https://doi.org/10.1145/2660193.2660221", "oopsla", 2014]], "Yaoqing Gao": [["Space-efficient multi-versioning for input-adaptive feedback-driven program optimizations", ["Mingzhou Zhou", "Xipeng Shen", "Yaoqing Gao", "Graham Yiu"], "https://doi.org/10.1145/2660193.2660229", "oopsla", 2014]], "Graham Yiu": [["Space-efficient multi-versioning for input-adaptive feedback-driven program optimizations", ["Mingzhou Zhou", "Xipeng Shen", "Yaoqing Gao", "Graham Yiu"], "https://doi.org/10.1145/2660193.2660229", "oopsla", 2014]], "Keith Adams": [["The hiphop virtual machine", ["Keith Adams", "Jason Evans", "Bertrand Maher", "Guilherme Ottoni", "Andrew Paroski", "Brett Simmers", "Edwin Smith", "Owen Yamauchi"], "https://doi.org/10.1145/2660193.2660199", "oopsla", 2014]], "Jason Evans": [["The hiphop virtual machine", ["Keith Adams", "Jason Evans", "Bertrand Maher", "Guilherme Ottoni", "Andrew Paroski", "Brett Simmers", "Edwin Smith", "Owen Yamauchi"], "https://doi.org/10.1145/2660193.2660199", "oopsla", 2014]], "Bertrand Maher": [["The hiphop virtual machine", ["Keith Adams", "Jason Evans", "Bertrand Maher", "Guilherme Ottoni", "Andrew Paroski", "Brett Simmers", "Edwin Smith", "Owen Yamauchi"], "https://doi.org/10.1145/2660193.2660199", "oopsla", 2014]], "Guilherme Ottoni": [["The hiphop virtual machine", ["Keith Adams", "Jason Evans", "Bertrand Maher", "Guilherme Ottoni", "Andrew Paroski", "Brett Simmers", "Edwin Smith", "Owen Yamauchi"], "https://doi.org/10.1145/2660193.2660199", "oopsla", 2014]], "Andrew Paroski": [["The hiphop virtual machine", ["Keith Adams", "Jason Evans", "Bertrand Maher", "Guilherme Ottoni", "Andrew Paroski", "Brett Simmers", "Edwin Smith", "Owen Yamauchi"], "https://doi.org/10.1145/2660193.2660199", "oopsla", 2014]], "Brett Simmers": [["The hiphop virtual machine", ["Keith Adams", "Jason Evans", "Bertrand Maher", "Guilherme Ottoni", "Andrew Paroski", "Brett Simmers", "Edwin Smith", "Owen Yamauchi"], "https://doi.org/10.1145/2660193.2660199", "oopsla", 2014]], "Edwin Smith": [["The hiphop virtual machine", ["Keith Adams", "Jason Evans", "Bertrand Maher", "Guilherme Ottoni", "Andrew Paroski", "Brett Simmers", "Edwin Smith", "Owen Yamauchi"], "https://doi.org/10.1145/2660193.2660199", "oopsla", 2014]], "Owen Yamauchi": [["The hiphop virtual machine", ["Keith Adams", "Jason Evans", "Bertrand Maher", "Guilherme Ottoni", "Andrew Paroski", "Brett Simmers", "Edwin Smith", "Owen Yamauchi"], "https://doi.org/10.1145/2660193.2660199", "oopsla", 2014]], "Henrique Nazare": [["Validation of memory accesses through symbolic analyses", ["Henrique Nazare", "Izabela Maffra", "Willer Santos", "Leonardo Barbosa e Oliveira", "Laure Gonnord", "Fernando Magno Quintao Pereira"], "https://doi.org/10.1145/2660193.2660205", "oopsla", 2014]], "Izabela Maffra": [["Validation of memory accesses through symbolic analyses", ["Henrique Nazare", "Izabela Maffra", "Willer Santos", "Leonardo Barbosa e Oliveira", "Laure Gonnord", "Fernando Magno Quintao Pereira"], "https://doi.org/10.1145/2660193.2660205", "oopsla", 2014]], "Willer Santos": [["Validation of memory accesses through symbolic analyses", ["Henrique Nazare", "Izabela Maffra", "Willer Santos", "Leonardo Barbosa e Oliveira", "Laure Gonnord", "Fernando Magno Quintao Pereira"], "https://doi.org/10.1145/2660193.2660205", "oopsla", 2014]], "Leonardo Barbosa e Oliveira": [["Validation of memory accesses through symbolic analyses", ["Henrique Nazare", "Izabela Maffra", "Willer Santos", "Leonardo Barbosa e Oliveira", "Laure Gonnord", "Fernando Magno Quintao Pereira"], "https://doi.org/10.1145/2660193.2660205", "oopsla", 2014]], "Laure Gonnord": [["Validation of memory accesses through symbolic analyses", ["Henrique Nazare", "Izabela Maffra", "Willer Santos", "Leonardo Barbosa e Oliveira", "Laure Gonnord", "Fernando Magno Quintao Pereira"], "https://doi.org/10.1145/2660193.2660205", "oopsla", 2014]], "Fernando Magno Quintao Pereira": [["Validation of memory accesses through symbolic analyses", ["Henrique Nazare", "Izabela Maffra", "Willer Santos", "Leonardo Barbosa e Oliveira", "Laure Gonnord", "Fernando Magno Quintao Pereira"], "https://doi.org/10.1145/2660193.2660205", "oopsla", 2014]], "Nimrod Partush": [["Abstract semantic differencing via speculative correlation", ["Nimrod Partush", "Eran Yahav"], "https://doi.org/10.1145/2660193.2660245", "oopsla", 2014]], "Eran Yahav": [["Abstract semantic differencing via speculative correlation", ["Nimrod Partush", "Eran Yahav"], "https://doi.org/10.1145/2660193.2660245", "oopsla", 2014]], "Qirun Zhang": [["Efficient subcubic alias analysis for C", ["Qirun Zhang", "Xiao Xiao", "Charles Zhang", "Hao Yuan", "Zhendong Su"], "https://doi.org/10.1145/2660193.2660213", "oopsla", 2014]], "Xiao Xiao": [["Efficient subcubic alias analysis for C", ["Qirun Zhang", "Xiao Xiao", "Charles Zhang", "Hao Yuan", "Zhendong Su"], "https://doi.org/10.1145/2660193.2660213", "oopsla", 2014]], "Charles Zhang": [["Efficient subcubic alias analysis for C", ["Qirun Zhang", "Xiao Xiao", "Charles Zhang", "Hao Yuan", "Zhendong Su"], "https://doi.org/10.1145/2660193.2660213", "oopsla", 2014]], "Hao Yuan": [["Efficient subcubic alias analysis for C", ["Qirun Zhang", "Xiao Xiao", "Charles Zhang", "Hao Yuan", "Zhendong Su"], "https://doi.org/10.1145/2660193.2660213", "oopsla", 2014]], "Zhendong Su": [["Efficient subcubic alias analysis for C", ["Qirun Zhang", "Xiao Xiao", "Charles Zhang", "Hao Yuan", "Zhendong Su"], "https://doi.org/10.1145/2660193.2660213", "oopsla", 2014]], "Lucas Brutschy": [["Static analysis for independent app developers", ["Lucas Brutschy", "Pietro Ferrara", "Peter Muller"], "https://doi.org/10.1145/2660193.2660219", "oopsla", 2014]], "Pietro Ferrara": [["Static analysis for independent app developers", ["Lucas Brutschy", "Pietro Ferrara", "Peter Muller"], "https://doi.org/10.1145/2660193.2660219", "oopsla", 2014]], "Peter Muller": [["Static analysis for independent app developers", ["Lucas Brutschy", "Pietro Ferrara", "Peter Muller"], "https://doi.org/10.1145/2660193.2660219", "oopsla", 2014]], "Keval Vora": [["ASPIRE: exploiting asynchronous parallelism in iterative algorithms using a relaxed consistency based DSM", ["Keval Vora", "Sai Charan Koduru", "Rajiv Gupta"], "https://doi.org/10.1145/2660193.2660227", "oopsla", 2014]], "Sai Charan Koduru": [["ASPIRE: exploiting asynchronous parallelism in iterative algorithms using a relaxed consistency based DSM", ["Keval Vora", "Sai Charan Koduru", "Rajiv Gupta"], "https://doi.org/10.1145/2660193.2660227", "oopsla", 2014]], "Rajiv Gupta": [["ASPIRE: exploiting asynchronous parallelism in iterative algorithms using a relaxed consistency based DSM", ["Keval Vora", "Sai Charan Koduru", "Rajiv Gupta"], "https://doi.org/10.1145/2660193.2660227", "oopsla", 2014]], "Brandon Holt": [["Alembic: automatic locality extraction via migration", ["Brandon Holt", "Preston Briggs", "Luis Ceze", "Mark Oskin"], "https://doi.org/10.1145/2660193.2660194", "oopsla", 2014]], "Preston Briggs": [["Alembic: automatic locality extraction via migration", ["Brandon Holt", "Preston Briggs", "Luis Ceze", "Mark Oskin"], "https://doi.org/10.1145/2660193.2660194", "oopsla", 2014]], "Mark Oskin": [["Alembic: automatic locality extraction via migration", ["Brandon Holt", "Preston Briggs", "Luis Ceze", "Mark Oskin"], "https://doi.org/10.1145/2660193.2660194", "oopsla", 2014]], "Tian Xiao": [["Cybertron: pushing the limit on I/O reduction in data-parallel programs", ["Tian Xiao", "Zhenyu Guo", "Hucheng Zhou", "Jiaxing Zhang", "Xu Zhao", "Chencheng Ye", "Xi Wang", "Wei Lin", "Wenguang Chen", "Lidong Zhou"], "https://doi.org/10.1145/2660193.2660204", "oopsla", 2014]], "Zhenyu Guo": [["Cybertron: pushing the limit on I/O reduction in data-parallel programs", ["Tian Xiao", "Zhenyu Guo", "Hucheng Zhou", "Jiaxing Zhang", "Xu Zhao", "Chencheng Ye", "Xi Wang", "Wei Lin", "Wenguang Chen", "Lidong Zhou"], "https://doi.org/10.1145/2660193.2660204", "oopsla", 2014]], "Hucheng Zhou": [["Cybertron: pushing the limit on I/O reduction in data-parallel programs", ["Tian Xiao", "Zhenyu Guo", "Hucheng Zhou", "Jiaxing Zhang", "Xu Zhao", "Chencheng Ye", "Xi Wang", "Wei Lin", "Wenguang Chen", "Lidong Zhou"], "https://doi.org/10.1145/2660193.2660204", "oopsla", 2014]], "Jiaxing Zhang": [["Cybertron: pushing the limit on I/O reduction in data-parallel programs", ["Tian Xiao", "Zhenyu Guo", "Hucheng Zhou", "Jiaxing Zhang", "Xu Zhao", "Chencheng Ye", "Xi Wang", "Wei Lin", "Wenguang Chen", "Lidong Zhou"], "https://doi.org/10.1145/2660193.2660204", "oopsla", 2014]], "Xu Zhao": [["Cybertron: pushing the limit on I/O reduction in data-parallel programs", ["Tian Xiao", "Zhenyu Guo", "Hucheng Zhou", "Jiaxing Zhang", "Xu Zhao", "Chencheng Ye", "Xi Wang", "Wei Lin", "Wenguang Chen", "Lidong Zhou"], "https://doi.org/10.1145/2660193.2660204", "oopsla", 2014]], "Chencheng Ye": [["Cybertron: pushing the limit on I/O reduction in data-parallel programs", ["Tian Xiao", "Zhenyu Guo", "Hucheng Zhou", "Jiaxing Zhang", "Xu Zhao", "Chencheng Ye", "Xi Wang", "Wei Lin", "Wenguang Chen", "Lidong Zhou"], "https://doi.org/10.1145/2660193.2660204", "oopsla", 2014]], "Xi Wang": [["Cybertron: pushing the limit on I/O reduction in data-parallel programs", ["Tian Xiao", "Zhenyu Guo", "Hucheng Zhou", "Jiaxing Zhang", "Xu Zhao", "Chencheng Ye", "Xi Wang", "Wei Lin", "Wenguang Chen", "Lidong Zhou"], "https://doi.org/10.1145/2660193.2660204", "oopsla", 2014]], "Wei Lin": [["Cybertron: pushing the limit on I/O reduction in data-parallel programs", ["Tian Xiao", "Zhenyu Guo", "Hucheng Zhou", "Jiaxing Zhang", "Xu Zhao", "Chencheng Ye", "Xi Wang", "Wei Lin", "Wenguang Chen", "Lidong Zhou"], "https://doi.org/10.1145/2660193.2660204", "oopsla", 2014]], "Wenguang Chen": [["Cybertron: pushing the limit on I/O reduction in data-parallel programs", ["Tian Xiao", "Zhenyu Guo", "Hucheng Zhou", "Jiaxing Zhang", "Xu Zhao", "Chencheng Ye", "Xi Wang", "Wei Lin", "Wenguang Chen", "Lidong Zhou"], "https://doi.org/10.1145/2660193.2660204", "oopsla", 2014]], "Lidong Zhou": [["Cybertron: pushing the limit on I/O reduction in data-parallel programs", ["Tian Xiao", "Zhenyu Guo", "Hucheng Zhou", "Jiaxing Zhang", "Xu Zhao", "Chencheng Ye", "Xi Wang", "Wei Lin", "Wenguang Chen", "Lidong Zhou"], "https://doi.org/10.1145/2660193.2660204", "oopsla", 2014]], "Cosmin Radoi": [["Translating imperative code to MapReduce", ["Cosmin Radoi", "Stephen J. Fink", "Rodric M. Rabbah", "Manu Sridharan"], "https://doi.org/10.1145/2660193.2660228", "oopsla", 2014]], "Stephen J. Fink": [["Translating imperative code to MapReduce", ["Cosmin Radoi", "Stephen J. Fink", "Rodric M. Rabbah", "Manu Sridharan"], "https://doi.org/10.1145/2660193.2660228", "oopsla", 2014]], "Rodric M. Rabbah": [["Translating imperative code to MapReduce", ["Cosmin Radoi", "Stephen J. Fink", "Rodric M. Rabbah", "Manu Sridharan"], "https://doi.org/10.1145/2660193.2660228", "oopsla", 2014]], "Manu Sridharan": [["Translating imperative code to MapReduce", ["Cosmin Radoi", "Stephen J. Fink", "Rodric M. Rabbah", "Manu Sridharan"], "https://doi.org/10.1145/2660193.2660228", "oopsla", 2014]]}
{"Emery D. Berger": [0, ["Reconsidering custom memory allocation", ["Emery D. Berger", "Benjamin G. Zorn", "Kathryn S. McKinley"], "https://doi.org/10.1145/582419.582421", "oopsla", 2002]], "Benjamin G. Zorn": [0, ["Reconsidering custom memory allocation", ["Emery D. Berger", "Benjamin G. Zorn", "Kathryn S. McKinley"], "https://doi.org/10.1145/582419.582421", "oopsla", 2002]], "Kathryn S. McKinley": [0, ["Reconsidering custom memory allocation", ["Emery D. Berger", "Benjamin G. Zorn", "Kathryn S. McKinley"], "https://doi.org/10.1145/582419.582421", "oopsla", 2002]], "Yefim Shuf": [0, ["Creating and preserving locality of java applications at allocation and garbage collection times", ["Yefim Shuf", "Manish Gupta", "Hubertus Franke", "Andrew W. Appel", "Jaswinder Pal Singh"], "https://doi.org/10.1145/582419.582422", "oopsla", 2002]], "Manish Gupta": [0, ["Creating and preserving locality of java applications at allocation and garbage collection times", ["Yefim Shuf", "Manish Gupta", "Hubertus Franke", "Andrew W. Appel", "Jaswinder Pal Singh"], "https://doi.org/10.1145/582419.582422", "oopsla", 2002]], "Hubertus Franke": [0, ["Creating and preserving locality of java applications at allocation and garbage collection times", ["Yefim Shuf", "Manish Gupta", "Hubertus Franke", "Andrew W. Appel", "Jaswinder Pal Singh"], "https://doi.org/10.1145/582419.582422", "oopsla", 2002]], "Andrew W. Appel": [0, ["Creating and preserving locality of java applications at allocation and garbage collection times", ["Yefim Shuf", "Manish Gupta", "Hubertus Franke", "Andrew W. Appel", "Jaswinder Pal Singh"], "https://doi.org/10.1145/582419.582422", "oopsla", 2002]], "Jaswinder Pal Singh": [0, ["Creating and preserving locality of java applications at allocation and garbage collection times", ["Yefim Shuf", "Manish Gupta", "Hubertus Franke", "Andrew W. Appel", "Jaswinder Pal Singh"], "https://doi.org/10.1145/582419.582422", "oopsla", 2002]], "Magnus E. Bjornsson": [0, ["BuddyCache: high-performance object storage for collaborative strong-consistency applications in a WAN", ["Magnus E. Bjornsson", "Liuba Shrira"], "https://doi.org/10.1145/582419.582423", "oopsla", 2002]], "Liuba Shrira": [0, ["BuddyCache: high-performance object storage for collaborative strong-consistency applications in a WAN", ["Magnus E. Bjornsson", "Liuba Shrira"], "https://doi.org/10.1145/582419.582423", "oopsla", 2002]], "Dragos-Anton Manolescu": [0, ["Workflow enactment with continuation and future objects", ["Dragos-Anton Manolescu"], "https://doi.org/10.1145/582419.582425", "oopsla", 2002]], "Mira Mezini": [0, ["Integrating independent components with on-demand remodularization", ["Mira Mezini", "Klaus Ostermann"], "https://doi.org/10.1145/582419.582426", "oopsla", 2002]], "Klaus Ostermann": [0, ["Integrating independent components with on-demand remodularization", ["Mira Mezini", "Klaus Ostermann"], "https://doi.org/10.1145/582419.582426", "oopsla", 2002]], "Marc-Olivier Killijian": [0, ["Portable serialization of CORBA objects: a reflective approach", ["Marc-Olivier Killijian", "Juan-Carlos Ruiz-Garcia", "Jean-Charles Fabre"], "https://doi.org/10.1145/582419.582428", "oopsla", 2002]], "Juan-Carlos Ruiz-Garcia": [0, ["Portable serialization of CORBA objects: a reflective approach", ["Marc-Olivier Killijian", "Juan-Carlos Ruiz-Garcia", "Jean-Charles Fabre"], "https://doi.org/10.1145/582419.582428", "oopsla", 2002]], "Jean-Charles Fabre": [0, ["Portable serialization of CORBA objects: a reflective approach", ["Marc-Olivier Killijian", "Juan-Carlos Ruiz-Garcia", "Jean-Charles Fabre"], "https://doi.org/10.1145/582419.582428", "oopsla", 2002]], "Rami Marelly": [0, ["Multiple instances and symbolic variables in executable sequence charts", ["Rami Marelly", "David Harel", "Hillel Kugler"], "https://doi.org/10.1145/582419.582429", "oopsla", 2002]], "David Harel": [0, ["Multiple instances and symbolic variables in executable sequence charts", ["Rami Marelly", "David Harel", "Hillel Kugler"], "https://doi.org/10.1145/582419.582429", "oopsla", 2002]], "Hillel Kugler": [0, ["Multiple instances and symbolic variables in executable sequence charts", ["Rami Marelly", "David Harel", "Hillel Kugler"], "https://doi.org/10.1145/582419.582429", "oopsla", 2002]], "Laurent Michel": [0, ["A constraint-based architecture for local search", ["Laurent Michel", "Pascal Van Hentenryck"], "https://doi.org/10.1145/582419.582430", "oopsla", 2002]], "Pascal Van Hentenryck": [0, ["A constraint-based architecture for local search", ["Laurent Michel", "Pascal Van Hentenryck"], "https://doi.org/10.1145/582419.582430", "oopsla", 2002]], "Matthew Arnold": [0, ["Online feedback-directed optimization of Java", ["Matthew Arnold", "Michael Hind", "Barbara G. Ryder"], "https://doi.org/10.1145/582419.582432", "oopsla", 2002]], "Michael Hind": [0, ["Online feedback-directed optimization of Java", ["Matthew Arnold", "Michael Hind", "Barbara G. Ryder"], "https://doi.org/10.1145/582419.582432", "oopsla", 2002]], "Barbara G. Ryder": [0, ["Online feedback-directed optimization of Java", ["Matthew Arnold", "Michael Hind", "Barbara G. Ryder"], "https://doi.org/10.1145/582419.582432", "oopsla", 2002]], "Kiyokuni Kawachiya": [0, ["Lock reservation: Java locks can mostly do without atomic operations", ["Kiyokuni Kawachiya", "Akira Koseki", "Tamiya Onodera"], "https://doi.org/10.1145/582419.582433", "oopsla", 2002]], "Akira Koseki": [0, ["Lock reservation: Java locks can mostly do without atomic operations", ["Kiyokuni Kawachiya", "Akira Koseki", "Tamiya Onodera"], "https://doi.org/10.1145/582419.582433", "oopsla", 2002]], "Tamiya Onodera": [0, ["Lock reservation: Java locks can mostly do without atomic operations", ["Kiyokuni Kawachiya", "Akira Koseki", "Tamiya Onodera"], "https://doi.org/10.1145/582419.582433", "oopsla", 2002]], "Yoav Zibin": [0, ["Fast algorithm for creating space efficient dispatching tables with application to multi-dispatching", ["Yoav Zibin", "Joseph Gil"], "https://doi.org/10.1145/582419.582434", "oopsla", 2002]], "Joseph Gil": [7.10791958624668e-09, ["Fast algorithm for creating space efficient dispatching tables with application to multi-dispatching", ["Yoav Zibin", "Joseph Gil"], "https://doi.org/10.1145/582419.582434", "oopsla", 2002]], "Jan Hannemann": [0, ["Design pattern implementation in Java and aspectJ", ["Jan Hannemann", "Gregor Kiczales"], "https://doi.org/10.1145/582419.582436", "oopsla", 2002]], "Gregor Kiczales": [0, ["Design pattern implementation in Java and aspectJ", ["Jan Hannemann", "Gregor Kiczales"], "https://doi.org/10.1145/582419.582436", "oopsla", 2002]], "Sergio Soares": [0, ["Implementing distribution and persistence aspects with aspectJ", ["Sergio Soares", "Eduardo Laureano", "Paulo Borba"], "https://doi.org/10.1145/582419.582437", "oopsla", 2002]], "Eduardo Laureano": [0, ["Implementing distribution and persistence aspects with aspectJ", ["Sergio Soares", "Eduardo Laureano", "Paulo Borba"], "https://doi.org/10.1145/582419.582437", "oopsla", 2002]], "Paulo Borba": [0, ["Implementing distribution and persistence aspects with aspectJ", ["Sergio Soares", "Eduardo Laureano", "Paulo Borba"], "https://doi.org/10.1145/582419.582437", "oopsla", 2002]], "Karen Zee": [0, ["Write barrier removal by static analysis", ["Karen Zee", "Martin C. Rinard"], "https://doi.org/10.1145/582419.582439", "oopsla", 2002]], "Martin C. Rinard": [0, ["Write barrier removal by static analysis", ["Karen Zee", "Martin C. Rinard"], "https://doi.org/10.1145/582419.582439", "oopsla", 2002], ["Ownership types for safe programming: preventing data races and deadlocks", ["Chandrasekhar Boyapati", "Robert Lee", "Martin C. Rinard"], "https://doi.org/10.1145/582419.582440", "oopsla", 2002]], "Chandrasekhar Boyapati": [0, ["Ownership types for safe programming: preventing data races and deadlocks", ["Chandrasekhar Boyapati", "Robert Lee", "Martin C. Rinard"], "https://doi.org/10.1145/582419.582440", "oopsla", 2002]], "Robert Lee": [2.421923826854272e-12, ["Ownership types for safe programming: preventing data races and deadlocks", ["Chandrasekhar Boyapati", "Robert Lee", "Martin C. Rinard"], "https://doi.org/10.1145/582419.582440", "oopsla", 2002]], "Sarfraz Khurshid": [0, ["An analyzable annotation language", ["Sarfraz Khurshid", "Darko Marinov", "Daniel Jackson"], "https://doi.org/10.1145/582419.582441", "oopsla", 2002]], "Darko Marinov": [0, ["An analyzable annotation language", ["Sarfraz Khurshid", "Darko Marinov", "Daniel Jackson"], "https://doi.org/10.1145/582419.582441", "oopsla", 2002]], "Daniel Jackson": [0, ["An analyzable annotation language", ["Sarfraz Khurshid", "Darko Marinov", "Daniel Jackson"], "https://doi.org/10.1145/582419.582441", "oopsla", 2002]], "Emmanuel Cecchet": [0, ["Performance and scalability of EJB applications", ["Emmanuel Cecchet", "Julie Marguerite", "Willy Zwaenepoel"], "https://doi.org/10.1145/582419.582443", "oopsla", 2002]], "Julie Marguerite": [0, ["Performance and scalability of EJB applications", ["Emmanuel Cecchet", "Julie Marguerite", "Willy Zwaenepoel"], "https://doi.org/10.1145/582419.582443", "oopsla", 2002]], "Willy Zwaenepoel": [0, ["Performance and scalability of EJB applications", ["Emmanuel Cecchet", "Julie Marguerite", "Willy Zwaenepoel"], "https://doi.org/10.1145/582419.582443", "oopsla", 2002]], "Krzysztof Palacz": [0, ["Incommunicado: efficient communication for isolates", ["Krzysztof Palacz", "Jan Vitek", "Grzegorz Czajkowski", "Laurent Daynes"], "https://doi.org/10.1145/582419.582444", "oopsla", 2002]], "Jan Vitek": [0, ["Incommunicado: efficient communication for isolates", ["Krzysztof Palacz", "Jan Vitek", "Grzegorz Czajkowski", "Laurent Daynes"], "https://doi.org/10.1145/582419.582444", "oopsla", 2002]], "Grzegorz Czajkowski": [0, ["Incommunicado: efficient communication for isolates", ["Krzysztof Palacz", "Jan Vitek", "Grzegorz Czajkowski", "Laurent Daynes"], "https://doi.org/10.1145/582419.582444", "oopsla", 2002]], "Laurent Daynes": [0, ["Incommunicado: efficient communication for isolates", ["Krzysztof Palacz", "Jan Vitek", "Grzegorz Czajkowski", "Laurent Daynes"], "https://doi.org/10.1145/582419.582444", "oopsla", 2002]], "Bjorn De Sutter": [0, ["Sifting out the mud: low level C++ code reuse", ["Bjorn De Sutter", "Bruno De Bus", "Koenraad De Bosschere"], "https://doi.org/10.1145/582419.582445", "oopsla", 2002]], "Bruno De Bus": [0, ["Sifting out the mud: low level C++ code reuse", ["Bjorn De Sutter", "Bruno De Bus", "Koenraad De Bosschere"], "https://doi.org/10.1145/582419.582445", "oopsla", 2002]], "Koenraad De Bosschere": [0, ["Sifting out the mud: low level C++ code reuse", ["Bjorn De Sutter", "Bruno De Bus", "Koenraad De Bosschere"], "https://doi.org/10.1145/582419.582445", "oopsla", 2002]], "David G. Clarke": [0, ["Ownership, encapsulation and the disjointness of type and effect", ["David G. Clarke", "Sophia Drossopoulou"], "https://doi.org/10.1145/582419.582447", "oopsla", 2002]], "Sophia Drossopoulou": [0, ["Ownership, encapsulation and the disjointness of type and effect", ["David G. Clarke", "Sophia Drossopoulou"], "https://doi.org/10.1145/582419.582447", "oopsla", 2002]], "Jonathan Aldrich": [0, ["Alias annotations for program understanding", ["Jonathan Aldrich", "Valentin Kostadinov", "Craig Chambers"], "https://doi.org/10.1145/582419.582448", "oopsla", 2002]], "Valentin Kostadinov": [0, ["Alias annotations for program understanding", ["Jonathan Aldrich", "Valentin Kostadinov", "Craig Chambers"], "https://doi.org/10.1145/582419.582448", "oopsla", 2002]], "Craig Chambers": [0, ["Alias annotations for program understanding", ["Jonathan Aldrich", "Valentin Kostadinov", "Craig Chambers"], "https://doi.org/10.1145/582419.582448", "oopsla", 2002]], "Riccardo Pucella": [0, ["Towards a formalization for COM part i: the primitive calculus", ["Riccardo Pucella"], "https://doi.org/10.1145/582419.582449", "oopsla", 2002]], "Tony Printezis": [0, ["GCspy: an adaptable heap visualisation framework", ["Tony Printezis", "Richard E. Jones"], "https://doi.org/10.1145/582419.582451", "oopsla", 2002]], "Richard E. Jones": [0, ["GCspy: an adaptable heap visualisation framework", ["Tony Printezis", "Richard E. Jones"], "https://doi.org/10.1145/582419.582451", "oopsla", 2002]], "Larry Koved": [0, ["Access rights analysis for Java", ["Larry Koved", "Marco Pistoia", "Aaron Kershenbaum"], "https://doi.org/10.1145/582419.582452", "oopsla", 2002]], "Marco Pistoia": [0, ["Access rights analysis for Java", ["Larry Koved", "Marco Pistoia", "Aaron Kershenbaum"], "https://doi.org/10.1145/582419.582452", "oopsla", 2002]], "Aaron Kershenbaum": [0, ["Access rights analysis for Java", ["Larry Koved", "Marco Pistoia", "Aaron Kershenbaum"], "https://doi.org/10.1145/582419.582452", "oopsla", 2002]], "Mikhail Dmitriev": [0, ["Language-specific make technology for the Java programming language", ["Mikhail Dmitriev"], "https://doi.org/10.1145/582419.582453", "oopsla", 2002]]}
{"James R. Larus": [0, ["Look up!: your future is in the cloud", ["James R. Larus"], "https://doi.org/10.1145/2491956.2462157", 2, "pldi", 2013], ["Using managed runtime systems to tolerate holes in wearable memories", ["Tiejun Gao", "Karin Strauss", "Stephen M. Blackburn", "Kathryn S. McKinley", "Doug Burger", "James R. Larus"], "https://doi.org/10.1145/2491956.2462171", 12, "pldi", 2013]], "Alvin Cheung": [0, ["Optimizing database-backed applications with query synthesis", ["Alvin Cheung", "Armando Solar-Lezama", "Samuel Madden"], "https://doi.org/10.1145/2491956.2462180", 12, "pldi", 2013]], "Armando Solar-Lezama": [0, ["Optimizing database-backed applications with query synthesis", ["Alvin Cheung", "Armando Solar-Lezama", "Samuel Madden"], "https://doi.org/10.1145/2491956.2462180", 12, "pldi", 2013], ["Automated feedback generation for introductory programming assignments", ["Rishabh Singh", "Sumit Gulwani", "Armando Solar-Lezama"], "https://doi.org/10.1145/2491956.2462195", 12, "pldi", 2013]], "Samuel Madden": [0, ["Optimizing database-backed applications with query synthesis", ["Alvin Cheung", "Armando Solar-Lezama", "Samuel Madden"], "https://doi.org/10.1145/2491956.2462180", 12, "pldi", 2013]], "Rishabh Singh": [0, ["Automated feedback generation for introductory programming assignments", ["Rishabh Singh", "Sumit Gulwani", "Armando Solar-Lezama"], "https://doi.org/10.1145/2491956.2462195", 12, "pldi", 2013]], "Sumit Gulwani": [0, ["Automated feedback generation for introductory programming assignments", ["Rishabh Singh", "Sumit Gulwani", "Armando Solar-Lezama"], "https://doi.org/10.1145/2491956.2462195", 12, "pldi", 2013], ["Static analysis for probabilistic programs: inferring whole program properties from finitely many paths", ["Sriram Sankaranarayanan", "Aleksandar Chakarov", "Sumit Gulwani"], "https://doi.org/10.1145/2491956.2462179", 12, "pldi", 2013]], "Tihomir Gvero": [0, ["Complete completion using types and weights", ["Tihomir Gvero", "Viktor Kuncak", "Ivan Kuraj", "Ruzica Piskac"], "https://doi.org/10.1145/2491956.2462192", 12, "pldi", 2013]], "Viktor Kuncak": [0, ["Complete completion using types and weights", ["Tihomir Gvero", "Viktor Kuncak", "Ivan Kuraj", "Ruzica Piskac"], "https://doi.org/10.1145/2491956.2462192", 12, "pldi", 2013]], "Ivan Kuraj": [0, ["Complete completion using types and weights", ["Tihomir Gvero", "Viktor Kuncak", "Ivan Kuraj", "Ruzica Piskac"], "https://doi.org/10.1145/2491956.2462192", 12, "pldi", 2013]], "Ruzica Piskac": [0, ["Complete completion using types and weights", ["Tihomir Gvero", "Viktor Kuncak", "Ivan Kuraj", "Ruzica Piskac"], "https://doi.org/10.1145/2491956.2462192", 12, "pldi", 2013]], "Nick P. Johnson": [0, ["Fast condensation of the program dependence graph", ["Nick P. Johnson", "Taewook Oh", "Ayal Zaks", "David I. August"], "https://doi.org/10.1145/2491956.2491960", 12, "pldi", 2013]], "Taewook Oh": [0.9535388648509979, ["Fast condensation of the program dependence graph", ["Nick P. Johnson", "Taewook Oh", "Ayal Zaks", "David I. August"], "https://doi.org/10.1145/2491956.2491960", 12, "pldi", 2013]], "Ayal Zaks": [0, ["Fast condensation of the program dependence graph", ["Nick P. Johnson", "Taewook Oh", "Ayal Zaks", "David I. August"], "https://doi.org/10.1145/2491956.2491960", 12, "pldi", 2013]], "David I. August": [0, ["Fast condensation of the program dependence graph", ["Nick P. Johnson", "Taewook Oh", "Ayal Zaks", "David I. August"], "https://doi.org/10.1145/2491956.2491960", 12, "pldi", 2013]], "Khaled Elwazeer": [0, ["Scalable variable and data type detection in a binary rewriter", ["Khaled Elwazeer", "Kapil Anand", "Aparna Kotha", "Matthew Smithson", "Rajeev Barua"], "https://doi.org/10.1145/2491956.2462165", 10, "pldi", 2013]], "Kapil Anand": [0, ["Scalable variable and data type detection in a binary rewriter", ["Khaled Elwazeer", "Kapil Anand", "Aparna Kotha", "Matthew Smithson", "Rajeev Barua"], "https://doi.org/10.1145/2491956.2462165", 10, "pldi", 2013]], "Aparna Kotha": [0, ["Scalable variable and data type detection in a binary rewriter", ["Khaled Elwazeer", "Kapil Anand", "Aparna Kotha", "Matthew Smithson", "Rajeev Barua"], "https://doi.org/10.1145/2491956.2462165", 10, "pldi", 2013]], "Matthew Smithson": [0, ["Scalable variable and data type detection in a binary rewriter", ["Khaled Elwazeer", "Kapil Anand", "Aparna Kotha", "Matthew Smithson", "Rajeev Barua"], "https://doi.org/10.1145/2491956.2462165", 10, "pldi", 2013]], "Rajeev Barua": [0, ["Scalable variable and data type detection in a binary rewriter", ["Khaled Elwazeer", "Kapil Anand", "Aparna Kotha", "Matthew Smithson", "Rajeev Barua"], "https://doi.org/10.1145/2491956.2462165", 10, "pldi", 2013]], "Bharghava Rajaram": [0, ["Fast RMWs for TSO: semantics and implementation", ["Bharghava Rajaram", "Vijay Nagarajan", "Susmit Sarkar", "Marco Elver"], "https://doi.org/10.1145/2491956.2462196", 12, "pldi", 2013]], "Vijay Nagarajan": [0, ["Fast RMWs for TSO: semantics and implementation", ["Bharghava Rajaram", "Vijay Nagarajan", "Susmit Sarkar", "Marco Elver"], "https://doi.org/10.1145/2491956.2462196", 12, "pldi", 2013]], "Susmit Sarkar": [0, ["Fast RMWs for TSO: semantics and implementation", ["Bharghava Rajaram", "Vijay Nagarajan", "Susmit Sarkar", "Marco Elver"], "https://doi.org/10.1145/2491956.2462196", 12, "pldi", 2013]], "Marco Elver": [0, ["Fast RMWs for TSO: semantics and implementation", ["Bharghava Rajaram", "Vijay Nagarajan", "Susmit Sarkar", "Marco Elver"], "https://doi.org/10.1145/2491956.2462196", 12, "pldi", 2013]], "Colin S. Gordon": [0, ["Rely-guarantee references for refinement types over aliased mutable data", ["Colin S. Gordon", "Michael D. Ernst", "Dan Grossman"], "https://doi.org/10.1145/2491956.2462160", 12, "pldi", 2013]], "Michael D. Ernst": [0, ["Rely-guarantee references for refinement types over aliased mutable data", ["Colin S. Gordon", "Michael D. Ernst", "Dan Grossman"], "https://doi.org/10.1145/2491956.2462160", 12, "pldi", 2013]], "Dan Grossman": [0, ["Rely-guarantee references for refinement types over aliased mutable data", ["Colin S. Gordon", "Michael D. Ernst", "Dan Grossman"], "https://doi.org/10.1145/2491956.2462160", 12, "pldi", 2013]], "Ben L. Titzer": [0, ["Harmonizing classes, functions, tuples, and type parameters in virgil iii", ["Ben L. Titzer"], "https://doi.org/10.1145/2491956.2491962", 10, "pldi", 2013]], "Sebastian Burckhardt": [0, ["It's alive! continuous feedback in UI programming", ["Sebastian Burckhardt", "Manuel Fahndrich", "Peli de Halleux", "Sean McDirmid", "Michal Moskal", "Nikolai Tillmann", "Jun Kato"], "https://doi.org/10.1145/2491956.2462170", 10, "pldi", 2013]], "Manuel Fahndrich": [0, ["It's alive! continuous feedback in UI programming", ["Sebastian Burckhardt", "Manuel Fahndrich", "Peli de Halleux", "Sean McDirmid", "Michal Moskal", "Nikolai Tillmann", "Jun Kato"], "https://doi.org/10.1145/2491956.2462170", 10, "pldi", 2013]], "Peli de Halleux": [0, ["It's alive! continuous feedback in UI programming", ["Sebastian Burckhardt", "Manuel Fahndrich", "Peli de Halleux", "Sean McDirmid", "Michal Moskal", "Nikolai Tillmann", "Jun Kato"], "https://doi.org/10.1145/2491956.2462170", 10, "pldi", 2013]], "Sean McDirmid": [0, ["It's alive! continuous feedback in UI programming", ["Sebastian Burckhardt", "Manuel Fahndrich", "Peli de Halleux", "Sean McDirmid", "Michal Moskal", "Nikolai Tillmann", "Jun Kato"], "https://doi.org/10.1145/2491956.2462170", 10, "pldi", 2013]], "Michal Moskal": [0, ["It's alive! continuous feedback in UI programming", ["Sebastian Burckhardt", "Manuel Fahndrich", "Peli de Halleux", "Sean McDirmid", "Michal Moskal", "Nikolai Tillmann", "Jun Kato"], "https://doi.org/10.1145/2491956.2462170", 10, "pldi", 2013]], "Nikolai Tillmann": [0, ["It's alive! continuous feedback in UI programming", ["Sebastian Burckhardt", "Manuel Fahndrich", "Peli de Halleux", "Sean McDirmid", "Michal Moskal", "Nikolai Tillmann", "Jun Kato"], "https://doi.org/10.1145/2491956.2462170", 10, "pldi", 2013]], "Jun Kato": [0, ["It's alive! continuous feedback in UI programming", ["Sebastian Burckhardt", "Manuel Fahndrich", "Peli de Halleux", "Sean McDirmid", "Michal Moskal", "Nikolai Tillmann", "Jun Kato"], "https://doi.org/10.1145/2491956.2462170", 10, "pldi", 2013]], "Zachary DeVito": [0, ["Terra: a multi-stage language for high-performance computing", ["Zachary DeVito", "James Hegarty", "Alex Aiken", "Pat Hanrahan", "Jan Vitek"], "https://doi.org/10.1145/2491956.2462166", 12, "pldi", 2013]], "James Hegarty": [0, ["Terra: a multi-stage language for high-performance computing", ["Zachary DeVito", "James Hegarty", "Alex Aiken", "Pat Hanrahan", "Jan Vitek"], "https://doi.org/10.1145/2491956.2462166", 12, "pldi", 2013]], "Alex Aiken": [0, ["Terra: a multi-stage language for high-performance computing", ["Zachary DeVito", "James Hegarty", "Alex Aiken", "Pat Hanrahan", "Jan Vitek"], "https://doi.org/10.1145/2491956.2462166", 12, "pldi", 2013]], "Pat Hanrahan": [0, ["Terra: a multi-stage language for high-performance computing", ["Zachary DeVito", "James Hegarty", "Alex Aiken", "Pat Hanrahan", "Jan Vitek"], "https://doi.org/10.1145/2491956.2462166", 12, "pldi", 2013]], "Jan Vitek": [0, ["Terra: a multi-stage language for high-performance computing", ["Zachary DeVito", "James Hegarty", "Alex Aiken", "Pat Hanrahan", "Jan Vitek"], "https://doi.org/10.1145/2491956.2462166", 12, "pldi", 2013]], "Jiajia Li": [0, ["SMAT: an input adaptive auto-tuner for sparse matrix-vector multiplication", ["Jiajia Li", "Guangming Tan", "Mingyu Chen", "Ninghui Sun"], "https://doi.org/10.1145/2491956.2462181", 10, "pldi", 2013]], "Guangming Tan": [0, ["SMAT: an input adaptive auto-tuner for sparse matrix-vector multiplication", ["Jiajia Li", "Guangming Tan", "Mingyu Chen", "Ninghui Sun"], "https://doi.org/10.1145/2491956.2462181", 10, "pldi", 2013]], "Mingyu Chen": [0, ["SMAT: an input adaptive auto-tuner for sparse matrix-vector multiplication", ["Jiajia Li", "Guangming Tan", "Mingyu Chen", "Ninghui Sun"], "https://doi.org/10.1145/2491956.2462181", 10, "pldi", 2013]], "Ninghui Sun": [0.00014232856847229414, ["SMAT: an input adaptive auto-tuner for sparse matrix-vector multiplication", ["Jiajia Li", "Guangming Tan", "Mingyu Chen", "Ninghui Sun"], "https://doi.org/10.1145/2491956.2462181", 10, "pldi", 2013]], "Martin Kong": [5.238318528943964e-10, ["When polyhedral transformations meet SIMD code generation", ["Martin Kong", "Richard Veras", "Kevin Stock", "Franz Franchetti", "Louis-Noel Pouchet", "P. Sadayappan"], "https://doi.org/10.1145/2491956.2462187", 12, "pldi", 2013]], "Richard Veras": [0, ["When polyhedral transformations meet SIMD code generation", ["Martin Kong", "Richard Veras", "Kevin Stock", "Franz Franchetti", "Louis-Noel Pouchet", "P. Sadayappan"], "https://doi.org/10.1145/2491956.2462187", 12, "pldi", 2013]], "Kevin Stock": [0, ["When polyhedral transformations meet SIMD code generation", ["Martin Kong", "Richard Veras", "Kevin Stock", "Franz Franchetti", "Louis-Noel Pouchet", "P. Sadayappan"], "https://doi.org/10.1145/2491956.2462187", 12, "pldi", 2013]], "Franz Franchetti": [0, ["When polyhedral transformations meet SIMD code generation", ["Martin Kong", "Richard Veras", "Kevin Stock", "Franz Franchetti", "Louis-Noel Pouchet", "P. Sadayappan"], "https://doi.org/10.1145/2491956.2462187", 12, "pldi", 2013]], "Louis-Noel Pouchet": [0, ["When polyhedral transformations meet SIMD code generation", ["Martin Kong", "Richard Veras", "Kevin Stock", "Franz Franchetti", "Louis-Noel Pouchet", "P. Sadayappan"], "https://doi.org/10.1145/2491956.2462187", 12, "pldi", 2013]], "P. Sadayappan": [0, ["When polyhedral transformations meet SIMD code generation", ["Martin Kong", "Richard Veras", "Kevin Stock", "Franz Franchetti", "Louis-Noel Pouchet", "P. Sadayappan"], "https://doi.org/10.1145/2491956.2462187", 12, "pldi", 2013]], "Fred B. Schneider": [0, ["Programming languages in security: keynote", ["Fred B. Schneider"], "https://doi.org/10.1145/2491956.2462158", 2, "pldi", 2013]], "Jeff Huang": [0, ["CLAP: recording local executions to reproduce concurrency failures", ["Jeff Huang", "Charles Zhang", "Julian Dolby"], "https://doi.org/10.1145/2491956.2462167", 12, "pldi", 2013]], "Charles Zhang": [0, ["CLAP: recording local executions to reproduce concurrency failures", ["Jeff Huang", "Charles Zhang", "Julian Dolby"], "https://doi.org/10.1145/2491956.2462167", 12, "pldi", 2013]], "Julian Dolby": [0, ["CLAP: recording local executions to reproduce concurrency failures", ["Jeff Huang", "Charles Zhang", "Julian Dolby"], "https://doi.org/10.1145/2491956.2462167", 12, "pldi", 2013], ["Dynamic determinacy analysis", ["Max Schafer", "Manu Sridharan", "Julian Dolby", "Frank Tip"], "https://doi.org/10.1145/2491956.2462168", 10, "pldi", 2013]], "Tayfun Elmas": [0, ["CONCURRIT: a domain specific language for reproducing concurrency bugs", ["Tayfun Elmas", "Jacob Burnim", "George C. Necula", "Koushik Sen"], "https://doi.org/10.1145/2491956.2462162", 12, "pldi", 2013]], "Jacob Burnim": [0, ["CONCURRIT: a domain specific language for reproducing concurrency bugs", ["Tayfun Elmas", "Jacob Burnim", "George C. Necula", "Koushik Sen"], "https://doi.org/10.1145/2491956.2462162", 12, "pldi", 2013]], "George C. Necula": [0, ["CONCURRIT: a domain specific language for reproducing concurrency bugs", ["Tayfun Elmas", "Jacob Burnim", "George C. Necula", "Koushik Sen"], "https://doi.org/10.1145/2491956.2462162", 12, "pldi", 2013]], "Koushik Sen": [0, ["CONCURRIT: a domain specific language for reproducing concurrency bugs", ["Tayfun Elmas", "Jacob Burnim", "George C. Necula", "Koushik Sen"], "https://doi.org/10.1145/2491956.2462162", 12, "pldi", 2013]], "Max Schafer": [0, ["Dynamic determinacy analysis", ["Max Schafer", "Manu Sridharan", "Julian Dolby", "Frank Tip"], "https://doi.org/10.1145/2491956.2462168", 10, "pldi", 2013]], "Manu Sridharan": [0, ["Dynamic determinacy analysis", ["Max Schafer", "Manu Sridharan", "Julian Dolby", "Frank Tip"], "https://doi.org/10.1145/2491956.2462168", 10, "pldi", 2013], ["Thresher: precise refutations for heap reachability", ["Sam Blackshear", "Bor-Yuh Evan Chang", "Manu Sridharan"], "https://doi.org/10.1145/2491956.2462186", 12, "pldi", 2013]], "Frank Tip": [0, ["Dynamic determinacy analysis", ["Max Schafer", "Manu Sridharan", "Julian Dolby", "Frank Tip"], "https://doi.org/10.1145/2491956.2462168", 10, "pldi", 2013]], "Jianzhou Zhao": [0, ["Formal verification of SSA-based optimizations for LLVM", ["Jianzhou Zhao", "Santosh Nagarakatte", "Milo M. K. Martin", "Steve Zdancewic"], "https://doi.org/10.1145/2491956.2462164", 12, "pldi", 2013]], "Santosh Nagarakatte": [0, ["Formal verification of SSA-based optimizations for LLVM", ["Jianzhou Zhao", "Santosh Nagarakatte", "Milo M. K. Martin", "Steve Zdancewic"], "https://doi.org/10.1145/2491956.2462164", 12, "pldi", 2013]], "Milo M. K. Martin": [0, ["Formal verification of SSA-based optimizations for LLVM", ["Jianzhou Zhao", "Santosh Nagarakatte", "Milo M. K. Martin", "Steve Zdancewic"], "https://doi.org/10.1145/2491956.2462164", 12, "pldi", 2013], ["TRANSIT: specifying protocols with concolic snippets", ["Abhishek Udupa", "Arun Raghavan", "Jyotirmoy V. Deshmukh", "Sela Mador-Haim", "Milo M. K. Martin", "Rajeev Alur"], "https://doi.org/10.1145/2491956.2462174", 10, "pldi", 2013]], "Steve Zdancewic": [0, ["Formal verification of SSA-based optimizations for LLVM", ["Jianzhou Zhao", "Santosh Nagarakatte", "Milo M. K. Martin", "Steve Zdancewic"], "https://doi.org/10.1145/2491956.2462164", 12, "pldi", 2013]], "Robin Morisset": [0, ["Compiler testing via a theory of sound optimisations in the C11/C++11 memory model", ["Robin Morisset", "Pankaj Pawan", "Francesco Zappa Nardelli"], "https://doi.org/10.1145/2491956.2491967", 10, "pldi", 2013]], "Pankaj Pawan": [0, ["Compiler testing via a theory of sound optimisations in the C11/C++11 memory model", ["Robin Morisset", "Pankaj Pawan", "Francesco Zappa Nardelli"], "https://doi.org/10.1145/2491956.2491967", 10, "pldi", 2013]], "Francesco Zappa Nardelli": [0, ["Compiler testing via a theory of sound optimisations in the C11/C++11 memory model", ["Robin Morisset", "Pankaj Pawan", "Francesco Zappa Nardelli"], "https://doi.org/10.1145/2491956.2491967", 10, "pldi", 2013]], "Yang Chen": [0, ["Taming compiler fuzzers", ["Yang Chen", "Alex Groce", "Chaoqiang Zhang", "Weng-Keen Wong", "Xiaoli Z. Fern", "Eric Eide", "John Regehr"], "https://doi.org/10.1145/2491956.2462173", 12, "pldi", 2013]], "Alex Groce": [0, ["Taming compiler fuzzers", ["Yang Chen", "Alex Groce", "Chaoqiang Zhang", "Weng-Keen Wong", "Xiaoli Z. Fern", "Eric Eide", "John Regehr"], "https://doi.org/10.1145/2491956.2462173", 12, "pldi", 2013]], "Chaoqiang Zhang": [0, ["Taming compiler fuzzers", ["Yang Chen", "Alex Groce", "Chaoqiang Zhang", "Weng-Keen Wong", "Xiaoli Z. Fern", "Eric Eide", "John Regehr"], "https://doi.org/10.1145/2491956.2462173", 12, "pldi", 2013]], "Weng-Keen Wong": [0, ["Taming compiler fuzzers", ["Yang Chen", "Alex Groce", "Chaoqiang Zhang", "Weng-Keen Wong", "Xiaoli Z. Fern", "Eric Eide", "John Regehr"], "https://doi.org/10.1145/2491956.2462173", 12, "pldi", 2013]], "Xiaoli Z. Fern": [0, ["Taming compiler fuzzers", ["Yang Chen", "Alex Groce", "Chaoqiang Zhang", "Weng-Keen Wong", "Xiaoli Z. Fern", "Eric Eide", "John Regehr"], "https://doi.org/10.1145/2491956.2462173", 12, "pldi", 2013]], "Eric Eide": [0, ["Taming compiler fuzzers", ["Yang Chen", "Alex Groce", "Chaoqiang Zhang", "Weng-Keen Wong", "Xiaoli Z. Fern", "Eric Eide", "John Regehr"], "https://doi.org/10.1145/2491956.2462173", 12, "pldi", 2013]], "John Regehr": [0, ["Taming compiler fuzzers", ["Yang Chen", "Alex Groce", "Chaoqiang Zhang", "Weng-Keen Wong", "Xiaoli Z. Fern", "Eric Eide", "John Regehr"], "https://doi.org/10.1145/2491956.2462173", 12, "pldi", 2013]], "Sam Blackshear": [0, ["Almost-correct specifications: a modular semantic framework for assigning confidence to warnings", ["Sam Blackshear", "Shuvendu K. Lahiri"], "https://doi.org/10.1145/2491956.2462188", 10, "pldi", 2013], ["Thresher: precise refutations for heap reachability", ["Sam Blackshear", "Bor-Yuh Evan Chang", "Manu Sridharan"], "https://doi.org/10.1145/2491956.2462186", 12, "pldi", 2013]], "Shuvendu K. Lahiri": [0, ["Almost-correct specifications: a modular semantic framework for assigning confidence to warnings", ["Sam Blackshear", "Shuvendu K. Lahiri"], "https://doi.org/10.1145/2491956.2462188", 10, "pldi", 2013]], "Byron Cook": [0, ["Reasoning about nondeterminism in programs", ["Byron Cook", "Eric Koskinen"], "https://doi.org/10.1145/2491956.2491969", 12, "pldi", 2013]], "Eric Koskinen": [0, ["Reasoning about nondeterminism in programs", ["Byron Cook", "Eric Koskinen"], "https://doi.org/10.1145/2491956.2491969", 12, "pldi", 2013]], "Xiaokang Qiu": [0, ["Natural proofs for structure, data, and separation", ["Xiaokang Qiu", "Pranav Garg", "Andrei Stefanescu", "Parthasarathy Madhusudan"], "https://doi.org/10.1145/2491956.2462169", 12, "pldi", 2013]], "Pranav Garg": [0, ["Natural proofs for structure, data, and separation", ["Xiaokang Qiu", "Pranav Garg", "Andrei Stefanescu", "Parthasarathy Madhusudan"], "https://doi.org/10.1145/2491956.2462169", 12, "pldi", 2013]], "Andrei Stefanescu": [0, ["Natural proofs for structure, data, and separation", ["Xiaokang Qiu", "Pranav Garg", "Andrei Stefanescu", "Parthasarathy Madhusudan"], "https://doi.org/10.1145/2491956.2462169", 12, "pldi", 2013]], "Parthasarathy Madhusudan": [0, ["Natural proofs for structure, data, and separation", ["Xiaokang Qiu", "Pranav Garg", "Andrei Stefanescu", "Parthasarathy Madhusudan"], "https://doi.org/10.1145/2491956.2462169", 12, "pldi", 2013]], "Hongtao Yu": [6.166045174449408e-10, ["General data structure expansion for multi-threading", ["Hongtao Yu", "Hou-Jen Ko", "Zhiyuan Li"], "https://doi.org/10.1145/2491956.2462182", 10, "pldi", 2013]], "Hou-Jen Ko": [0.00027054764359490946, ["General data structure expansion for multi-threading", ["Hongtao Yu", "Hou-Jen Ko", "Zhiyuan Li"], "https://doi.org/10.1145/2491956.2462182", 10, "pldi", 2013]], "Zhiyuan Li": [0, ["General data structure expansion for multi-threading", ["Hongtao Yu", "Hou-Jen Ko", "Zhiyuan Li"], "https://doi.org/10.1145/2491956.2462182", 10, "pldi", 2013]], "Wei-Lun Hung": [0, ["AutoSynch: an automatic-signal monitor based on predicate tagging", ["Wei-Lun Hung", "Vijay K. Garg"], "https://doi.org/10.1145/2491956.2462175", 10, "pldi", 2013]], "Vijay K. Garg": [0, ["AutoSynch: an automatic-signal monitor based on predicate tagging", ["Wei-Lun Hung", "Vijay K. Garg"], "https://doi.org/10.1145/2491956.2462175", 10, "pldi", 2013]], "Guy Golan-Gueta": [0, ["Concurrent libraries with foresight", ["Guy Golan-Gueta", "G. Ramalingam", "Mooly Sagiv", "Eran Yahav"], "https://doi.org/10.1145/2491956.2462172", 12, "pldi", 2013]], "G. Ramalingam": [0, ["Concurrent libraries with foresight", ["Guy Golan-Gueta", "G. Ramalingam", "Mooly Sagiv", "Eran Yahav"], "https://doi.org/10.1145/2491956.2462172", 12, "pldi", 2013]], "Mooly Sagiv": [0, ["Concurrent libraries with foresight", ["Guy Golan-Gueta", "G. Ramalingam", "Mooly Sagiv", "Eran Yahav"], "https://doi.org/10.1145/2491956.2462172", 12, "pldi", 2013]], "Eran Yahav": [0, ["Concurrent libraries with foresight", ["Guy Golan-Gueta", "G. Ramalingam", "Mooly Sagiv", "Eran Yahav"], "https://doi.org/10.1145/2491956.2462172", 12, "pldi", 2013]], "Bor-Yuh Evan Chang": [6.413119165964566e-15, ["Thresher: precise refutations for heap reachability", ["Sam Blackshear", "Bor-Yuh Evan Chang", "Manu Sridharan"], "https://doi.org/10.1145/2491956.2462186", 12, "pldi", 2013]], "Abhishek Udupa": [0, ["TRANSIT: specifying protocols with concolic snippets", ["Abhishek Udupa", "Arun Raghavan", "Jyotirmoy V. Deshmukh", "Sela Mador-Haim", "Milo M. K. Martin", "Rajeev Alur"], "https://doi.org/10.1145/2491956.2462174", 10, "pldi", 2013]], "Arun Raghavan": [0, ["TRANSIT: specifying protocols with concolic snippets", ["Abhishek Udupa", "Arun Raghavan", "Jyotirmoy V. Deshmukh", "Sela Mador-Haim", "Milo M. K. Martin", "Rajeev Alur"], "https://doi.org/10.1145/2491956.2462174", 10, "pldi", 2013]], "Jyotirmoy V. Deshmukh": [0, ["TRANSIT: specifying protocols with concolic snippets", ["Abhishek Udupa", "Arun Raghavan", "Jyotirmoy V. Deshmukh", "Sela Mador-Haim", "Milo M. K. Martin", "Rajeev Alur"], "https://doi.org/10.1145/2491956.2462174", 10, "pldi", 2013]], "Sela Mador-Haim": [0, ["TRANSIT: specifying protocols with concolic snippets", ["Abhishek Udupa", "Arun Raghavan", "Jyotirmoy V. Deshmukh", "Sela Mador-Haim", "Milo M. K. Martin", "Rajeev Alur"], "https://doi.org/10.1145/2491956.2462174", 10, "pldi", 2013]], "Rajeev Alur": [0, ["TRANSIT: specifying protocols with concolic snippets", ["Abhishek Udupa", "Arun Raghavan", "Jyotirmoy V. Deshmukh", "Sela Mador-Haim", "Milo M. K. Martin", "Rajeev Alur"], "https://doi.org/10.1145/2491956.2462174", 10, "pldi", 2013]], "Tiejun Gao": [0, ["Using managed runtime systems to tolerate holes in wearable memories", ["Tiejun Gao", "Karin Strauss", "Stephen M. Blackburn", "Kathryn S. McKinley", "Doug Burger", "James R. Larus"], "https://doi.org/10.1145/2491956.2462171", 12, "pldi", 2013]], "Karin Strauss": [0, ["Using managed runtime systems to tolerate holes in wearable memories", ["Tiejun Gao", "Karin Strauss", "Stephen M. Blackburn", "Kathryn S. McKinley", "Doug Burger", "James R. Larus"], "https://doi.org/10.1145/2491956.2462171", 12, "pldi", 2013]], "Stephen M. Blackburn": [0, ["Using managed runtime systems to tolerate holes in wearable memories", ["Tiejun Gao", "Karin Strauss", "Stephen M. Blackburn", "Kathryn S. McKinley", "Doug Burger", "James R. Larus"], "https://doi.org/10.1145/2491956.2462171", 12, "pldi", 2013]], "Kathryn S. McKinley": [0, ["Using managed runtime systems to tolerate holes in wearable memories", ["Tiejun Gao", "Karin Strauss", "Stephen M. Blackburn", "Kathryn S. McKinley", "Doug Burger", "James R. Larus"], "https://doi.org/10.1145/2491956.2462171", 12, "pldi", 2013]], "Doug Burger": [0, ["Using managed runtime systems to tolerate holes in wearable memories", ["Tiejun Gao", "Karin Strauss", "Stephen M. Blackburn", "Kathryn S. McKinley", "Doug Burger", "James R. Larus"], "https://doi.org/10.1145/2491956.2462171", 12, "pldi", 2013]], "Nachshon Cohen": [0, ["Limitations of partial compaction: towards practical bounds", ["Nachshon Cohen", "Erez Petrank"], "https://doi.org/10.1145/2491956.2491973", 12, "pldi", 2013]], "Erez Petrank": [0, ["Limitations of partial compaction: towards practical bounds", ["Nachshon Cohen", "Erez Petrank"], "https://doi.org/10.1145/2491956.2491973", 12, "pldi", 2013]], "Ankush Desai": [0, ["P: safe asynchronous event-driven programming", ["Ankush Desai", "Vivek Gupta", "Ethan K. Jackson", "Shaz Qadeer", "Sriram K. Rajamani", "Damien Zufferey"], "https://doi.org/10.1145/2491956.2462184", 12, "pldi", 2013]], "Vivek Gupta": [0, ["P: safe asynchronous event-driven programming", ["Ankush Desai", "Vivek Gupta", "Ethan K. Jackson", "Shaz Qadeer", "Sriram K. Rajamani", "Damien Zufferey"], "https://doi.org/10.1145/2491956.2462184", 12, "pldi", 2013]], "Ethan K. Jackson": [0, ["P: safe asynchronous event-driven programming", ["Ankush Desai", "Vivek Gupta", "Ethan K. Jackson", "Shaz Qadeer", "Sriram K. Rajamani", "Damien Zufferey"], "https://doi.org/10.1145/2491956.2462184", 12, "pldi", 2013]], "Shaz Qadeer": [0, ["P: safe asynchronous event-driven programming", ["Ankush Desai", "Vivek Gupta", "Ethan K. Jackson", "Shaz Qadeer", "Sriram K. Rajamani", "Damien Zufferey"], "https://doi.org/10.1145/2491956.2462184", 12, "pldi", 2013]], "Sriram K. Rajamani": [0, ["P: safe asynchronous event-driven programming", ["Ankush Desai", "Vivek Gupta", "Ethan K. Jackson", "Shaz Qadeer", "Sriram K. Rajamani", "Damien Zufferey"], "https://doi.org/10.1145/2491956.2462184", 12, "pldi", 2013]], "Damien Zufferey": [0, ["P: safe asynchronous event-driven programming", ["Ankush Desai", "Vivek Gupta", "Ethan K. Jackson", "Shaz Qadeer", "Sriram K. Rajamani", "Damien Zufferey"], "https://doi.org/10.1145/2491956.2462184", 12, "pldi", 2013]], "Alexander S. Green": [0, ["Quipper: a scalable quantum programming language", ["Alexander S. Green", "Peter LeFanu Lumsdaine", "Neil J. Ross", "Peter Selinger", "Benoit Valiron"], "https://doi.org/10.1145/2491956.2462177", 10, "pldi", 2013]], "Peter LeFanu Lumsdaine": [0, ["Quipper: a scalable quantum programming language", ["Alexander S. Green", "Peter LeFanu Lumsdaine", "Neil J. Ross", "Peter Selinger", "Benoit Valiron"], "https://doi.org/10.1145/2491956.2462177", 10, "pldi", 2013]], "Neil J. Ross": [0, ["Quipper: a scalable quantum programming language", ["Alexander S. Green", "Peter LeFanu Lumsdaine", "Neil J. Ross", "Peter Selinger", "Benoit Valiron"], "https://doi.org/10.1145/2491956.2462177", 10, "pldi", 2013]], "Peter Selinger": [0, ["Quipper: a scalable quantum programming language", ["Alexander S. Green", "Peter LeFanu Lumsdaine", "Neil J. Ross", "Peter Selinger", "Benoit Valiron"], "https://doi.org/10.1145/2491956.2462177", 10, "pldi", 2013]], "Benoit Valiron": [0, ["Quipper: a scalable quantum programming language", ["Alexander S. Green", "Peter LeFanu Lumsdaine", "Neil J. Ross", "Peter Selinger", "Benoit Valiron"], "https://doi.org/10.1145/2491956.2462177", 10, "pldi", 2013]], "Chinawat Isradisaikul": [0, ["Reconciling exhaustive pattern matching with objects", ["Chinawat Isradisaikul", "Andrew C. Myers"], "https://doi.org/10.1145/2491956.2462194", 12, "pldi", 2013]], "Andrew C. Myers": [0, ["Reconciling exhaustive pattern matching with objects", ["Chinawat Isradisaikul", "Andrew C. Myers"], "https://doi.org/10.1145/2491956.2462194", 12, "pldi", 2013]], "Eric Bodden": [0, ["SPLLIFT: statically analyzing software product lines in minutes instead of years", ["Eric Bodden", "Tarsis Toledo", "Marcio Ribeiro", "Claus Brabrand", "Paulo Borba", "Mira Mezini"], "https://doi.org/10.1145/2491956.2491976", 10, "pldi", 2013]], "Tarsis Toledo": [0, ["SPLLIFT: statically analyzing software product lines in minutes instead of years", ["Eric Bodden", "Tarsis Toledo", "Marcio Ribeiro", "Claus Brabrand", "Paulo Borba", "Mira Mezini"], "https://doi.org/10.1145/2491956.2491976", 10, "pldi", 2013]], "Marcio Ribeiro": [0, ["SPLLIFT: statically analyzing software product lines in minutes instead of years", ["Eric Bodden", "Tarsis Toledo", "Marcio Ribeiro", "Claus Brabrand", "Paulo Borba", "Mira Mezini"], "https://doi.org/10.1145/2491956.2491976", 10, "pldi", 2013]], "Claus Brabrand": [0, ["SPLLIFT: statically analyzing software product lines in minutes instead of years", ["Eric Bodden", "Tarsis Toledo", "Marcio Ribeiro", "Claus Brabrand", "Paulo Borba", "Mira Mezini"], "https://doi.org/10.1145/2491956.2491976", 10, "pldi", 2013]], "Paulo Borba": [0, ["SPLLIFT: statically analyzing software product lines in minutes instead of years", ["Eric Bodden", "Tarsis Toledo", "Marcio Ribeiro", "Claus Brabrand", "Paulo Borba", "Mira Mezini"], "https://doi.org/10.1145/2491956.2491976", 10, "pldi", 2013]], "Mira Mezini": [0, ["SPLLIFT: statically analyzing software product lines in minutes instead of years", ["Eric Bodden", "Tarsis Toledo", "Marcio Ribeiro", "Claus Brabrand", "Paulo Borba", "Mira Mezini"], "https://doi.org/10.1145/2491956.2491976", 10, "pldi", 2013]], "Xin Zhang": [0, ["Finding optimum abstractions in parametric dataflow analysis", ["Xin Zhang", "Mayur Naik", "Hongseok Yang"], "https://doi.org/10.1145/2491956.2462185", 12, "pldi", 2013]], "Mayur Naik": [0, ["Finding optimum abstractions in parametric dataflow analysis", ["Xin Zhang", "Mayur Naik", "Hongseok Yang"], "https://doi.org/10.1145/2491956.2462185", 12, "pldi", 2013]], "Hongseok Yang": [1, ["Finding optimum abstractions in parametric dataflow analysis", ["Xin Zhang", "Mayur Naik", "Hongseok Yang"], "https://doi.org/10.1145/2491956.2462185", 12, "pldi", 2013]], "Kalmer Apinis": [0, ["How to combine widening and narrowing for non-monotonic systems of equations", ["Kalmer Apinis", "Helmut Seidl", "Vesal Vojdani"], "https://doi.org/10.1145/2491956.2462190", 10, "pldi", 2013]], "Helmut Seidl": [0, ["How to combine widening and narrowing for non-monotonic systems of equations", ["Kalmer Apinis", "Helmut Seidl", "Vesal Vojdani"], "https://doi.org/10.1145/2491956.2462190", 10, "pldi", 2013]], "Vesal Vojdani": [0, ["How to combine widening and narrowing for non-monotonic systems of equations", ["Kalmer Apinis", "Helmut Seidl", "Vesal Vojdani"], "https://doi.org/10.1145/2491956.2462190", 10, "pldi", 2013]], "Nikhil Swamy": [0, ["Verifying higher-order programs with the dijkstra monad", ["Nikhil Swamy", "Joel Weinberger", "Cole Schlesinger", "Juan Chen", "Benjamin Livshits"], "https://doi.org/10.1145/2491956.2491978", 12, "pldi", 2013]], "Joel Weinberger": [0, ["Verifying higher-order programs with the dijkstra monad", ["Nikhil Swamy", "Joel Weinberger", "Cole Schlesinger", "Juan Chen", "Benjamin Livshits"], "https://doi.org/10.1145/2491956.2491978", 12, "pldi", 2013]], "Cole Schlesinger": [0, ["Verifying higher-order programs with the dijkstra monad", ["Nikhil Swamy", "Joel Weinberger", "Cole Schlesinger", "Juan Chen", "Benjamin Livshits"], "https://doi.org/10.1145/2491956.2491978", 12, "pldi", 2013]], "Juan Chen": [0, ["Verifying higher-order programs with the dijkstra monad", ["Nikhil Swamy", "Joel Weinberger", "Cole Schlesinger", "Juan Chen", "Benjamin Livshits"], "https://doi.org/10.1145/2491956.2491978", 12, "pldi", 2013]], "Benjamin Livshits": [0, ["Verifying higher-order programs with the dijkstra monad", ["Nikhil Swamy", "Joel Weinberger", "Cole Schlesinger", "Juan Chen", "Benjamin Livshits"], "https://doi.org/10.1145/2491956.2491978", 12, "pldi", 2013]], "Ilya Sergey": [0, ["Monadic abstract interpreters", ["Ilya Sergey", "Dominique Devriese", "Matthew Might", "Jan Midtgaard", "David Darais", "Dave Clarke", "Frank Piessens"], "https://doi.org/10.1145/2491956.2491979", 12, "pldi", 2013]], "Dominique Devriese": [0, ["Monadic abstract interpreters", ["Ilya Sergey", "Dominique Devriese", "Matthew Might", "Jan Midtgaard", "David Darais", "Dave Clarke", "Frank Piessens"], "https://doi.org/10.1145/2491956.2491979", 12, "pldi", 2013]], "Matthew Might": [0, ["Monadic abstract interpreters", ["Ilya Sergey", "Dominique Devriese", "Matthew Might", "Jan Midtgaard", "David Darais", "Dave Clarke", "Frank Piessens"], "https://doi.org/10.1145/2491956.2491979", 12, "pldi", 2013]], "Jan Midtgaard": [0, ["Monadic abstract interpreters", ["Ilya Sergey", "Dominique Devriese", "Matthew Might", "Jan Midtgaard", "David Darais", "Dave Clarke", "Frank Piessens"], "https://doi.org/10.1145/2491956.2491979", 12, "pldi", 2013]], "David Darais": [0, ["Monadic abstract interpreters", ["Ilya Sergey", "Dominique Devriese", "Matthew Might", "Jan Midtgaard", "David Darais", "Dave Clarke", "Frank Piessens"], "https://doi.org/10.1145/2491956.2491979", 12, "pldi", 2013]], "Dave Clarke": [0, ["Monadic abstract interpreters", ["Ilya Sergey", "Dominique Devriese", "Matthew Might", "Jan Midtgaard", "David Darais", "Dave Clarke", "Frank Piessens"], "https://doi.org/10.1145/2491956.2491979", 12, "pldi", 2013]], "Frank Piessens": [0, ["Monadic abstract interpreters", ["Ilya Sergey", "Dominique Devriese", "Matthew Might", "Jan Midtgaard", "David Darais", "Dave Clarke", "Frank Piessens"], "https://doi.org/10.1145/2491956.2491979", 12, "pldi", 2013]], "Evan Czaplicki": [0, ["Asynchronous functional reactive programming for GUIs", ["Evan Czaplicki", "Stephen Chong"], "https://doi.org/10.1145/2491956.2462161", 12, "pldi", 2013]], "Stephen Chong": [2.4325360392651874e-08, ["Asynchronous functional reactive programming for GUIs", ["Evan Czaplicki", "Stephen Chong"], "https://doi.org/10.1145/2491956.2462161", 12, "pldi", 2013]], "George Kastrinis": [0, ["Hybrid context-sensitivity for points-to analysis", ["George Kastrinis", "Yannis Smaragdakis"], "https://doi.org/10.1145/2491956.2462191", 12, "pldi", 2013]], "Yannis Smaragdakis": [0, ["Hybrid context-sensitivity for points-to analysis", ["George Kastrinis", "Yannis Smaragdakis"], "https://doi.org/10.1145/2491956.2462191", 12, "pldi", 2013]], "Qirun Zhang": [0, ["Fast algorithms for Dyck-CFL-reachability with applications to alias analysis", ["Qirun Zhang", "Michael R. Lyu", "Hao Yuan", "Zhendong Su"], "https://doi.org/10.1145/2491956.2462159", 12, "pldi", 2013]], "Michael R. Lyu": [0, ["Fast algorithms for Dyck-CFL-reachability with applications to alias analysis", ["Qirun Zhang", "Michael R. Lyu", "Hao Yuan", "Zhendong Su"], "https://doi.org/10.1145/2491956.2462159", 12, "pldi", 2013]], "Hao Yuan": [0, ["Fast algorithms for Dyck-CFL-reachability with applications to alias analysis", ["Qirun Zhang", "Michael R. Lyu", "Hao Yuan", "Zhendong Su"], "https://doi.org/10.1145/2491956.2462159", 12, "pldi", 2013]], "Zhendong Su": [0, ["Fast algorithms for Dyck-CFL-reachability with applications to alias analysis", ["Qirun Zhang", "Michael R. Lyu", "Hao Yuan", "Zhendong Su"], "https://doi.org/10.1145/2491956.2462159", 12, "pldi", 2013]], "Sriram Sankaranarayanan": [0, ["Static analysis for probabilistic programs: inferring whole program properties from finitely many paths", ["Sriram Sankaranarayanan", "Aleksandar Chakarov", "Sumit Gulwani"], "https://doi.org/10.1145/2491956.2462179", 12, "pldi", 2013]], "Aleksandar Chakarov": [0, ["Static analysis for probabilistic programs: inferring whole program properties from finitely many paths", ["Sriram Sankaranarayanan", "Aleksandar Chakarov", "Sumit Gulwani"], "https://doi.org/10.1145/2491956.2462179", 12, "pldi", 2013]], "Hongjin Liang": [0, ["Modular verification of linearizability with non-fixed linearization points", ["Hongjin Liang", "Xinyu Feng"], "https://doi.org/10.1145/2491956.2462189", 12, "pldi", 2013]], "Xinyu Feng": [0, ["Modular verification of linearizability with non-fixed linearization points", ["Hongjin Liang", "Xinyu Feng"], "https://doi.org/10.1145/2491956.2462189", 12, "pldi", 2013]], "Thomas Arthur Leck Sewell": [0, ["Translation validation for a verified OS kernel", ["Thomas Arthur Leck Sewell", "Magnus O. Myreen", "Gerwin Klein"], "https://doi.org/10.1145/2491956.2462183", 12, "pldi", 2013]], "Magnus O. Myreen": [0, ["Translation validation for a verified OS kernel", ["Thomas Arthur Leck Sewell", "Magnus O. Myreen", "Gerwin Klein"], "https://doi.org/10.1145/2491956.2462183", 12, "pldi", 2013]], "Gerwin Klein": [0, ["Translation validation for a verified OS kernel", ["Thomas Arthur Leck Sewell", "Magnus O. Myreen", "Gerwin Klein"], "https://doi.org/10.1145/2491956.2462183", 12, "pldi", 2013]], "Arjun Guha": [0, ["Machine-verified network controllers", ["Arjun Guha", "Mark Reitblatt", "Nate Foster"], "https://doi.org/10.1145/2491956.2462178", 12, "pldi", 2013]], "Mark Reitblatt": [0, ["Machine-verified network controllers", ["Arjun Guha", "Mark Reitblatt", "Nate Foster"], "https://doi.org/10.1145/2491956.2462178", 12, "pldi", 2013]], "Nate Foster": [0, ["Machine-verified network controllers", ["Arjun Guha", "Mark Reitblatt", "Nate Foster"], "https://doi.org/10.1145/2491956.2462178", 12, "pldi", 2013]], "Tony Nowatzki": [0, ["A general constraint-centric scheduling framework for spatial architectures", ["Tony Nowatzki", "Michael Sartin-Tarm", "Lorenzo De Carli", "Karthikeyan Sankaralingam", "Cristian Estan", "Behnam Robatmili"], "https://doi.org/10.1145/2491956.2462163", 12, "pldi", 2013]], "Michael Sartin-Tarm": [0, ["A general constraint-centric scheduling framework for spatial architectures", ["Tony Nowatzki", "Michael Sartin-Tarm", "Lorenzo De Carli", "Karthikeyan Sankaralingam", "Cristian Estan", "Behnam Robatmili"], "https://doi.org/10.1145/2491956.2462163", 12, "pldi", 2013]], "Lorenzo De Carli": [0, ["A general constraint-centric scheduling framework for spatial architectures", ["Tony Nowatzki", "Michael Sartin-Tarm", "Lorenzo De Carli", "Karthikeyan Sankaralingam", "Cristian Estan", "Behnam Robatmili"], "https://doi.org/10.1145/2491956.2462163", 12, "pldi", 2013]], "Karthikeyan Sankaralingam": [0, ["A general constraint-centric scheduling framework for spatial architectures", ["Tony Nowatzki", "Michael Sartin-Tarm", "Lorenzo De Carli", "Karthikeyan Sankaralingam", "Cristian Estan", "Behnam Robatmili"], "https://doi.org/10.1145/2491956.2462163", 12, "pldi", 2013]], "Cristian Estan": [0, ["A general constraint-centric scheduling framework for spatial architectures", ["Tony Nowatzki", "Michael Sartin-Tarm", "Lorenzo De Carli", "Karthikeyan Sankaralingam", "Cristian Estan", "Behnam Robatmili"], "https://doi.org/10.1145/2491956.2462163", 12, "pldi", 2013]], "Behnam Robatmili": [0, ["A general constraint-centric scheduling framework for spatial architectures", ["Tony Nowatzki", "Michael Sartin-Tarm", "Lorenzo De Carli", "Karthikeyan Sankaralingam", "Cristian Estan", "Behnam Robatmili"], "https://doi.org/10.1145/2491956.2462163", 12, "pldi", 2013]], "Jonathan Lifflander": [0, ["Steal Tree: low-overhead tracing of work stealing schedulers", ["Jonathan Lifflander", "Sriram Krishnamoorthy", "Laxmikant V. Kale"], "https://doi.org/10.1145/2491956.2462193", 12, "pldi", 2013]], "Sriram Krishnamoorthy": [0, ["Steal Tree: low-overhead tracing of work stealing schedulers", ["Jonathan Lifflander", "Sriram Krishnamoorthy", "Laxmikant V. Kale"], "https://doi.org/10.1145/2491956.2462193", 12, "pldi", 2013]], "Laxmikant V. Kale": [0, ["Steal Tree: low-overhead tracing of work stealing schedulers", ["Jonathan Lifflander", "Sriram Krishnamoorthy", "Laxmikant V. Kale"], "https://doi.org/10.1145/2491956.2462193", 12, "pldi", 2013]], "Jonathan Ragan-Kelley": [0, ["Halide: a language and compiler for optimizing parallelism, locality, and recomputation in image processing pipelines", ["Jonathan Ragan-Kelley", "Connelly Barnes", "Andrew Adams", "Sylvain Paris", "Fredo Durand", "Saman P. Amarasinghe"], "https://doi.org/10.1145/2491956.2462176", 12, "pldi", 2013]], "Connelly Barnes": [0, ["Halide: a language and compiler for optimizing parallelism, locality, and recomputation in image processing pipelines", ["Jonathan Ragan-Kelley", "Connelly Barnes", "Andrew Adams", "Sylvain Paris", "Fredo Durand", "Saman P. Amarasinghe"], "https://doi.org/10.1145/2491956.2462176", 12, "pldi", 2013]], "Andrew Adams": [0, ["Halide: a language and compiler for optimizing parallelism, locality, and recomputation in image processing pipelines", ["Jonathan Ragan-Kelley", "Connelly Barnes", "Andrew Adams", "Sylvain Paris", "Fredo Durand", "Saman P. Amarasinghe"], "https://doi.org/10.1145/2491956.2462176", 12, "pldi", 2013]], "Sylvain Paris": [0, ["Halide: a language and compiler for optimizing parallelism, locality, and recomputation in image processing pipelines", ["Jonathan Ragan-Kelley", "Connelly Barnes", "Andrew Adams", "Sylvain Paris", "Fredo Durand", "Saman P. Amarasinghe"], "https://doi.org/10.1145/2491956.2462176", 12, "pldi", 2013]], "Fredo Durand": [0, ["Halide: a language and compiler for optimizing parallelism, locality, and recomputation in image processing pipelines", ["Jonathan Ragan-Kelley", "Connelly Barnes", "Andrew Adams", "Sylvain Paris", "Fredo Durand", "Saman P. Amarasinghe"], "https://doi.org/10.1145/2491956.2462176", 12, "pldi", 2013]], "Saman P. Amarasinghe": [0, ["Halide: a language and compiler for optimizing parallelism, locality, and recomputation in image processing pipelines", ["Jonathan Ragan-Kelley", "Connelly Barnes", "Andrew Adams", "Sylvain Paris", "Fredo Durand", "Saman P. Amarasinghe"], "https://doi.org/10.1145/2491956.2462176", 12, "pldi", 2013]]}
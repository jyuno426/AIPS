{"Suriya Subramanian": [0, ["Dynamic software updates: a VM-centric approach", ["Suriya Subramanian", "Michael W. Hicks", "Kathryn S. McKinley"], "https://doi.org/10.1145/1542476.1542478", 12, "pldi", 2009]], "Michael W. Hicks": [0, ["Dynamic software updates: a VM-centric approach", ["Suriya Subramanian", "Michael W. Hicks", "Kathryn S. McKinley"], "https://doi.org/10.1145/1542476.1542478", 12, "pldi", 2009], ["Safe and timely updates to multi-threaded programs", ["Iulian Neamtiu", "Michael W. Hicks"], "https://doi.org/10.1145/1542476.1542479", 12, "pldi", 2009]], "Kathryn S. McKinley": [0, ["Dynamic software updates: a VM-centric approach", ["Suriya Subramanian", "Michael W. Hicks", "Kathryn S. McKinley"], "https://doi.org/10.1145/1542476.1542478", 12, "pldi", 2009], ["Laminar: practical fine-grained decentralized information flow control", ["Indrajit Roy", "Donald E. Porter", "Michael D. Bond", "Kathryn S. McKinley", "Emmett Witchel"], "https://doi.org/10.1145/1542476.1542484", 12, "pldi", 2009]], "Iulian Neamtiu": [0, ["Safe and timely updates to multi-threaded programs", ["Iulian Neamtiu", "Michael W. Hicks"], "https://doi.org/10.1145/1542476.1542479", 12, "pldi", 2009]], "Matthew A. Hammer": [0, ["CEAL: a C-based language for self-adjusting computation", ["Matthew A. Hammer", "Umut A. Acar", "Yan Chen"], "https://doi.org/10.1145/1542476.1542480", 13, "pldi", 2009]], "Umut A. Acar": [0, ["CEAL: a C-based language for self-adjusting computation", ["Matthew A. Hammer", "Umut A. Acar", "Yan Chen"], "https://doi.org/10.1145/1542476.1542480", 13, "pldi", 2009]], "Yan Chen": [0, ["CEAL: a C-based language for self-adjusting computation", ["Matthew A. Hammer", "Umut A. Acar", "Yan Chen"], "https://doi.org/10.1145/1542476.1542480", 13, "pldi", 2009]], "Jason Ansel": [0, ["PetaBricks: a language and compiler for algorithmic choice", ["Jason Ansel", "Cy P. Chan", "Yee Lok Wong", "Marek Olszewski", "Qin Zhao", "Alan Edelman", "Saman P. Amarasinghe"], "https://doi.org/10.1145/1542476.1542481", 12, "pldi", 2009]], "Cy P. Chan": [0, ["PetaBricks: a language and compiler for algorithmic choice", ["Jason Ansel", "Cy P. Chan", "Yee Lok Wong", "Marek Olszewski", "Qin Zhao", "Alan Edelman", "Saman P. Amarasinghe"], "https://doi.org/10.1145/1542476.1542481", 12, "pldi", 2009]], "Yee Lok Wong": [0, ["PetaBricks: a language and compiler for algorithmic choice", ["Jason Ansel", "Cy P. Chan", "Yee Lok Wong", "Marek Olszewski", "Qin Zhao", "Alan Edelman", "Saman P. Amarasinghe"], "https://doi.org/10.1145/1542476.1542481", 12, "pldi", 2009]], "Marek Olszewski": [0, ["PetaBricks: a language and compiler for algorithmic choice", ["Jason Ansel", "Cy P. Chan", "Yee Lok Wong", "Marek Olszewski", "Qin Zhao", "Alan Edelman", "Saman P. Amarasinghe"], "https://doi.org/10.1145/1542476.1542481", 12, "pldi", 2009]], "Qin Zhao": [0, ["PetaBricks: a language and compiler for algorithmic choice", ["Jason Ansel", "Cy P. Chan", "Yee Lok Wong", "Marek Olszewski", "Qin Zhao", "Alan Edelman", "Saman P. Amarasinghe"], "https://doi.org/10.1145/1542476.1542481", 12, "pldi", 2009]], "Alan Edelman": [0, ["PetaBricks: a language and compiler for algorithmic choice", ["Jason Ansel", "Cy P. Chan", "Yee Lok Wong", "Marek Olszewski", "Qin Zhao", "Alan Edelman", "Saman P. Amarasinghe"], "https://doi.org/10.1145/1542476.1542481", 12, "pldi", 2009]], "Saman P. Amarasinghe": [0, ["PetaBricks: a language and compiler for algorithmic choice", ["Jason Ansel", "Cy P. Chan", "Yee Lok Wong", "Marek Olszewski", "Qin Zhao", "Alan Edelman", "Saman P. Amarasinghe"], "https://doi.org/10.1145/1542476.1542481", 12, "pldi", 2009]], "Ravi Chugh": [0, ["Staged information flow for javascript", ["Ravi Chugh", "Jeffrey A. Meister", "Ranjit Jhala", "Sorin Lerner"], "https://doi.org/10.1145/1542476.1542483", 13, "pldi", 2009]], "Jeffrey A. Meister": [0, ["Staged information flow for javascript", ["Ravi Chugh", "Jeffrey A. Meister", "Ranjit Jhala", "Sorin Lerner"], "https://doi.org/10.1145/1542476.1542483", 13, "pldi", 2009]], "Ranjit Jhala": [0, ["Staged information flow for javascript", ["Ravi Chugh", "Jeffrey A. Meister", "Ranjit Jhala", "Sorin Lerner"], "https://doi.org/10.1145/1542476.1542483", 13, "pldi", 2009], ["Type-based data structure verification", ["Ming Kawaguchi", "Patrick Maxim Rondon", "Ranjit Jhala"], "https://doi.org/10.1145/1542476.1542510", 12, "pldi", 2009]], "Sorin Lerner": [0, ["Staged information flow for javascript", ["Ravi Chugh", "Jeffrey A. Meister", "Ranjit Jhala", "Sorin Lerner"], "https://doi.org/10.1145/1542476.1542483", 13, "pldi", 2009], ["Proving optimizations correct using parameterized program equivalence", ["Sudipta Kundu", "Zachary Tatlock", "Sorin Lerner"], "https://doi.org/10.1145/1542476.1542513", 11, "pldi", 2009]], "Indrajit Roy": [0, ["Laminar: practical fine-grained decentralized information flow control", ["Indrajit Roy", "Donald E. Porter", "Michael D. Bond", "Kathryn S. McKinley", "Emmett Witchel"], "https://doi.org/10.1145/1542476.1542484", 12, "pldi", 2009]], "Donald E. Porter": [0, ["Laminar: practical fine-grained decentralized information flow control", ["Indrajit Roy", "Donald E. Porter", "Michael D. Bond", "Kathryn S. McKinley", "Emmett Witchel"], "https://doi.org/10.1145/1542476.1542484", 12, "pldi", 2009]], "Michael D. Bond": [0, ["Laminar: practical fine-grained decentralized information flow control", ["Indrajit Roy", "Donald E. Porter", "Michael D. Bond", "Kathryn S. McKinley", "Emmett Witchel"], "https://doi.org/10.1145/1542476.1542484", 12, "pldi", 2009]], "Emmett Witchel": [0, ["Laminar: practical fine-grained decentralized information flow control", ["Indrajit Roy", "Donald E. Porter", "Michael D. Bond", "Kathryn S. McKinley", "Emmett Witchel"], "https://doi.org/10.1145/1542476.1542484", 12, "pldi", 2009]], "V. Benjamin Livshits": [0, ["Merlin: specification inference for explicit information flow problems", ["V. Benjamin Livshits", "Aditya V. Nori", "Sriram K. Rajamani", "Anindya Banerjee"], "https://doi.org/10.1145/1542476.1542485", 12, "pldi", 2009]], "Aditya V. Nori": [0, ["Merlin: specification inference for explicit information flow problems", ["V. Benjamin Livshits", "Aditya V. Nori", "Sriram K. Rajamani", "Anindya Banerjee"], "https://doi.org/10.1145/1542476.1542485", 12, "pldi", 2009]], "Sriram K. Rajamani": [0, ["Merlin: specification inference for explicit information flow problems", ["V. Benjamin Livshits", "Aditya V. Nori", "Sriram K. Rajamani", "Anindya Banerjee"], "https://doi.org/10.1145/1542476.1542485", 12, "pldi", 2009]], "Anindya Banerjee": [0, ["Merlin: specification inference for explicit information flow problems", ["V. Benjamin Livshits", "Aditya V. Nori", "Sriram K. Rajamani", "Anindya Banerjee"], "https://doi.org/10.1145/1542476.1542485", 12, "pldi", 2009]], "Omer Tripp": [0, ["TAJ: effective taint analysis of web applications", ["Omer Tripp", "Marco Pistoia", "Stephen J. Fink", "Manu Sridharan", "Omri Weisman"], "https://doi.org/10.1145/1542476.1542486", 11, "pldi", 2009]], "Marco Pistoia": [0, ["TAJ: effective taint analysis of web applications", ["Omer Tripp", "Marco Pistoia", "Stephen J. Fink", "Manu Sridharan", "Omri Weisman"], "https://doi.org/10.1145/1542476.1542486", 11, "pldi", 2009]], "Stephen J. Fink": [0, ["TAJ: effective taint analysis of web applications", ["Omer Tripp", "Marco Pistoia", "Stephen J. Fink", "Manu Sridharan", "Omri Weisman"], "https://doi.org/10.1145/1542476.1542486", 11, "pldi", 2009], ["Snugglebug: a powerful approach to weakest preconditions", ["Satish Chandra", "Stephen J. Fink", "Manu Sridharan"], "https://doi.org/10.1145/1542476.1542517", 12, "pldi", 2009]], "Manu Sridharan": [0, ["TAJ: effective taint analysis of web applications", ["Omer Tripp", "Marco Pistoia", "Stephen J. Fink", "Manu Sridharan", "Omri Weisman"], "https://doi.org/10.1145/1542476.1542486", 11, "pldi", 2009], ["Snugglebug: a powerful approach to weakest preconditions", ["Satish Chandra", "Stephen J. Fink", "Manu Sridharan"], "https://doi.org/10.1145/1542476.1542517", 12, "pldi", 2009]], "Omri Weisman": [0, ["TAJ: effective taint analysis of web applications", ["Omer Tripp", "Marco Pistoia", "Stephen J. Fink", "Manu Sridharan", "Omri Weisman"], "https://doi.org/10.1145/1542476.1542486", 11, "pldi", 2009]], "Zachary R. Anderson": [0, ["Lightweight annotations for controlling sharing in concurrent data structures", ["Zachary R. Anderson", "David Gay", "Mayur Naik"], "https://doi.org/10.1145/1542476.1542488", 12, "pldi", 2009]], "David Gay": [0, ["Lightweight annotations for controlling sharing in concurrent data structures", ["Zachary R. Anderson", "David Gay", "Mayur Naik"], "https://doi.org/10.1145/1542476.1542488", 12, "pldi", 2009]], "Mayur Naik": [0, ["Lightweight annotations for controlling sharing in concurrent data structures", ["Zachary R. Anderson", "David Gay", "Mayur Naik"], "https://doi.org/10.1145/1542476.1542488", 12, "pldi", 2009], ["A randomized dynamic program analysis technique for detecting real deadlocks", ["Pallavi Joshi", "Chang-Seo Park", "Koushik Sen", "Mayur Naik"], "https://doi.org/10.1145/1542476.1542489", 11, "pldi", 2009]], "Pallavi Joshi": [0, ["A randomized dynamic program analysis technique for detecting real deadlocks", ["Pallavi Joshi", "Chang-Seo Park", "Koushik Sen", "Mayur Naik"], "https://doi.org/10.1145/1542476.1542489", 11, "pldi", 2009]], "Chang-Seo Park": [0.9992828220129013, ["A randomized dynamic program analysis technique for detecting real deadlocks", ["Pallavi Joshi", "Chang-Seo Park", "Koushik Sen", "Mayur Naik"], "https://doi.org/10.1145/1542476.1542489", 11, "pldi", 2009]], "Koushik Sen": [0, ["A randomized dynamic program analysis technique for detecting real deadlocks", ["Pallavi Joshi", "Chang-Seo Park", "Koushik Sen", "Mayur Naik"], "https://doi.org/10.1145/1542476.1542489", 11, "pldi", 2009]], "Cormac Flanagan": [0, ["FastTrack: efficient and precise dynamic race detection", ["Cormac Flanagan", "Stephen N. Freund"], "https://doi.org/10.1145/1542476.1542490", 13, "pldi", 2009]], "Stephen N. Freund": [0, ["FastTrack: efficient and precise dynamic race detection", ["Cormac Flanagan", "Stephen N. Freund"], "https://doi.org/10.1145/1542476.1542490", 13, "pldi", 2009]], "Daniel Marino": [0, ["LiteRace: effective sampling for lightweight data-race detection", ["Daniel Marino", "Madanlal Musuvathi", "Satish Narayanasamy"], "https://doi.org/10.1145/1542476.1542491", 10, "pldi", 2009]], "Madanlal Musuvathi": [0, ["LiteRace: effective sampling for lightweight data-race detection", ["Daniel Marino", "Madanlal Musuvathi", "Satish Narayanasamy"], "https://doi.org/10.1145/1542476.1542491", 10, "pldi", 2009], ["Progress guarantee for parallel programs via bounded lock-freedom", ["Erez Petrank", "Madanlal Musuvathi", "Bjarne Steensgaard"], "https://doi.org/10.1145/1542476.1542493", 11, "pldi", 2009]], "Satish Narayanasamy": [0, ["LiteRace: effective sampling for lightweight data-race detection", ["Daniel Marino", "Madanlal Musuvathi", "Satish Narayanasamy"], "https://doi.org/10.1145/1542476.1542491", 10, "pldi", 2009]], "Erez Petrank": [0, ["Progress guarantee for parallel programs via bounded lock-freedom", ["Erez Petrank", "Madanlal Musuvathi", "Bjarne Steensgaard"], "https://doi.org/10.1145/1542476.1542493", 11, "pldi", 2009]], "Bjarne Steensgaard": [0, ["Progress guarantee for parallel programs via bounded lock-freedom", ["Erez Petrank", "Madanlal Musuvathi", "Bjarne Steensgaard"], "https://doi.org/10.1145/1542476.1542493", 11, "pldi", 2009]], "Aleksandar Dragojevic": [0, ["Stretching transactional memory", ["Aleksandar Dragojevic", "Rachid Guerraoui", "Michal Kapalka"], "https://doi.org/10.1145/1542476.1542494", 11, "pldi", 2009]], "Rachid Guerraoui": [0, ["Stretching transactional memory", ["Aleksandar Dragojevic", "Rachid Guerraoui", "Michal Kapalka"], "https://doi.org/10.1145/1542476.1542494", 11, "pldi", 2009]], "Michal Kapalka": [0, ["Stretching transactional memory", ["Aleksandar Dragojevic", "Rachid Guerraoui", "Michal Kapalka"], "https://doi.org/10.1145/1542476.1542494", 11, "pldi", 2009]], "Mojtaba Mehrara": [0, ["Parallelizing sequential applications on commodity hardware using a low-cost software transactional memory", ["Mojtaba Mehrara", "Jeff Hao", "Po-Chun Hsu", "Scott A. Mahlke"], "https://doi.org/10.1145/1542476.1542495", 11, "pldi", 2009]], "Jeff Hao": [0, ["Parallelizing sequential applications on commodity hardware using a low-cost software transactional memory", ["Mojtaba Mehrara", "Jeff Hao", "Po-Chun Hsu", "Scott A. Mahlke"], "https://doi.org/10.1145/1542476.1542495", 11, "pldi", 2009]], "Po-Chun Hsu": [0, ["Parallelizing sequential applications on commodity hardware using a low-cost software transactional memory", ["Mojtaba Mehrara", "Jeff Hao", "Po-Chun Hsu", "Scott A. Mahlke"], "https://doi.org/10.1145/1542476.1542495", 11, "pldi", 2009]], "Scott A. Mahlke": [0, ["Parallelizing sequential applications on commodity hardware using a low-cost software transactional memory", ["Mojtaba Mehrara", "Jeff Hao", "Po-Chun Hsu", "Scott A. Mahlke"], "https://doi.org/10.1145/1542476.1542495", 11, "pldi", 2009]], "Georgios Tournavitis": [0, ["Towards a holistic approach to auto-parallelization: integrating profile-driven parallelism detection and machine-learning based mapping", ["Georgios Tournavitis", "Zheng Wang", "Bjorn Franke", "Michael F. P. OBoyle"], "https://doi.org/10.1145/1542476.1542496", 11, "pldi", 2009]], "Zheng Wang": [5.8451735185371945e-06, ["Towards a holistic approach to auto-parallelization: integrating profile-driven parallelism detection and machine-learning based mapping", ["Georgios Tournavitis", "Zheng Wang", "Bjorn Franke", "Michael F. P. OBoyle"], "https://doi.org/10.1145/1542476.1542496", 11, "pldi", 2009]], "Bjorn Franke": [0, ["Towards a holistic approach to auto-parallelization: integrating profile-driven parallelism detection and machine-learning based mapping", ["Georgios Tournavitis", "Zheng Wang", "Bjorn Franke", "Michael F. P. OBoyle"], "https://doi.org/10.1145/1542476.1542496", 11, "pldi", 2009]], "Michael F. P. OBoyle": [0, ["Towards a holistic approach to auto-parallelization: integrating profile-driven parallelism detection and machine-learning based mapping", ["Georgios Tournavitis", "Zheng Wang", "Bjorn Franke", "Michael F. P. OBoyle"], "https://doi.org/10.1145/1542476.1542496", 11, "pldi", 2009]], "Pieter Hooimeijer": [0, ["A decision procedure for subset constraints over regular languages", ["Pieter Hooimeijer", "Westley Weimer"], "https://doi.org/10.1145/1542476.1542498", 11, "pldi", 2009]], "Westley Weimer": [0, ["A decision procedure for subset constraints over regular languages", ["Pieter Hooimeijer", "Westley Weimer"], "https://doi.org/10.1145/1542476.1542498", 11, "pldi", 2009]], "August Schwerdfeger": [0, ["Verifiable composition of deterministic grammars", ["August Schwerdfeger", "Eric Van Wyk"], "https://doi.org/10.1145/1542476.1542499", 12, "pldi", 2009]], "Eric Van Wyk": [0, ["Verifiable composition of deterministic grammars", ["August Schwerdfeger", "Eric Van Wyk"], "https://doi.org/10.1145/1542476.1542499", 12, "pldi", 2009]], "Salvatore La Torre": [0, ["Analyzing recursive programs using a fixed-point calculus", ["Salvatore La Torre", "Parthasarathy Madhusudan", "Gennaro Parlato"], "https://doi.org/10.1145/1542476.1542500", 12, "pldi", 2009]], "Parthasarathy Madhusudan": [0, ["Analyzing recursive programs using a fixed-point calculus", ["Salvatore La Torre", "Parthasarathy Madhusudan", "Gennaro Parlato"], "https://doi.org/10.1145/1542476.1542500", 12, "pldi", 2009]], "Gennaro Parlato": [0, ["Analyzing recursive programs using a fixed-point calculus", ["Salvatore La Torre", "Parthasarathy Madhusudan", "Gennaro Parlato"], "https://doi.org/10.1145/1542476.1542500", 12, "pldi", 2009]], "Saurabh Srivastava": [0, ["Program verification using templates over predicate abstraction", ["Saurabh Srivastava", "Sumit Gulwani"], "https://doi.org/10.1145/1542476.1542501", 12, "pldi", 2009]], "Sumit Gulwani": [0, ["Program verification using templates over predicate abstraction", ["Saurabh Srivastava", "Sumit Gulwani"], "https://doi.org/10.1145/1542476.1542501", 12, "pldi", 2009], ["Control-flow refinement and progress invariants for bound analysis", ["Sumit Gulwani", "Sagar Jain", "Eric Koskinen"], "https://doi.org/10.1145/1542476.1542518", 11, "pldi", 2009]], "Edward Aftandilian": [0, ["GC assertions: using the garbage collector to check heap properties", ["Edward Aftandilian", "Samuel Z. Guyer"], "https://doi.org/10.1145/1542476.1542503", 10, "pldi", 2009]], "Samuel Z. Guyer": [0, ["GC assertions: using the garbage collector to check heap properties", ["Edward Aftandilian", "Samuel Z. Guyer"], "https://doi.org/10.1145/1542476.1542503", 10, "pldi", 2009]], "Santosh Nagarakatte": [0, ["SoftBound: highly compatible and complete spatial memory safety for c", ["Santosh Nagarakatte", "Jianzhou Zhao", "Milo M. K. Martin", "Steve Zdancewic"], "https://doi.org/10.1145/1542476.1542504", 14, "pldi", 2009]], "Jianzhou Zhao": [0, ["SoftBound: highly compatible and complete spatial memory safety for c", ["Santosh Nagarakatte", "Jianzhou Zhao", "Milo M. K. Martin", "Steve Zdancewic"], "https://doi.org/10.1145/1542476.1542504", 14, "pldi", 2009]], "Milo M. K. Martin": [0, ["SoftBound: highly compatible and complete spatial memory safety for c", ["Santosh Nagarakatte", "Jianzhou Zhao", "Milo M. K. Martin", "Steve Zdancewic"], "https://doi.org/10.1145/1542476.1542504", 14, "pldi", 2009]], "Steve Zdancewic": [0, ["SoftBound: highly compatible and complete spatial memory safety for c", ["Santosh Nagarakatte", "Jianzhou Zhao", "Milo M. K. Martin", "Steve Zdancewic"], "https://doi.org/10.1145/1542476.1542504", 14, "pldi", 2009]], "Yutaka Oiwa": [0, ["Implementation of the memory-safe full ANSI-C compiler", ["Yutaka Oiwa"], "https://doi.org/10.1145/1542476.1542505", 11, "pldi", 2009]], "Cindy Rubio-Gonzalez": [0, ["Error propagation analysis for file systems", ["Cindy Rubio-Gonzalez", "Haryadi S. Gunawi", "Ben Liblit", "Remzi H. Arpaci-Dusseau", "Andrea C. Arpaci-Dusseau"], "https://doi.org/10.1145/1542476.1542506", 11, "pldi", 2009]], "Haryadi S. Gunawi": [0, ["Error propagation analysis for file systems", ["Cindy Rubio-Gonzalez", "Haryadi S. Gunawi", "Ben Liblit", "Remzi H. Arpaci-Dusseau", "Andrea C. Arpaci-Dusseau"], "https://doi.org/10.1145/1542476.1542506", 11, "pldi", 2009]], "Ben Liblit": [0, ["Error propagation analysis for file systems", ["Cindy Rubio-Gonzalez", "Haryadi S. Gunawi", "Ben Liblit", "Remzi H. Arpaci-Dusseau", "Andrea C. Arpaci-Dusseau"], "https://doi.org/10.1145/1542476.1542506", 11, "pldi", 2009], ["Automatic generation of library bindings using static analysis", ["Tristan Ravitch", "Steve Jackson", "Eric Aderhold", "Ben Liblit"], "https://doi.org/10.1145/1542476.1542516", 11, "pldi", 2009]], "Remzi H. Arpaci-Dusseau": [0, ["Error propagation analysis for file systems", ["Cindy Rubio-Gonzalez", "Haryadi S. Gunawi", "Ben Liblit", "Remzi H. Arpaci-Dusseau", "Andrea C. Arpaci-Dusseau"], "https://doi.org/10.1145/1542476.1542506", 11, "pldi", 2009]], "Andrea C. Arpaci-Dusseau": [0, ["Error propagation analysis for file systems", ["Cindy Rubio-Gonzalez", "Haryadi S. Gunawi", "Ben Liblit", "Remzi H. Arpaci-Dusseau", "Andrea C. Arpaci-Dusseau"], "https://doi.org/10.1145/1542476.1542506", 11, "pldi", 2009]], "Xin Qi": [0, ["Sharing classes between families", ["Xin Qi", "Andrew C. Myers"], "https://doi.org/10.1145/1542476.1542508", 12, "pldi", 2009]], "Andrew C. Myers": [0, ["Sharing classes between families", ["Xin Qi", "Andrew C. Myers"], "https://doi.org/10.1145/1542476.1542508", 12, "pldi", 2009]], "Tillmann Rendel": [0, ["Typed self-representation", ["Tillmann Rendel", "Klaus Ostermann", "Christian Hofer"], "https://doi.org/10.1145/1542476.1542509", 11, "pldi", 2009]], "Klaus Ostermann": [0, ["Typed self-representation", ["Tillmann Rendel", "Klaus Ostermann", "Christian Hofer"], "https://doi.org/10.1145/1542476.1542509", 11, "pldi", 2009]], "Christian Hofer": [0, ["Typed self-representation", ["Tillmann Rendel", "Klaus Ostermann", "Christian Hofer"], "https://doi.org/10.1145/1542476.1542509", 11, "pldi", 2009]], "Ming Kawaguchi": [0, ["Type-based data structure verification", ["Ming Kawaguchi", "Patrick Maxim Rondon", "Ranjit Jhala"], "https://doi.org/10.1145/1542476.1542510", 12, "pldi", 2009]], "Patrick Maxim Rondon": [0, ["Type-based data structure verification", ["Ming Kawaguchi", "Patrick Maxim Rondon", "Ranjit Jhala"], "https://doi.org/10.1145/1542476.1542510", 12, "pldi", 2009]], "Jean-Baptiste Tristan": [0, ["Verified validation of lazy code motion", ["Jean-Baptiste Tristan", "Xavier Leroy"], "https://doi.org/10.1145/1542476.1542512", 11, "pldi", 2009]], "Xavier Leroy": [0, ["Verified validation of lazy code motion", ["Jean-Baptiste Tristan", "Xavier Leroy"], "https://doi.org/10.1145/1542476.1542512", 11, "pldi", 2009]], "Sudipta Kundu": [0, ["Proving optimizations correct using parameterized program equivalence", ["Sudipta Kundu", "Zachary Tatlock", "Sorin Lerner"], "https://doi.org/10.1145/1542476.1542513", 11, "pldi", 2009]], "Zachary Tatlock": [0, ["Proving optimizations correct using parameterized program equivalence", ["Sudipta Kundu", "Zachary Tatlock", "Sorin Lerner"], "https://doi.org/10.1145/1542476.1542513", 11, "pldi", 2009]], "Karen Zee": [0, ["An integrated proof language for imperative programs", ["Karen Zee", "Viktor Kuncak", "Martin C. Rinard"], "https://doi.org/10.1145/1542476.1542514", 14, "pldi", 2009]], "Viktor Kuncak": [0, ["An integrated proof language for imperative programs", ["Karen Zee", "Viktor Kuncak", "Martin C. Rinard"], "https://doi.org/10.1145/1542476.1542514", 14, "pldi", 2009]], "Martin C. Rinard": [0, ["An integrated proof language for imperative programs", ["Karen Zee", "Viktor Kuncak", "Martin C. Rinard"], "https://doi.org/10.1145/1542476.1542514", 14, "pldi", 2009]], "Tristan Ravitch": [0, ["Automatic generation of library bindings using static analysis", ["Tristan Ravitch", "Steve Jackson", "Eric Aderhold", "Ben Liblit"], "https://doi.org/10.1145/1542476.1542516", 11, "pldi", 2009]], "Steve Jackson": [0, ["Automatic generation of library bindings using static analysis", ["Tristan Ravitch", "Steve Jackson", "Eric Aderhold", "Ben Liblit"], "https://doi.org/10.1145/1542476.1542516", 11, "pldi", 2009]], "Eric Aderhold": [0, ["Automatic generation of library bindings using static analysis", ["Tristan Ravitch", "Steve Jackson", "Eric Aderhold", "Ben Liblit"], "https://doi.org/10.1145/1542476.1542516", 11, "pldi", 2009]], "Satish Chandra": [0, ["Snugglebug: a powerful approach to weakest preconditions", ["Satish Chandra", "Stephen J. Fink", "Manu Sridharan"], "https://doi.org/10.1145/1542476.1542517", 12, "pldi", 2009]], "Sagar Jain": [0, ["Control-flow refinement and progress invariants for bound analysis", ["Sumit Gulwani", "Sagar Jain", "Eric Koskinen"], "https://doi.org/10.1145/1542476.1542518", 11, "pldi", 2009]], "Eric Koskinen": [0, ["Control-flow refinement and progress invariants for bound analysis", ["Sumit Gulwani", "Sagar Jain", "Eric Koskinen"], "https://doi.org/10.1145/1542476.1542518", 11, "pldi", 2009]], "Hiroshi Inoue": [0, ["A study of memory management for web-based applications on multicore processors", ["Hiroshi Inoue", "Hideaki Komatsu", "Toshio Nakatani"], "https://doi.org/10.1145/1542476.1542520", 11, "pldi", 2009]], "Hideaki Komatsu": [0, ["A study of memory management for web-based applications on multicore processors", ["Hiroshi Inoue", "Hideaki Komatsu", "Toshio Nakatani"], "https://doi.org/10.1145/1542476.1542520", 11, "pldi", 2009]], "Toshio Nakatani": [0, ["A study of memory management for web-based applications on multicore processors", ["Hiroshi Inoue", "Hideaki Komatsu", "Toshio Nakatani"], "https://doi.org/10.1145/1542476.1542520", 11, "pldi", 2009]], "Gene Novark": [0, ["Efficiently and precisely locating memory leaks and bloat", ["Gene Novark", "Emery D. Berger", "Benjamin G. Zorn"], "https://doi.org/10.1145/1542476.1542521", 11, "pldi", 2009]], "Emery D. Berger": [0, ["Efficiently and precisely locating memory leaks and bloat", ["Gene Novark", "Emery D. Berger", "Benjamin G. Zorn"], "https://doi.org/10.1145/1542476.1542521", 11, "pldi", 2009]], "Benjamin G. Zorn": [0, ["Efficiently and precisely locating memory leaks and bloat", ["Gene Novark", "Emery D. Berger", "Benjamin G. Zorn"], "https://doi.org/10.1145/1542476.1542521", 11, "pldi", 2009]], "Ohad Shacham": [0, ["Chameleon: adaptive selection of collections", ["Ohad Shacham", "Martin T. Vechev", "Eran Yahav"], "https://doi.org/10.1145/1542476.1542522", 11, "pldi", 2009]], "Martin T. Vechev": [0, ["Chameleon: adaptive selection of collections", ["Ohad Shacham", "Martin T. Vechev", "Eran Yahav"], "https://doi.org/10.1145/1542476.1542522", 11, "pldi", 2009]], "Eran Yahav": [0, ["Chameleon: adaptive selection of collections", ["Ohad Shacham", "Martin T. Vechev", "Eran Yahav"], "https://doi.org/10.1145/1542476.1542522", 11, "pldi", 2009]], "Guoqing Harry Xu": [0, ["Go with the flow: profiling copies to find runtime bloat", ["Guoqing Harry Xu", "Matthew Arnold", "Nick Mitchell", "Atanas Rountev", "Gary Sevitsky"], "https://doi.org/10.1145/1542476.1542523", 12, "pldi", 2009]], "Matthew Arnold": [0, ["Go with the flow: profiling copies to find runtime bloat", ["Guoqing Harry Xu", "Matthew Arnold", "Nick Mitchell", "Atanas Rountev", "Gary Sevitsky"], "https://doi.org/10.1145/1542476.1542523", 12, "pldi", 2009]], "Nick Mitchell": [0, ["Go with the flow: profiling copies to find runtime bloat", ["Guoqing Harry Xu", "Matthew Arnold", "Nick Mitchell", "Atanas Rountev", "Gary Sevitsky"], "https://doi.org/10.1145/1542476.1542523", 12, "pldi", 2009]], "Atanas Rountev": [0, ["Go with the flow: profiling copies to find runtime bloat", ["Guoqing Harry Xu", "Matthew Arnold", "Nick Mitchell", "Atanas Rountev", "Gary Sevitsky"], "https://doi.org/10.1145/1542476.1542523", 12, "pldi", 2009]], "Gary Sevitsky": [0, ["Go with the flow: profiling copies to find runtime bloat", ["Guoqing Harry Xu", "Matthew Arnold", "Nick Mitchell", "Atanas Rountev", "Gary Sevitsky"], "https://doi.org/10.1145/1542476.1542523", 12, "pldi", 2009]], "Bratin Saha": [0, ["Programming model for a heterogeneous x86 platform", ["Bratin Saha", "Xiaocheng Zhou", "Hu Chen", "Ying Gao", "Shoumeng Yan", "Mohan Rajagopalan", "Jesse Fang", "Peinan Zhang", "Ronny Ronen", "Avi Mendelson"], "https://doi.org/10.1145/1542476.1542525", 10, "pldi", 2009]], "Xiaocheng Zhou": [0, ["Programming model for a heterogeneous x86 platform", ["Bratin Saha", "Xiaocheng Zhou", "Hu Chen", "Ying Gao", "Shoumeng Yan", "Mohan Rajagopalan", "Jesse Fang", "Peinan Zhang", "Ronny Ronen", "Avi Mendelson"], "https://doi.org/10.1145/1542476.1542525", 10, "pldi", 2009]], "Hu Chen": [0, ["Programming model for a heterogeneous x86 platform", ["Bratin Saha", "Xiaocheng Zhou", "Hu Chen", "Ying Gao", "Shoumeng Yan", "Mohan Rajagopalan", "Jesse Fang", "Peinan Zhang", "Ronny Ronen", "Avi Mendelson"], "https://doi.org/10.1145/1542476.1542525", 10, "pldi", 2009]], "Ying Gao": [0, ["Programming model for a heterogeneous x86 platform", ["Bratin Saha", "Xiaocheng Zhou", "Hu Chen", "Ying Gao", "Shoumeng Yan", "Mohan Rajagopalan", "Jesse Fang", "Peinan Zhang", "Ronny Ronen", "Avi Mendelson"], "https://doi.org/10.1145/1542476.1542525", 10, "pldi", 2009]], "Shoumeng Yan": [0, ["Programming model for a heterogeneous x86 platform", ["Bratin Saha", "Xiaocheng Zhou", "Hu Chen", "Ying Gao", "Shoumeng Yan", "Mohan Rajagopalan", "Jesse Fang", "Peinan Zhang", "Ronny Ronen", "Avi Mendelson"], "https://doi.org/10.1145/1542476.1542525", 10, "pldi", 2009]], "Mohan Rajagopalan": [0, ["Programming model for a heterogeneous x86 platform", ["Bratin Saha", "Xiaocheng Zhou", "Hu Chen", "Ying Gao", "Shoumeng Yan", "Mohan Rajagopalan", "Jesse Fang", "Peinan Zhang", "Ronny Ronen", "Avi Mendelson"], "https://doi.org/10.1145/1542476.1542525", 10, "pldi", 2009]], "Jesse Fang": [0, ["Programming model for a heterogeneous x86 platform", ["Bratin Saha", "Xiaocheng Zhou", "Hu Chen", "Ying Gao", "Shoumeng Yan", "Mohan Rajagopalan", "Jesse Fang", "Peinan Zhang", "Ronny Ronen", "Avi Mendelson"], "https://doi.org/10.1145/1542476.1542525", 10, "pldi", 2009]], "Peinan Zhang": [0, ["Programming model for a heterogeneous x86 platform", ["Bratin Saha", "Xiaocheng Zhou", "Hu Chen", "Ying Gao", "Shoumeng Yan", "Mohan Rajagopalan", "Jesse Fang", "Peinan Zhang", "Ronny Ronen", "Avi Mendelson"], "https://doi.org/10.1145/1542476.1542525", 10, "pldi", 2009]], "Ronny Ronen": [0, ["Programming model for a heterogeneous x86 platform", ["Bratin Saha", "Xiaocheng Zhou", "Hu Chen", "Ying Gao", "Shoumeng Yan", "Mohan Rajagopalan", "Jesse Fang", "Peinan Zhang", "Ronny Ronen", "Avi Mendelson"], "https://doi.org/10.1145/1542476.1542525", 10, "pldi", 2009]], "Avi Mendelson": [0, ["Programming model for a heterogeneous x86 platform", ["Bratin Saha", "Xiaocheng Zhou", "Hu Chen", "Ying Gao", "Shoumeng Yan", "Mohan Rajagopalan", "Jesse Fang", "Peinan Zhang", "Ronny Ronen", "Avi Mendelson"], "https://doi.org/10.1145/1542476.1542525", 10, "pldi", 2009]], "Nathan R. Tallent": [0, ["Binary analysis for measurement and attribution of program performance", ["Nathan R. Tallent", "John M. Mellor-Crummey", "Michael W. Fagan"], "https://doi.org/10.1145/1542476.1542526", 12, "pldi", 2009]], "John M. Mellor-Crummey": [0, ["Binary analysis for measurement and attribution of program performance", ["Nathan R. Tallent", "John M. Mellor-Crummey", "Michael W. Fagan"], "https://doi.org/10.1145/1542476.1542526", 12, "pldi", 2009]], "Michael W. Fagan": [0, ["Binary analysis for measurement and attribution of program performance", ["Nathan R. Tallent", "John M. Mellor-Crummey", "Michael W. Fagan"], "https://doi.org/10.1145/1542476.1542526", 12, "pldi", 2009]], "Kevin J. Hoffman": [0, ["Semantics-aware trace analysis", ["Kevin J. Hoffman", "Patrick Eugster", "Suresh Jagannathan"], "https://doi.org/10.1145/1542476.1542527", 12, "pldi", 2009]], "Patrick Eugster": [0, ["Semantics-aware trace analysis", ["Kevin J. Hoffman", "Patrick Eugster", "Suresh Jagannathan"], "https://doi.org/10.1145/1542476.1542527", 12, "pldi", 2009]], "Suresh Jagannathan": [0, ["Semantics-aware trace analysis", ["Kevin J. Hoffman", "Patrick Eugster", "Suresh Jagannathan"], "https://doi.org/10.1145/1542476.1542527", 12, "pldi", 2009]], "Andreas Gal": [0, ["Trace-based just-in-time type specialization for dynamic languages", ["Andreas Gal", "Brendan Eich", "Mike Shaver", "David Anderson", "David Mandelin", "Mohammad R. Haghighat", "Blake Kaplan", "Graydon Hoare", "Boris Zbarsky", "Jason Orendorff", "Jesse Ruderman", "Edwin W. Smith", "Rick Reitmaier", "Michael Bebenita", "Mason Chang", "Michael Franz"], "https://doi.org/10.1145/1542476.1542528", 14, "pldi", 2009]], "Brendan Eich": [0, ["Trace-based just-in-time type specialization for dynamic languages", ["Andreas Gal", "Brendan Eich", "Mike Shaver", "David Anderson", "David Mandelin", "Mohammad R. Haghighat", "Blake Kaplan", "Graydon Hoare", "Boris Zbarsky", "Jason Orendorff", "Jesse Ruderman", "Edwin W. Smith", "Rick Reitmaier", "Michael Bebenita", "Mason Chang", "Michael Franz"], "https://doi.org/10.1145/1542476.1542528", 14, "pldi", 2009]], "Mike Shaver": [0, ["Trace-based just-in-time type specialization for dynamic languages", ["Andreas Gal", "Brendan Eich", "Mike Shaver", "David Anderson", "David Mandelin", "Mohammad R. Haghighat", "Blake Kaplan", "Graydon Hoare", "Boris Zbarsky", "Jason Orendorff", "Jesse Ruderman", "Edwin W. Smith", "Rick Reitmaier", "Michael Bebenita", "Mason Chang", "Michael Franz"], "https://doi.org/10.1145/1542476.1542528", 14, "pldi", 2009]], "David Anderson": [0, ["Trace-based just-in-time type specialization for dynamic languages", ["Andreas Gal", "Brendan Eich", "Mike Shaver", "David Anderson", "David Mandelin", "Mohammad R. Haghighat", "Blake Kaplan", "Graydon Hoare", "Boris Zbarsky", "Jason Orendorff", "Jesse Ruderman", "Edwin W. Smith", "Rick Reitmaier", "Michael Bebenita", "Mason Chang", "Michael Franz"], "https://doi.org/10.1145/1542476.1542528", 14, "pldi", 2009]], "David Mandelin": [0, ["Trace-based just-in-time type specialization for dynamic languages", ["Andreas Gal", "Brendan Eich", "Mike Shaver", "David Anderson", "David Mandelin", "Mohammad R. Haghighat", "Blake Kaplan", "Graydon Hoare", "Boris Zbarsky", "Jason Orendorff", "Jesse Ruderman", "Edwin W. Smith", "Rick Reitmaier", "Michael Bebenita", "Mason Chang", "Michael Franz"], "https://doi.org/10.1145/1542476.1542528", 14, "pldi", 2009]], "Mohammad R. Haghighat": [0, ["Trace-based just-in-time type specialization for dynamic languages", ["Andreas Gal", "Brendan Eich", "Mike Shaver", "David Anderson", "David Mandelin", "Mohammad R. Haghighat", "Blake Kaplan", "Graydon Hoare", "Boris Zbarsky", "Jason Orendorff", "Jesse Ruderman", "Edwin W. Smith", "Rick Reitmaier", "Michael Bebenita", "Mason Chang", "Michael Franz"], "https://doi.org/10.1145/1542476.1542528", 14, "pldi", 2009]], "Blake Kaplan": [0, ["Trace-based just-in-time type specialization for dynamic languages", ["Andreas Gal", "Brendan Eich", "Mike Shaver", "David Anderson", "David Mandelin", "Mohammad R. Haghighat", "Blake Kaplan", "Graydon Hoare", "Boris Zbarsky", "Jason Orendorff", "Jesse Ruderman", "Edwin W. Smith", "Rick Reitmaier", "Michael Bebenita", "Mason Chang", "Michael Franz"], "https://doi.org/10.1145/1542476.1542528", 14, "pldi", 2009]], "Graydon Hoare": [0, ["Trace-based just-in-time type specialization for dynamic languages", ["Andreas Gal", "Brendan Eich", "Mike Shaver", "David Anderson", "David Mandelin", "Mohammad R. Haghighat", "Blake Kaplan", "Graydon Hoare", "Boris Zbarsky", "Jason Orendorff", "Jesse Ruderman", "Edwin W. Smith", "Rick Reitmaier", "Michael Bebenita", "Mason Chang", "Michael Franz"], "https://doi.org/10.1145/1542476.1542528", 14, "pldi", 2009]], "Boris Zbarsky": [0, ["Trace-based just-in-time type specialization for dynamic languages", ["Andreas Gal", "Brendan Eich", "Mike Shaver", "David Anderson", "David Mandelin", "Mohammad R. Haghighat", "Blake Kaplan", "Graydon Hoare", "Boris Zbarsky", "Jason Orendorff", "Jesse Ruderman", "Edwin W. Smith", "Rick Reitmaier", "Michael Bebenita", "Mason Chang", "Michael Franz"], "https://doi.org/10.1145/1542476.1542528", 14, "pldi", 2009]], "Jason Orendorff": [0, ["Trace-based just-in-time type specialization for dynamic languages", ["Andreas Gal", "Brendan Eich", "Mike Shaver", "David Anderson", "David Mandelin", "Mohammad R. Haghighat", "Blake Kaplan", "Graydon Hoare", "Boris Zbarsky", "Jason Orendorff", "Jesse Ruderman", "Edwin W. Smith", "Rick Reitmaier", "Michael Bebenita", "Mason Chang", "Michael Franz"], "https://doi.org/10.1145/1542476.1542528", 14, "pldi", 2009]], "Jesse Ruderman": [0, ["Trace-based just-in-time type specialization for dynamic languages", ["Andreas Gal", "Brendan Eich", "Mike Shaver", "David Anderson", "David Mandelin", "Mohammad R. Haghighat", "Blake Kaplan", "Graydon Hoare", "Boris Zbarsky", "Jason Orendorff", "Jesse Ruderman", "Edwin W. Smith", "Rick Reitmaier", "Michael Bebenita", "Mason Chang", "Michael Franz"], "https://doi.org/10.1145/1542476.1542528", 14, "pldi", 2009]], "Edwin W. Smith": [0, ["Trace-based just-in-time type specialization for dynamic languages", ["Andreas Gal", "Brendan Eich", "Mike Shaver", "David Anderson", "David Mandelin", "Mohammad R. Haghighat", "Blake Kaplan", "Graydon Hoare", "Boris Zbarsky", "Jason Orendorff", "Jesse Ruderman", "Edwin W. Smith", "Rick Reitmaier", "Michael Bebenita", "Mason Chang", "Michael Franz"], "https://doi.org/10.1145/1542476.1542528", 14, "pldi", 2009]], "Rick Reitmaier": [0, ["Trace-based just-in-time type specialization for dynamic languages", ["Andreas Gal", "Brendan Eich", "Mike Shaver", "David Anderson", "David Mandelin", "Mohammad R. Haghighat", "Blake Kaplan", "Graydon Hoare", "Boris Zbarsky", "Jason Orendorff", "Jesse Ruderman", "Edwin W. Smith", "Rick Reitmaier", "Michael Bebenita", "Mason Chang", "Michael Franz"], "https://doi.org/10.1145/1542476.1542528", 14, "pldi", 2009]], "Michael Bebenita": [0, ["Trace-based just-in-time type specialization for dynamic languages", ["Andreas Gal", "Brendan Eich", "Mike Shaver", "David Anderson", "David Mandelin", "Mohammad R. Haghighat", "Blake Kaplan", "Graydon Hoare", "Boris Zbarsky", "Jason Orendorff", "Jesse Ruderman", "Edwin W. Smith", "Rick Reitmaier", "Michael Bebenita", "Mason Chang", "Michael Franz"], "https://doi.org/10.1145/1542476.1542528", 14, "pldi", 2009]], "Mason Chang": [0.00017722308621159755, ["Trace-based just-in-time type specialization for dynamic languages", ["Andreas Gal", "Brendan Eich", "Mike Shaver", "David Anderson", "David Mandelin", "Mohammad R. Haghighat", "Blake Kaplan", "Graydon Hoare", "Boris Zbarsky", "Jason Orendorff", "Jesse Ruderman", "Edwin W. Smith", "Rick Reitmaier", "Michael Bebenita", "Mason Chang", "Michael Franz"], "https://doi.org/10.1145/1542476.1542528", 14, "pldi", 2009]], "Michael Franz": [0, ["Trace-based just-in-time type specialization for dynamic languages", ["Andreas Gal", "Brendan Eich", "Mike Shaver", "David Anderson", "David Mandelin", "Mohammad R. Haghighat", "Blake Kaplan", "Graydon Hoare", "Boris Zbarsky", "Jason Orendorff", "Jesse Ruderman", "Edwin W. Smith", "Rick Reitmaier", "Michael Bebenita", "Mason Chang", "Michael Franz"], "https://doi.org/10.1145/1542476.1542528", 14, "pldi", 2009]]}
{"Pavel Panchekha": [["Automatically improving accuracy for floating point expressions", ["Pavel Panchekha", "Alex Sanchez-Stern", "James R. Wilcox", "Zachary Tatlock"], "https://doi.org/10.1145/2737924.2737959", "pldi", 2015], ["Verdi: a framework for implementing and formally verifying distributed systems", ["James R. Wilcox", "Doug Woos", "Pavel Panchekha", "Zachary Tatlock", "Xi Wang", "Michael D. Ernst", "Thomas E. Anderson"], "https://doi.org/10.1145/2737924.2737958", "pldi", 2015]], "Alex Sanchez-Stern": [["Automatically improving accuracy for floating point expressions", ["Pavel Panchekha", "Alex Sanchez-Stern", "James R. Wilcox", "Zachary Tatlock"], "https://doi.org/10.1145/2737924.2737959", "pldi", 2015]], "James R. Wilcox": [["Automatically improving accuracy for floating point expressions", ["Pavel Panchekha", "Alex Sanchez-Stern", "James R. Wilcox", "Zachary Tatlock"], "https://doi.org/10.1145/2737924.2737959", "pldi", 2015], ["Verdi: a framework for implementing and formally verifying distributed systems", ["James R. Wilcox", "Doug Woos", "Pavel Panchekha", "Zachary Tatlock", "Xi Wang", "Michael D. Ernst", "Thomas E. Anderson"], "https://doi.org/10.1145/2737924.2737958", "pldi", 2015]], "Zachary Tatlock": [["Automatically improving accuracy for floating point expressions", ["Pavel Panchekha", "Alex Sanchez-Stern", "James R. Wilcox", "Zachary Tatlock"], "https://doi.org/10.1145/2737924.2737959", "pldi", 2015], ["Verdi: a framework for implementing and formally verifying distributed systems", ["James R. Wilcox", "Doug Woos", "Pavel Panchekha", "Zachary Tatlock", "Xi Wang", "Michael D. Ernst", "Thomas E. Anderson"], "https://doi.org/10.1145/2737924.2737958", "pldi", 2015]], "Danfeng Zhang": [["Diagnosing type errors with class", ["Danfeng Zhang", "Andrew C. Myers", "Dimitrios Vytiniotis", "Simon L. Peyton Jones"], "https://doi.org/10.1145/2737924.2738009", "pldi", 2015]], "Andrew C. Myers": [["Diagnosing type errors with class", ["Danfeng Zhang", "Andrew C. Myers", "Dimitrios Vytiniotis", "Simon L. Peyton Jones"], "https://doi.org/10.1145/2737924.2738009", "pldi", 2015], ["Lightweight, flexible object-oriented generics", ["Yizhou Zhang", "Matthew C. Loring", "Guido Salvaneschi", "Barbara Liskov", "Andrew C. Myers"], "https://doi.org/10.1145/2737924.2738008", "pldi", 2015], ["Finding counterexamples from parsing conflicts", ["Chinawat Isradisaikul", "Andrew C. Myers"], "https://doi.org/10.1145/2737924.2737961", "pldi", 2015]], "Dimitrios Vytiniotis": [["Diagnosing type errors with class", ["Danfeng Zhang", "Andrew C. Myers", "Dimitrios Vytiniotis", "Simon L. Peyton Jones"], "https://doi.org/10.1145/2737924.2738009", "pldi", 2015]], "Simon L. Peyton Jones": [["Diagnosing type errors with class", ["Danfeng Zhang", "Andrew C. Myers", "Dimitrios Vytiniotis", "Simon L. Peyton Jones"], "https://doi.org/10.1145/2737924.2738009", "pldi", 2015]], "Nuno P. Lopes": [["Provably correct peephole optimizations with alive", ["Nuno P. Lopes", "David Menendez", "Santosh Nagarakatte", "John Regehr"], "https://doi.org/10.1145/2737924.2737965", "pldi", 2015]], "David Menendez": [["Provably correct peephole optimizations with alive", ["Nuno P. Lopes", "David Menendez", "Santosh Nagarakatte", "John Regehr"], "https://doi.org/10.1145/2737924.2737965", "pldi", 2015]], "Santosh Nagarakatte": [["Provably correct peephole optimizations with alive", ["Nuno P. Lopes", "David Menendez", "Santosh Nagarakatte", "John Regehr"], "https://doi.org/10.1145/2737924.2737965", "pldi", 2015]], "John Regehr": [["Provably correct peephole optimizations with alive", ["Nuno P. Lopes", "David Menendez", "Santosh Nagarakatte", "John Regehr"], "https://doi.org/10.1145/2737924.2737965", "pldi", 2015]], "Maarten Faddegon": [["Algorithmic debugging of real-world haskell programs: deriving dependencies from the cost centre stack", ["Maarten Faddegon", "Olaf Chitil"], "https://doi.org/10.1145/2737924.2737985", "pldi", 2015]], "Olaf Chitil": [["Algorithmic debugging of real-world haskell programs: deriving dependencies from the cost centre stack", ["Maarten Faddegon", "Olaf Chitil"], "https://doi.org/10.1145/2737924.2737985", "pldi", 2015]], "Stelios Sidiroglou-Douskos": [["Automatic error elimination by horizontal code transfer across multiple applications", ["Stelios Sidiroglou-Douskos", "Eric Lahtinen", "Fan Long", "Martin Rinard"], "https://doi.org/10.1145/2737924.2737988", "pldi", 2015]], "Eric Lahtinen": [["Automatic error elimination by horizontal code transfer across multiple applications", ["Stelios Sidiroglou-Douskos", "Eric Lahtinen", "Fan Long", "Martin Rinard"], "https://doi.org/10.1145/2737924.2737988", "pldi", 2015]], "Fan Long": [["Automatic error elimination by horizontal code transfer across multiple applications", ["Stelios Sidiroglou-Douskos", "Eric Lahtinen", "Fan Long", "Martin Rinard"], "https://doi.org/10.1145/2737924.2737988", "pldi", 2015]], "Martin Rinard": [["Automatic error elimination by horizontal code transfer across multiple applications", ["Stelios Sidiroglou-Douskos", "Eric Lahtinen", "Fan Long", "Martin Rinard"], "https://doi.org/10.1145/2737924.2737988", "pldi", 2015]], "Peng Liu": [["Light: replay via tightly bounded recording", ["Peng Liu", "Xiangyu Zhang", "Omer Tripp", "Yunhui Zheng"], "https://doi.org/10.1145/2737924.2738001", "pldi", 2015]], "Xiangyu Zhang": [["Light: replay via tightly bounded recording", ["Peng Liu", "Xiangyu Zhang", "Omer Tripp", "Yunhui Zheng"], "https://doi.org/10.1145/2737924.2738001", "pldi", 2015]], "Omer Tripp": [["Light: replay via tightly bounded recording", ["Peng Liu", "Xiangyu Zhang", "Omer Tripp", "Yunhui Zheng"], "https://doi.org/10.1145/2737924.2738001", "pldi", 2015]], "Yunhui Zheng": [["Light: replay via tightly bounded recording", ["Peng Liu", "Xiangyu Zhang", "Omer Tripp", "Yunhui Zheng"], "https://doi.org/10.1145/2737924.2738001", "pldi", 2015]], "Christopher Lidbury": [["Many-core compiler fuzzing", ["Christopher Lidbury", "Andrei Lascu", "Nathan Chong", "Alastair F. Donaldson"], "https://doi.org/10.1145/2737924.2737986", "pldi", 2015]], "Andrei Lascu": [["Many-core compiler fuzzing", ["Christopher Lidbury", "Andrei Lascu", "Nathan Chong", "Alastair F. Donaldson"], "https://doi.org/10.1145/2737924.2737986", "pldi", 2015]], "Nathan Chong": [["Many-core compiler fuzzing", ["Christopher Lidbury", "Andrei Lascu", "Nathan Chong", "Alastair F. Donaldson"], "https://doi.org/10.1145/2737924.2737986", "pldi", 2015]], "Alastair F. Donaldson": [["Many-core compiler fuzzing", ["Christopher Lidbury", "Andrei Lascu", "Nathan Chong", "Alastair F. Donaldson"], "https://doi.org/10.1145/2737924.2737986", "pldi", 2015], ["Asynchronous programming, analysis and testing with state machines", ["Pantazis Deligiannis", "Alastair F. Donaldson", "Jeroen Ketema", "Akash Lal", "Paul Thomson"], "https://doi.org/10.1145/2737924.2737996", "pldi", 2015]], "Ilya Sergey": [["Mechanized verification of fine-grained concurrent programs", ["Ilya Sergey", "Aleksandar Nanevski", "Anindya Banerjee"], "https://doi.org/10.1145/2737924.2737964", "pldi", 2015]], "Aleksandar Nanevski": [["Mechanized verification of fine-grained concurrent programs", ["Ilya Sergey", "Aleksandar Nanevski", "Anindya Banerjee"], "https://doi.org/10.1145/2737924.2737964", "pldi", 2015]], "Anindya Banerjee": [["Mechanized verification of fine-grained concurrent programs", ["Ilya Sergey", "Aleksandar Nanevski", "Anindya Banerjee"], "https://doi.org/10.1145/2737924.2737964", "pldi", 2015]], "Rahul Sharma": [["Verification of producer-consumer synchronization in GPU programs", ["Rahul Sharma", "Michael Bauer", "Alex Aiken"], "https://doi.org/10.1145/2737924.2737962", "pldi", 2015]], "Michael Bauer": [["Verification of producer-consumer synchronization in GPU programs", ["Rahul Sharma", "Michael Bauer", "Alex Aiken"], "https://doi.org/10.1145/2737924.2737962", "pldi", 2015]], "Alex Aiken": [["Verification of producer-consumer synchronization in GPU programs", ["Rahul Sharma", "Michael Bauer", "Alex Aiken"], "https://doi.org/10.1145/2737924.2737962", "pldi", 2015], ["Composing concurrency control", ["Ofri Ziv", "Alex Aiken", "Guy Golan-Gueta", "G. Ramalingam", "Mooly Sagiv"], "https://doi.org/10.1145/2737924.2737970", "pldi", 2015]], "Peter Gammie": [["Relaxing safely: verified on-the-fly garbage collection for x86-TSO", ["Peter Gammie", "Antony L. Hosking", "Kai Engelhardt"], "https://doi.org/10.1145/2737924.2738006", "pldi", 2015]], "Antony L. Hosking": [["Relaxing safely: verified on-the-fly garbage collection for x86-TSO", ["Peter Gammie", "Antony L. Hosking", "Kai Engelhardt"], "https://doi.org/10.1145/2737924.2738006", "pldi", 2015]], "Kai Engelhardt": [["Relaxing safely: verified on-the-fly garbage collection for x86-TSO", ["Peter Gammie", "Antony L. Hosking", "Kai Engelhardt"], "https://doi.org/10.1145/2737924.2738006", "pldi", 2015]], "Joseph Tassarotti": [["Verifying read-copy-update in a logic for weak memory", ["Joseph Tassarotti", "Derek Dreyer", "Viktor Vafeiadis"], "https://doi.org/10.1145/2737924.2737992", "pldi", 2015]], "Derek Dreyer": [["Verifying read-copy-update in a logic for weak memory", ["Joseph Tassarotti", "Derek Dreyer", "Viktor Vafeiadis"], "https://doi.org/10.1145/2737924.2737992", "pldi", 2015]], "Viktor Vafeiadis": [["Verifying read-copy-update in a logic for weak memory", ["Joseph Tassarotti", "Derek Dreyer", "Viktor Vafeiadis"], "https://doi.org/10.1145/2737924.2737992", "pldi", 2015], ["A formal C memory model supporting integer-pointer casts", ["Jeehoon Kang", "Chung-Kil Hur", "William Mansky", "Dmitri Garbuzov", "Steve Zdancewic", "Viktor Vafeiadis"], "https://doi.org/10.1145/2737924.2738005", "pldi", 2015]], "Yousun Ko": [["LaminarIR: compile-time queues for structured streams", ["Yousun Ko", "Bernd Burgstaller", "Bernhard Scholz"], "https://doi.org/10.1145/2737924.2737994", "pldi", 2015]], "Bernd Burgstaller": [["LaminarIR: compile-time queues for structured streams", ["Yousun Ko", "Bernd Burgstaller", "Bernhard Scholz"], "https://doi.org/10.1145/2737924.2737994", "pldi", 2015]], "Bernhard Scholz": [["LaminarIR: compile-time queues for structured streams", ["Yousun Ko", "Bernd Burgstaller", "Bernhard Scholz"], "https://doi.org/10.1145/2737924.2737994", "pldi", 2015]], "Wei Ding": [["Optimizing off-chip accesses in multicores", ["Wei Ding", "Xulong Tang", "Mahmut T. Kandemir", "Yuanrui Zhang", "Emre Kultursay"], "https://doi.org/10.1145/2737924.2737989", "pldi", 2015]], "Xulong Tang": [["Optimizing off-chip accesses in multicores", ["Wei Ding", "Xulong Tang", "Mahmut T. Kandemir", "Yuanrui Zhang", "Emre Kultursay"], "https://doi.org/10.1145/2737924.2737989", "pldi", 2015]], "Mahmut T. Kandemir": [["Optimizing off-chip accesses in multicores", ["Wei Ding", "Xulong Tang", "Mahmut T. Kandemir", "Yuanrui Zhang", "Emre Kultursay"], "https://doi.org/10.1145/2737924.2737989", "pldi", 2015]], "Yuanrui Zhang": [["Optimizing off-chip accesses in multicores", ["Wei Ding", "Xulong Tang", "Mahmut T. Kandemir", "Yuanrui Zhang", "Emre Kultursay"], "https://doi.org/10.1145/2737924.2737989", "pldi", 2015]], "Emre Kultursay": [["Optimizing off-chip accesses in multicores", ["Wei Ding", "Xulong Tang", "Mahmut T. Kandemir", "Yuanrui Zhang", "Emre Kultursay"], "https://doi.org/10.1145/2737924.2737989", "pldi", 2015]], "Sanyam Mehta": [["Improving compiler scalability: optimizing large programs at small price", ["Sanyam Mehta", "Pen-Chung Yew"], "https://doi.org/10.1145/2737924.2737954", "pldi", 2015]], "Pen-Chung Yew": [["Improving compiler scalability: optimizing large programs at small price", ["Sanyam Mehta", "Pen-Chung Yew"], "https://doi.org/10.1145/2737924.2737954", "pldi", 2015]], "Andrew W. Appel": [["Verification of a cryptographic primitive: SHA-256 (abstract)", ["Andrew W. Appel"], "https://doi.org/10.1145/2737924.2774972", "pldi", 2015]], "Pantazis Deligiannis": [["Asynchronous programming, analysis and testing with state machines", ["Pantazis Deligiannis", "Alastair F. Donaldson", "Jeroen Ketema", "Akash Lal", "Paul Thomson"], "https://doi.org/10.1145/2737924.2737996", "pldi", 2015]], "Jeroen Ketema": [["Asynchronous programming, analysis and testing with state machines", ["Pantazis Deligiannis", "Alastair F. Donaldson", "Jeroen Ketema", "Akash Lal", "Paul Thomson"], "https://doi.org/10.1145/2737924.2737996", "pldi", 2015]], "Akash Lal": [["Asynchronous programming, analysis and testing with state machines", ["Pantazis Deligiannis", "Alastair F. Donaldson", "Jeroen Ketema", "Akash Lal", "Paul Thomson"], "https://doi.org/10.1145/2737924.2737996", "pldi", 2015], ["DAG inlining: a decision procedure for reachability-modulo-theories in hierarchical programs", ["Akash Lal", "Shaz Qadeer"], "https://doi.org/10.1145/2737924.2737987", "pldi", 2015]], "Paul Thomson": [["Asynchronous programming, analysis and testing with state machines", ["Pantazis Deligiannis", "Alastair F. Donaldson", "Jeroen Ketema", "Akash Lal", "Paul Thomson"], "https://doi.org/10.1145/2737924.2737996", "pldi", 2015]], "Jeff Huang": [["Stateless model checking concurrent programs with maximal causality reduction", ["Jeff Huang"], "https://doi.org/10.1145/2737924.2737975", "pldi", 2015]], "Malavika Samak": [["Synthesizing racy tests", ["Malavika Samak", "Murali Krishna Ramanathan", "Suresh Jagannathan"], "https://doi.org/10.1145/2737924.2737998", "pldi", 2015]], "Murali Krishna Ramanathan": [["Synthesizing racy tests", ["Malavika Samak", "Murali Krishna Ramanathan", "Suresh Jagannathan"], "https://doi.org/10.1145/2737924.2737998", "pldi", 2015]], "Suresh Jagannathan": [["Synthesizing racy tests", ["Malavika Samak", "Murali Krishna Ramanathan", "Suresh Jagannathan"], "https://doi.org/10.1145/2737924.2737998", "pldi", 2015], ["Declarative programming over eventually consistent data stores", ["K. C. Sivaramakrishnan", "Gowtham Kaki", "Suresh Jagannathan"], "https://doi.org/10.1145/2737924.2737981", "pldi", 2015]], "Eric Koskinen": [["The Push/Pull model of transactions", ["Eric Koskinen", "Matthew J. Parkinson"], "https://doi.org/10.1145/2737924.2737995", "pldi", 2015]], "Matthew J. Parkinson": [["The Push/Pull model of transactions", ["Eric Koskinen", "Matthew J. Parkinson"], "https://doi.org/10.1145/2737924.2737995", "pldi", 2015]], "Jedidiah McClurg": [["Efficient synthesis of network updates", ["Jedidiah McClurg", "Hossein Hojjat", "Pavol Cerny", "Nate Foster"], "https://doi.org/10.1145/2737924.2737980", "pldi", 2015]], "Hossein Hojjat": [["Efficient synthesis of network updates", ["Jedidiah McClurg", "Hossein Hojjat", "Pavol Cerny", "Nate Foster"], "https://doi.org/10.1145/2737924.2737980", "pldi", 2015]], "Pavol Cerny": [["Efficient synthesis of network updates", ["Jedidiah McClurg", "Hossein Hojjat", "Pavol Cerny", "Nate Foster"], "https://doi.org/10.1145/2737924.2737980", "pldi", 2015]], "Nate Foster": [["Efficient synthesis of network updates", ["Jedidiah McClurg", "Hossein Hojjat", "Pavol Cerny", "Nate Foster"], "https://doi.org/10.1145/2737924.2737980", "pldi", 2015]], "Aditya V. Nori": [["Efficient synthesis of probabilistic programs", ["Aditya V. Nori", "Sherjil Ozair", "Sriram K. Rajamani", "Deepak Vijaykeerthy"], "https://doi.org/10.1145/2737924.2737982", "pldi", 2015]], "Sherjil Ozair": [["Efficient synthesis of probabilistic programs", ["Aditya V. Nori", "Sherjil Ozair", "Sriram K. Rajamani", "Deepak Vijaykeerthy"], "https://doi.org/10.1145/2737924.2737982", "pldi", 2015]], "Sriram K. Rajamani": [["Efficient synthesis of probabilistic programs", ["Aditya V. Nori", "Sherjil Ozair", "Sriram K. Rajamani", "Deepak Vijaykeerthy"], "https://doi.org/10.1145/2737924.2737982", "pldi", 2015]], "Deepak Vijaykeerthy": [["Efficient synthesis of probabilistic programs", ["Aditya V. Nori", "Sherjil Ozair", "Sriram K. Rajamani", "Deepak Vijaykeerthy"], "https://doi.org/10.1145/2737924.2737982", "pldi", 2015]], "Daniel W. Barowy": [["FlashRelate: extracting relational data from semi-structured spreadsheets using examples", ["Daniel W. Barowy", "Sumit Gulwani", "Ted Hart", "Benjamin G. Zorn"], "https://doi.org/10.1145/2737924.2737952", "pldi", 2015]], "Sumit Gulwani": [["FlashRelate: extracting relational data from semi-structured spreadsheets using examples", ["Daniel W. Barowy", "Sumit Gulwani", "Ted Hart", "Benjamin G. Zorn"], "https://doi.org/10.1145/2737924.2737952", "pldi", 2015]], "Ted Hart": [["FlashRelate: extracting relational data from semi-structured spreadsheets using examples", ["Daniel W. Barowy", "Sumit Gulwani", "Ted Hart", "Benjamin G. Zorn"], "https://doi.org/10.1145/2737924.2737952", "pldi", 2015]], "Benjamin G. Zorn": [["FlashRelate: extracting relational data from semi-structured spreadsheets using examples", ["Daniel W. Barowy", "Sumit Gulwani", "Ted Hart", "Benjamin G. Zorn"], "https://doi.org/10.1145/2737924.2737952", "pldi", 2015]], "John K. Feser": [["Synthesizing data structure transformations from input-output examples", ["John K. Feser", "Swarat Chaudhuri", "Isil Dillig"], "https://doi.org/10.1145/2737924.2737977", "pldi", 2015]], "Swarat Chaudhuri": [["Synthesizing data structure transformations from input-output examples", ["John K. Feser", "Swarat Chaudhuri", "Isil Dillig"], "https://doi.org/10.1145/2737924.2737977", "pldi", 2015]], "Isil Dillig": [["Synthesizing data structure transformations from input-output examples", ["John K. Feser", "Swarat Chaudhuri", "Isil Dillig"], "https://doi.org/10.1145/2737924.2737977", "pldi", 2015], ["Static detection of asymptotic performance bugs in collection traversals", ["Oswaldo Olivo", "Isil Dillig", "Calvin Lin"], "https://doi.org/10.1145/2737924.2737966", "pldi", 2015]], "Ofri Ziv": [["Composing concurrency control", ["Ofri Ziv", "Alex Aiken", "Guy Golan-Gueta", "G. Ramalingam", "Mooly Sagiv"], "https://doi.org/10.1145/2737924.2737970", "pldi", 2015]], "Guy Golan-Gueta": [["Composing concurrency control", ["Ofri Ziv", "Alex Aiken", "Guy Golan-Gueta", "G. Ramalingam", "Mooly Sagiv"], "https://doi.org/10.1145/2737924.2737970", "pldi", 2015]], "G. Ramalingam": [["Composing concurrency control", ["Ofri Ziv", "Alex Aiken", "Guy Golan-Gueta", "G. Ramalingam", "Mooly Sagiv"], "https://doi.org/10.1145/2737924.2737970", "pldi", 2015]], "Mooly Sagiv": [["Composing concurrency control", ["Ofri Ziv", "Alex Aiken", "Guy Golan-Gueta", "G. Ramalingam", "Mooly Sagiv"], "https://doi.org/10.1145/2737924.2737970", "pldi", 2015]], "Naling Zhang": [["Dynamic partial order reduction for relaxed memory models", ["Naling Zhang", "Markus Kusano", "Chao Wang"], "https://doi.org/10.1145/2737924.2737956", "pldi", 2015]], "Markus Kusano": [["Dynamic partial order reduction for relaxed memory models", ["Naling Zhang", "Markus Kusano", "Chao Wang"], "https://doi.org/10.1145/2737924.2737956", "pldi", 2015]], "Chao Wang": [["Dynamic partial order reduction for relaxed memory models", ["Naling Zhang", "Markus Kusano", "Chao Wang"], "https://doi.org/10.1145/2737924.2737956", "pldi", 2015]], "Michael Emmi": [["Monitoring refinement via symbolic reasoning", ["Michael Emmi", "Constantin Enea", "Jad Hamza"], "https://doi.org/10.1145/2737924.2737983", "pldi", 2015]], "Constantin Enea": [["Monitoring refinement via symbolic reasoning", ["Michael Emmi", "Constantin Enea", "Jad Hamza"], "https://doi.org/10.1145/2737924.2737983", "pldi", 2015]], "Jad Hamza": [["Monitoring refinement via symbolic reasoning", ["Michael Emmi", "Constantin Enea", "Jad Hamza"], "https://doi.org/10.1145/2737924.2737983", "pldi", 2015]], "Stephen Longfield Jr.": [["Preventing glitches and short circuits in high-level self-timed chip specifications", ["Stephen Longfield Jr.", "Brittany Nkounkou", "Rajit Manohar", "Ross Tate"], "https://doi.org/10.1145/2737924.2737967", "pldi", 2015]], "Brittany Nkounkou": [["Preventing glitches and short circuits in high-level self-timed chip specifications", ["Stephen Longfield Jr.", "Brittany Nkounkou", "Rajit Manohar", "Ross Tate"], "https://doi.org/10.1145/2737924.2737967", "pldi", 2015]], "Rajit Manohar": [["Preventing glitches and short circuits in high-level self-timed chip specifications", ["Stephen Longfield Jr.", "Brittany Nkounkou", "Rajit Manohar", "Ross Tate"], "https://doi.org/10.1145/2737924.2737967", "pldi", 2015]], "Ross Tate": [["Preventing glitches and short circuits in high-level self-timed chip specifications", ["Stephen Longfield Jr.", "Brittany Nkounkou", "Rajit Manohar", "Ross Tate"], "https://doi.org/10.1145/2737924.2737967", "pldi", 2015]], "Shaz Qadeer": [["DAG inlining: a decision procedure for reachability-modulo-theories in hierarchical programs", ["Akash Lal", "Shaz Qadeer"], "https://doi.org/10.1145/2737924.2737987", "pldi", 2015]], "Andrew Johnson": [["Exploring and enforcing security guarantees via program dependence graphs", ["Andrew Johnson", "Lucas Waye", "Scott Moore", "Stephen Chong"], "https://doi.org/10.1145/2737924.2737957", "pldi", 2015]], "Lucas Waye": [["Exploring and enforcing security guarantees via program dependence graphs", ["Andrew Johnson", "Lucas Waye", "Scott Moore", "Stephen Chong"], "https://doi.org/10.1145/2737924.2737957", "pldi", 2015]], "Scott Moore": [["Exploring and enforcing security guarantees via program dependence graphs", ["Andrew Johnson", "Lucas Waye", "Scott Moore", "Stephen Chong"], "https://doi.org/10.1145/2737924.2737957", "pldi", 2015]], "Stephen Chong": [["Exploring and enforcing security guarantees via program dependence graphs", ["Andrew Johnson", "Lucas Waye", "Scott Moore", "Stephen Chong"], "https://doi.org/10.1145/2737924.2737957", "pldi", 2015]], "Gagandeep Singh": [["Making numerical program analysis fast", ["Gagandeep Singh", "Markus Puschel", "Martin T. Vechev"], "https://doi.org/10.1145/2737924.2738000", "pldi", 2015]], "Markus Puschel": [["Making numerical program analysis fast", ["Gagandeep Singh", "Markus Puschel", "Martin T. Vechev"], "https://doi.org/10.1145/2737924.2738000", "pldi", 2015]], "Martin T. Vechev": [["Making numerical program analysis fast", ["Gagandeep Singh", "Markus Puschel", "Martin T. Vechev"], "https://doi.org/10.1145/2737924.2738000", "pldi", 2015]], "Yusheng Weijiang": [["Tree dependence analysis", ["Yusheng Weijiang", "Shruthi Balakrishna", "Jianqiao Liu", "Milind Kulkarni"], "https://doi.org/10.1145/2737924.2737972", "pldi", 2015]], "Shruthi Balakrishna": [["Tree dependence analysis", ["Yusheng Weijiang", "Shruthi Balakrishna", "Jianqiao Liu", "Milind Kulkarni"], "https://doi.org/10.1145/2737924.2737972", "pldi", 2015]], "Jianqiao Liu": [["Tree dependence analysis", ["Yusheng Weijiang", "Shruthi Balakrishna", "Jianqiao Liu", "Milind Kulkarni"], "https://doi.org/10.1145/2737924.2737972", "pldi", 2015]], "Milind Kulkarni": [["Tree dependence analysis", ["Yusheng Weijiang", "Shruthi Balakrishna", "Jianqiao Liu", "Milind Kulkarni"], "https://doi.org/10.1145/2737924.2737972", "pldi", 2015], ["Efficient execution of recursive programs on commodity vector hardware", ["Bin Ren", "Youngjoon Jo", "Sriram Krishnamoorthy", "Kunal Agrawal", "Milind Kulkarni"], "https://doi.org/10.1145/2737924.2738004", "pldi", 2015]], "Jeehoon Kang": [["A formal C memory model supporting integer-pointer casts", ["Jeehoon Kang", "Chung-Kil Hur", "William Mansky", "Dmitri Garbuzov", "Steve Zdancewic", "Viktor Vafeiadis"], "https://doi.org/10.1145/2737924.2738005", "pldi", 2015]], "Chung-Kil Hur": [["A formal C memory model supporting integer-pointer casts", ["Jeehoon Kang", "Chung-Kil Hur", "William Mansky", "Dmitri Garbuzov", "Steve Zdancewic", "Viktor Vafeiadis"], "https://doi.org/10.1145/2737924.2738005", "pldi", 2015]], "William Mansky": [["A formal C memory model supporting integer-pointer casts", ["Jeehoon Kang", "Chung-Kil Hur", "William Mansky", "Dmitri Garbuzov", "Steve Zdancewic", "Viktor Vafeiadis"], "https://doi.org/10.1145/2737924.2738005", "pldi", 2015]], "Dmitri Garbuzov": [["A formal C memory model supporting integer-pointer casts", ["Jeehoon Kang", "Chung-Kil Hur", "William Mansky", "Dmitri Garbuzov", "Steve Zdancewic", "Viktor Vafeiadis"], "https://doi.org/10.1145/2737924.2738005", "pldi", 2015]], "Steve Zdancewic": [["A formal C memory model supporting integer-pointer casts", ["Jeehoon Kang", "Chung-Kil Hur", "William Mansky", "Dmitri Garbuzov", "Steve Zdancewic", "Viktor Vafeiadis"], "https://doi.org/10.1145/2737924.2738005", "pldi", 2015], ["Type-and-example-directed program synthesis", ["Peter-Michael Osera", "Steve Zdancewic"], "https://doi.org/10.1145/2737924.2738007", "pldi", 2015]], "Chris Hathhorn": [["Defining the undefinedness of C", ["Chris Hathhorn", "Chucky Ellison", "Grigore Rosu"], "https://doi.org/10.1145/2737924.2737979", "pldi", 2015]], "Chucky Ellison": [["Defining the undefinedness of C", ["Chris Hathhorn", "Chucky Ellison", "Grigore Rosu"], "https://doi.org/10.1145/2737924.2737979", "pldi", 2015]], "Grigore Rosu": [["Defining the undefinedness of C", ["Chris Hathhorn", "Chucky Ellison", "Grigore Rosu"], "https://doi.org/10.1145/2737924.2737979", "pldi", 2015], ["KJS: a complete formal semantics of JavaScript", ["Daejun Park", "Andrei Stefanescu", "Grigore Rosu"], "https://doi.org/10.1145/2737924.2737991", "pldi", 2015]], "Daejun Park": [["KJS: a complete formal semantics of JavaScript", ["Daejun Park", "Andrei Stefanescu", "Grigore Rosu"], "https://doi.org/10.1145/2737924.2737991", "pldi", 2015]], "Andrei Stefanescu": [["KJS: a complete formal semantics of JavaScript", ["Daejun Park", "Andrei Stefanescu", "Grigore Rosu"], "https://doi.org/10.1145/2737924.2737991", "pldi", 2015]], "Doug Woos": [["Verdi: a framework for implementing and formally verifying distributed systems", ["James R. Wilcox", "Doug Woos", "Pavel Panchekha", "Zachary Tatlock", "Xi Wang", "Michael D. Ernst", "Thomas E. Anderson"], "https://doi.org/10.1145/2737924.2737958", "pldi", 2015]], "Xi Wang": [["Verdi: a framework for implementing and formally verifying distributed systems", ["James R. Wilcox", "Doug Woos", "Pavel Panchekha", "Zachary Tatlock", "Xi Wang", "Michael D. Ernst", "Thomas E. Anderson"], "https://doi.org/10.1145/2737924.2737958", "pldi", 2015]], "Michael D. Ernst": [["Verdi: a framework for implementing and formally verifying distributed systems", ["James R. Wilcox", "Doug Woos", "Pavel Panchekha", "Zachary Tatlock", "Xi Wang", "Michael D. Ernst", "Thomas E. Anderson"], "https://doi.org/10.1145/2737924.2737958", "pldi", 2015]], "Thomas E. Anderson": [["Verdi: a framework for implementing and formally verifying distributed systems", ["James R. Wilcox", "Doug Woos", "Pavel Panchekha", "Zachary Tatlock", "Xi Wang", "Michael D. Ernst", "Thomas E. Anderson"], "https://doi.org/10.1145/2737924.2737958", "pldi", 2015]], "Oswaldo Olivo": [["Static detection of asymptotic performance bugs in collection traversals", ["Oswaldo Olivo", "Isil Dillig", "Calvin Lin"], "https://doi.org/10.1145/2737924.2737966", "pldi", 2015]], "Calvin Lin": [["Static detection of asymptotic performance bugs in collection traversals", ["Oswaldo Olivo", "Isil Dillig", "Calvin Lin"], "https://doi.org/10.1145/2737924.2737966", "pldi", 2015]], "Yufei Ding": [["Autotuning algorithmic choice for input sensitivity", ["Yufei Ding", "Jason Ansel", "Kalyan Veeramachaneni", "Xipeng Shen", "Una-May OReilly", "Saman P. Amarasinghe"], "https://doi.org/10.1145/2737924.2737969", "pldi", 2015]], "Jason Ansel": [["Autotuning algorithmic choice for input sensitivity", ["Yufei Ding", "Jason Ansel", "Kalyan Veeramachaneni", "Xipeng Shen", "Una-May OReilly", "Saman P. Amarasinghe"], "https://doi.org/10.1145/2737924.2737969", "pldi", 2015]], "Kalyan Veeramachaneni": [["Autotuning algorithmic choice for input sensitivity", ["Yufei Ding", "Jason Ansel", "Kalyan Veeramachaneni", "Xipeng Shen", "Una-May OReilly", "Saman P. Amarasinghe"], "https://doi.org/10.1145/2737924.2737969", "pldi", 2015]], "Xipeng Shen": [["Autotuning algorithmic choice for input sensitivity", ["Yufei Ding", "Jason Ansel", "Kalyan Veeramachaneni", "Xipeng Shen", "Una-May OReilly", "Saman P. Amarasinghe"], "https://doi.org/10.1145/2737924.2737969", "pldi", 2015]], "Una-May OReilly": [["Autotuning algorithmic choice for input sensitivity", ["Yufei Ding", "Jason Ansel", "Kalyan Veeramachaneni", "Xipeng Shen", "Una-May OReilly", "Saman P. Amarasinghe"], "https://doi.org/10.1145/2737924.2737969", "pldi", 2015]], "Saman P. Amarasinghe": [["Autotuning algorithmic choice for input sensitivity", ["Yufei Ding", "Jason Ansel", "Kalyan Veeramachaneni", "Xipeng Shen", "Una-May OReilly", "Saman P. Amarasinghe"], "https://doi.org/10.1145/2737924.2737969", "pldi", 2015], ["Helium: lifting high-performance stencil kernels from stripped x86 binaries to halide DSL code", ["Charith Mendis", "Jeffrey Bosboom", "Kevin Wu", "Shoaib Kamil", "Jonathan Ragan-Kelley", "Sylvain Paris", "Qin Zhao", "Saman P. Amarasinghe"], "https://doi.org/10.1145/2737924.2737974", "pldi", 2015]], "Charith Mendis": [["Helium: lifting high-performance stencil kernels from stripped x86 binaries to halide DSL code", ["Charith Mendis", "Jeffrey Bosboom", "Kevin Wu", "Shoaib Kamil", "Jonathan Ragan-Kelley", "Sylvain Paris", "Qin Zhao", "Saman P. Amarasinghe"], "https://doi.org/10.1145/2737924.2737974", "pldi", 2015]], "Jeffrey Bosboom": [["Helium: lifting high-performance stencil kernels from stripped x86 binaries to halide DSL code", ["Charith Mendis", "Jeffrey Bosboom", "Kevin Wu", "Shoaib Kamil", "Jonathan Ragan-Kelley", "Sylvain Paris", "Qin Zhao", "Saman P. Amarasinghe"], "https://doi.org/10.1145/2737924.2737974", "pldi", 2015]], "Kevin Wu": [["Helium: lifting high-performance stencil kernels from stripped x86 binaries to halide DSL code", ["Charith Mendis", "Jeffrey Bosboom", "Kevin Wu", "Shoaib Kamil", "Jonathan Ragan-Kelley", "Sylvain Paris", "Qin Zhao", "Saman P. Amarasinghe"], "https://doi.org/10.1145/2737924.2737974", "pldi", 2015]], "Shoaib Kamil": [["Helium: lifting high-performance stencil kernels from stripped x86 binaries to halide DSL code", ["Charith Mendis", "Jeffrey Bosboom", "Kevin Wu", "Shoaib Kamil", "Jonathan Ragan-Kelley", "Sylvain Paris", "Qin Zhao", "Saman P. Amarasinghe"], "https://doi.org/10.1145/2737924.2737974", "pldi", 2015]], "Jonathan Ragan-Kelley": [["Helium: lifting high-performance stencil kernels from stripped x86 binaries to halide DSL code", ["Charith Mendis", "Jeffrey Bosboom", "Kevin Wu", "Shoaib Kamil", "Jonathan Ragan-Kelley", "Sylvain Paris", "Qin Zhao", "Saman P. Amarasinghe"], "https://doi.org/10.1145/2737924.2737974", "pldi", 2015]], "Sylvain Paris": [["Helium: lifting high-performance stencil kernels from stripped x86 binaries to halide DSL code", ["Charith Mendis", "Jeffrey Bosboom", "Kevin Wu", "Shoaib Kamil", "Jonathan Ragan-Kelley", "Sylvain Paris", "Qin Zhao", "Saman P. Amarasinghe"], "https://doi.org/10.1145/2737924.2737974", "pldi", 2015]], "Qin Zhao": [["Helium: lifting high-performance stencil kernels from stripped x86 binaries to halide DSL code", ["Charith Mendis", "Jeffrey Bosboom", "Kevin Wu", "Shoaib Kamil", "Jonathan Ragan-Kelley", "Sylvain Paris", "Qin Zhao", "Saman P. Amarasinghe"], "https://doi.org/10.1145/2737924.2737974", "pldi", 2015]], "William J. Bowman": [["Profile-guided meta-programming", ["William J. Bowman", "Swaha Miller", "Vincent St-Amour", "R. Kent Dybvig"], "https://doi.org/10.1145/2737924.2737990", "pldi", 2015]], "Swaha Miller": [["Profile-guided meta-programming", ["William J. Bowman", "Swaha Miller", "Vincent St-Amour", "R. Kent Dybvig"], "https://doi.org/10.1145/2737924.2737990", "pldi", 2015]], "Vincent St-Amour": [["Profile-guided meta-programming", ["William J. Bowman", "Swaha Miller", "Vincent St-Amour", "R. Kent Dybvig"], "https://doi.org/10.1145/2737924.2737990", "pldi", 2015]], "R. Kent Dybvig": [["Profile-guided meta-programming", ["William J. Bowman", "Swaha Miller", "Vincent St-Amour", "R. Kent Dybvig"], "https://doi.org/10.1145/2737924.2737990", "pldi", 2015]], "K. C. Sivaramakrishnan": [["Declarative programming over eventually consistent data stores", ["K. C. Sivaramakrishnan", "Gowtham Kaki", "Suresh Jagannathan"], "https://doi.org/10.1145/2737924.2737981", "pldi", 2015]], "Gowtham Kaki": [["Declarative programming over eventually consistent data stores", ["K. C. Sivaramakrishnan", "Gowtham Kaki", "Suresh Jagannathan"], "https://doi.org/10.1145/2737924.2737981", "pldi", 2015]], "Jeremy G. Siek": [["Blame and coercion: together again for the first time", ["Jeremy G. Siek", "Peter Thiemann", "Philip Wadler"], "https://doi.org/10.1145/2737924.2737968", "pldi", 2015]], "Peter Thiemann": [["Blame and coercion: together again for the first time", ["Jeremy G. Siek", "Peter Thiemann", "Philip Wadler"], "https://doi.org/10.1145/2737924.2737968", "pldi", 2015]], "Philip Wadler": [["Blame and coercion: together again for the first time", ["Jeremy G. Siek", "Peter Thiemann", "Philip Wadler"], "https://doi.org/10.1145/2737924.2737968", "pldi", 2015]], "Yizhou Zhang": [["Lightweight, flexible object-oriented generics", ["Yizhou Zhang", "Matthew C. Loring", "Guido Salvaneschi", "Barbara Liskov", "Andrew C. Myers"], "https://doi.org/10.1145/2737924.2738008", "pldi", 2015]], "Matthew C. Loring": [["Lightweight, flexible object-oriented generics", ["Yizhou Zhang", "Matthew C. Loring", "Guido Salvaneschi", "Barbara Liskov", "Andrew C. Myers"], "https://doi.org/10.1145/2737924.2738008", "pldi", 2015]], "Guido Salvaneschi": [["Lightweight, flexible object-oriented generics", ["Yizhou Zhang", "Matthew C. Loring", "Guido Salvaneschi", "Barbara Liskov", "Andrew C. Myers"], "https://doi.org/10.1145/2737924.2738008", "pldi", 2015]], "Barbara Liskov": [["Lightweight, flexible object-oriented generics", ["Yizhou Zhang", "Matthew C. Loring", "Guido Salvaneschi", "Barbara Liskov", "Andrew C. Myers"], "https://doi.org/10.1145/2737924.2738008", "pldi", 2015]], "Phuc C. Nguyen": [["Relatively complete counterexamples for higher-order programs", ["Phuc C. Nguyen", "David Van Horn"], "https://doi.org/10.1145/2737924.2737971", "pldi", 2015]], "David Van Horn": [["Relatively complete counterexamples for higher-order programs", ["Phuc C. Nguyen", "David Van Horn"], "https://doi.org/10.1145/2737924.2737971", "pldi", 2015]], "Duc-Hiep Chu": [["Automatic induction proofs of data-structures in imperative programs", ["Duc-Hiep Chu", "Joxan Jaffar", "Minh-Thai Trinh"], "https://doi.org/10.1145/2737924.2737984", "pldi", 2015]], "Joxan Jaffar": [["Automatic induction proofs of data-structures in imperative programs", ["Duc-Hiep Chu", "Joxan Jaffar", "Minh-Thai Trinh"], "https://doi.org/10.1145/2737924.2737984", "pldi", 2015]], "Minh-Thai Trinh": [["Automatic induction proofs of data-structures in imperative programs", ["Duc-Hiep Chu", "Joxan Jaffar", "Minh-Thai Trinh"], "https://doi.org/10.1145/2737924.2737984", "pldi", 2015]], "Quentin Carbonneaux": [["Compositional certified resource bounds", ["Quentin Carbonneaux", "Jan Hoffmann", "Zhong Shao"], "https://doi.org/10.1145/2737924.2737955", "pldi", 2015]], "Jan Hoffmann": [["Compositional certified resource bounds", ["Quentin Carbonneaux", "Jan Hoffmann", "Zhong Shao"], "https://doi.org/10.1145/2737924.2737955", "pldi", 2015]], "Zhong Shao": [["Compositional certified resource bounds", ["Quentin Carbonneaux", "Jan Hoffmann", "Zhong Shao"], "https://doi.org/10.1145/2737924.2737955", "pldi", 2015]], "Karl Crary": [["Peer-to-peer affine commitment using bitcoin", ["Karl Crary", "Michael J. Sullivan"], "https://doi.org/10.1145/2737924.2737997", "pldi", 2015]], "Michael J. Sullivan": [["Peer-to-peer affine commitment using bitcoin", ["Karl Crary", "Michael J. Sullivan"], "https://doi.org/10.1145/2737924.2737997", "pldi", 2015]], "Ton Chanh Le": [["Termination and non-termination specification inference", ["Ton Chanh Le", "Shengchao Qin", "Wei-Ngan Chin"], "https://doi.org/10.1145/2737924.2737993", "pldi", 2015]], "Shengchao Qin": [["Termination and non-termination specification inference", ["Ton Chanh Le", "Shengchao Qin", "Wei-Ngan Chin"], "https://doi.org/10.1145/2737924.2737993", "pldi", 2015]], "Wei-Ngan Chin": [["Termination and non-termination specification inference", ["Ton Chanh Le", "Shengchao Qin", "Wei-Ngan Chin"], "https://doi.org/10.1145/2737924.2737993", "pldi", 2015]], "Murali Krishna Emani": [["Celebrating diversity: a mixture of experts approach for runtime mapping in dynamic environments", ["Murali Krishna Emani", "Michael F. P. OBoyle"], "https://doi.org/10.1145/2737924.2737999", "pldi", 2015]], "Michael F. P. OBoyle": [["Celebrating diversity: a mixture of experts approach for runtime mapping in dynamic environments", ["Murali Krishna Emani", "Michael F. P. OBoyle"], "https://doi.org/10.1145/2737924.2737999", "pldi", 2015]], "Bin Ren": [["Efficient execution of recursive programs on commodity vector hardware", ["Bin Ren", "Youngjoon Jo", "Sriram Krishnamoorthy", "Kunal Agrawal", "Milind Kulkarni"], "https://doi.org/10.1145/2737924.2738004", "pldi", 2015]], "Youngjoon Jo": [["Efficient execution of recursive programs on commodity vector hardware", ["Bin Ren", "Youngjoon Jo", "Sriram Krishnamoorthy", "Kunal Agrawal", "Milind Kulkarni"], "https://doi.org/10.1145/2737924.2738004", "pldi", 2015]], "Sriram Krishnamoorthy": [["Efficient execution of recursive programs on commodity vector hardware", ["Bin Ren", "Youngjoon Jo", "Sriram Krishnamoorthy", "Kunal Agrawal", "Milind Kulkarni"], "https://doi.org/10.1145/2737924.2738004", "pldi", 2015]], "Kunal Agrawal": [["Efficient execution of recursive programs on commodity vector hardware", ["Bin Ren", "Youngjoon Jo", "Sriram Krishnamoorthy", "Kunal Agrawal", "Milind Kulkarni"], "https://doi.org/10.1145/2737924.2738004", "pldi", 2015]], "Anand Venkat": [["Loop and data transformations for sparse matrix code", ["Anand Venkat", "Mary W. Hall", "Michelle Strout"], "https://doi.org/10.1145/2737924.2738003", "pldi", 2015]], "Mary W. Hall": [["Loop and data transformations for sparse matrix code", ["Anand Venkat", "Mary W. Hall", "Michelle Strout"], "https://doi.org/10.1145/2737924.2738003", "pldi", 2015]], "Michelle Strout": [["Loop and data transformations for sparse matrix code", ["Anand Venkat", "Mary W. Hall", "Michelle Strout"], "https://doi.org/10.1145/2737924.2738003", "pldi", 2015]], "Dimitrios Prountzos": [["Synthesizing parallel graph programs via automated planning", ["Dimitrios Prountzos", "Roman Manevich", "Keshav Pingali"], "https://doi.org/10.1145/2737924.2737953", "pldi", 2015]], "Roman Manevich": [["Synthesizing parallel graph programs via automated planning", ["Dimitrios Prountzos", "Roman Manevich", "Keshav Pingali"], "https://doi.org/10.1145/2737924.2737953", "pldi", 2015]], "Keshav Pingali": [["Synthesizing parallel graph programs via automated planning", ["Dimitrios Prountzos", "Roman Manevich", "Keshav Pingali"], "https://doi.org/10.1145/2737924.2737953", "pldi", 2015]], "Stefan Marr": [["Zero-overhead metaprogramming: reflection and metaobject protocols fast and without compromises", ["Stefan Marr", "Chris Seaton", "Stephane Ducasse"], "https://doi.org/10.1145/2737924.2737963", "pldi", 2015]], "Chris Seaton": [["Zero-overhead metaprogramming: reflection and metaobject protocols fast and without compromises", ["Stefan Marr", "Chris Seaton", "Stephane Ducasse"], "https://doi.org/10.1145/2737924.2737963", "pldi", 2015]], "Stephane Ducasse": [["Zero-overhead metaprogramming: reflection and metaobject protocols fast and without compromises", ["Stefan Marr", "Chris Seaton", "Stephane Ducasse"], "https://doi.org/10.1145/2737924.2737963", "pldi", 2015]], "Chinawat Isradisaikul": [["Finding counterexamples from parsing conflicts", ["Chinawat Isradisaikul", "Andrew C. Myers"], "https://doi.org/10.1145/2737924.2737961", "pldi", 2015]], "Alan Leung": [["Interactive parser synthesis by example", ["Alan Leung", "John Sarracino", "Sorin Lerner"], "https://doi.org/10.1145/2737924.2738002", "pldi", 2015]], "John Sarracino": [["Interactive parser synthesis by example", ["Alan Leung", "John Sarracino", "Sorin Lerner"], "https://doi.org/10.1145/2737924.2738002", "pldi", 2015]], "Sorin Lerner": [["Interactive parser synthesis by example", ["Alan Leung", "John Sarracino", "Sorin Lerner"], "https://doi.org/10.1145/2737924.2738002", "pldi", 2015]], "Brandon Lucia": [["A simpler, safer programming and execution model for intermittent systems", ["Brandon Lucia", "Benjamin Ransford"], "https://doi.org/10.1145/2737924.2737978", "pldi", 2015], ["Concurrency debugging with differential schedule projections", ["Nuno Machado", "Brandon Lucia", "Luis E. T. Rodrigues"], "https://doi.org/10.1145/2737924.2737973", "pldi", 2015]], "Benjamin Ransford": [["A simpler, safer programming and execution model for intermittent systems", ["Brandon Lucia", "Benjamin Ransford"], "https://doi.org/10.1145/2737924.2737978", "pldi", 2015]], "Nuno Machado": [["Concurrency debugging with differential schedule projections", ["Nuno Machado", "Brandon Lucia", "Luis E. T. Rodrigues"], "https://doi.org/10.1145/2737924.2737973", "pldi", 2015]], "Luis E. T. Rodrigues": [["Concurrency debugging with differential schedule projections", ["Nuno Machado", "Brandon Lucia", "Luis E. T. Rodrigues"], "https://doi.org/10.1145/2737924.2737973", "pldi", 2015]], "Venkatesh Srinivasan": [["Synthesis of machine code from semantics", ["Venkatesh Srinivasan", "Thomas W. Reps"], "https://doi.org/10.1145/2737924.2737960", "pldi", 2015]], "Thomas W. Reps": [["Synthesis of machine code from semantics", ["Venkatesh Srinivasan", "Thomas W. Reps"], "https://doi.org/10.1145/2737924.2737960", "pldi", 2015]], "Laure Gonnord": [["Synthesis of ranking functions using extremal counterexamples", ["Laure Gonnord", "David Monniaux", "Gabriel Radanne"], "https://doi.org/10.1145/2737924.2737976", "pldi", 2015]], "David Monniaux": [["Synthesis of ranking functions using extremal counterexamples", ["Laure Gonnord", "David Monniaux", "Gabriel Radanne"], "https://doi.org/10.1145/2737924.2737976", "pldi", 2015]], "Gabriel Radanne": [["Synthesis of ranking functions using extremal counterexamples", ["Laure Gonnord", "David Monniaux", "Gabriel Radanne"], "https://doi.org/10.1145/2737924.2737976", "pldi", 2015]], "Peter-Michael Osera": [["Type-and-example-directed program synthesis", ["Peter-Michael Osera", "Steve Zdancewic"], "https://doi.org/10.1145/2737924.2738007", "pldi", 2015]]}